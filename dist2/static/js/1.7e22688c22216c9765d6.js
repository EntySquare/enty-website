webpackJsonp([1],{CMVF:function(e,t,i){var r,n,a,o,s,l,h,c,u=u||{},d=d||{},p=p||{REVISION:"55"};d.console=d.console||{info:function(){},log:function(){},debug:function(){},warn:function(){},error:function(){}},d.Int32Array=d.Int32Array||Array,d.Float32Array=d.Float32Array||Array,String.prototype.startsWith=String.prototype.startsWith||function(e){return this.slice(0,e.length)===e},String.prototype.endsWith=String.prototype.endsWith||function(e){var t=String(e),i=this.lastIndexOf(t);return(-1<i&&i)===this.length-t.length},String.prototype.trim=String.prototype.trim||function(){return this.replace(/^\s+|\s+$/g,"")},function(){for(var e=0,t=["ms","moz","webkit","o"],i=0;i<t.length&&!u.requestAnimationFrame;++i)u.requestAnimationFrame=u[t[i]+"RequestAnimationFrame"],u.cancelAnimationFrame=u[t[i]+"CancelAnimationFrame"]||u[t[i]+"CancelRequestAnimationFrame"];void 0===u.requestAnimationFrame&&(u.requestAnimationFrame=function(t,i){var r=Date.now(),n=Math.max(0,16-(r-e)),a=u.setTimeout(function(){t(r+n)},n);return e=r+n,a}),u.cancelAnimationFrame=u.cancelAnimationFrame||function(e){u.clearTimeout(e)}}(),p.CullFaceNone=0,p.CullFaceBack=1,p.CullFaceFront=2,p.CullFaceFrontBack=3,p.FrontFaceDirectionCW=0,p.FrontFaceDirectionCCW=1,p.BasicShadowMap=0,p.PCFShadowMap=1,p.PCFSoftShadowMap=2,p.FrontSide=0,p.BackSide=1,p.DoubleSide=2,p.NoShading=0,p.FlatShading=1,p.SmoothShading=2,p.NoColors=0,p.FaceColors=1,p.VertexColors=2,p.NoBlending=0,p.NormalBlending=1,p.AdditiveBlending=2,p.SubtractiveBlending=3,p.MultiplyBlending=4,p.CustomBlending=5,p.AddEquation=100,p.SubtractEquation=101,p.ReverseSubtractEquation=102,p.ZeroFactor=200,p.OneFactor=201,p.SrcColorFactor=202,p.OneMinusSrcColorFactor=203,p.SrcAlphaFactor=204,p.OneMinusSrcAlphaFactor=205,p.DstAlphaFactor=206,p.OneMinusDstAlphaFactor=207,p.DstColorFactor=208,p.OneMinusDstColorFactor=209,p.SrcAlphaSaturateFactor=210,p.MultiplyOperation=0,p.MixOperation=1,p.AddOperation=2,p.UVMapping=function(){},p.CubeReflectionMapping=function(){},p.CubeRefractionMapping=function(){},p.SphericalReflectionMapping=function(){},p.SphericalRefractionMapping=function(){},p.RepeatWrapping=1e3,p.ClampToEdgeWrapping=1001,p.MirroredRepeatWrapping=1002,p.NearestFilter=1003,p.NearestMipMapNearestFilter=1004,p.NearestMipMapLinearFilter=1005,p.LinearFilter=1006,p.LinearMipMapNearestFilter=1007,p.LinearMipMapLinearFilter=1008,p.UnsignedByteType=1009,p.ByteType=1010,p.ShortType=1011,p.UnsignedShortType=1012,p.IntType=1013,p.UnsignedIntType=1014,p.FloatType=1015,p.UnsignedShort4444Type=1016,p.UnsignedShort5551Type=1017,p.UnsignedShort565Type=1018,p.AlphaFormat=1019,p.RGBFormat=1020,p.RGBAFormat=1021,p.LuminanceFormat=1022,p.LuminanceAlphaFormat=1023,p.RGB_S3TC_DXT1_Format=2001,p.RGBA_S3TC_DXT1_Format=2002,p.RGBA_S3TC_DXT3_Format=2003,p.RGBA_S3TC_DXT5_Format=2004,p.Color=function(e){return void 0!==e&&this.set(e),this},p.Color.prototype={constructor:p.Color,r:1,g:1,b:1,set:function(e){switch(typeof e){case"number":this.setHex(e);break;case"string":this.setStyle(e)}},setHex:function(e){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(255&e)/255,this},setRGB:function(e,t,i){return this.r=e,this.g=t,this.b=i,this},setHSV:function(e,t,i){var r,n,a,o,s;return 0===i?this.r=this.g=this.b=0:(a=i*(1-t),o=i*(1-t*(n=6*e-(r=Math.floor(6*e)))),s=i*(1-t*(1-n)),0===r?(this.r=i,this.g=s,this.b=a):1===r?(this.r=o,this.g=i,this.b=a):2===r?(this.r=a,this.g=i,this.b=s):3===r?(this.r=a,this.g=o,this.b=i):4===r?(this.r=s,this.g=a,this.b=i):5===r&&(this.r=i,this.g=a,this.b=o)),this},setStyle:function(e){if(/^rgb\((\d+),(\d+),(\d+)\)$/i.test(e)){var t=/^rgb\((\d+),(\d+),(\d+)\)$/i.exec(e);return this.r=Math.min(255,parseInt(t[1],10))/255,this.g=Math.min(255,parseInt(t[2],10))/255,this.b=Math.min(255,parseInt(t[3],10))/255,this}if(/^rgb\((\d+)\%,(\d+)\%,(\d+)\%\)$/i.test(e)){t=/^rgb\((\d+)\%,(\d+)\%,(\d+)\%\)$/i.exec(e);return this.r=Math.min(100,parseInt(t[1],10))/100,this.g=Math.min(100,parseInt(t[2],10))/100,this.b=Math.min(100,parseInt(t[3],10))/100,this}if(/^\#([0-9a-f]{6})$/i.test(e)){t=/^\#([0-9a-f]{6})$/i.exec(e);return this.setHex(parseInt(t[1],16)),this}if(/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.test(e)){t=/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.exec(e);return this.setHex(parseInt(t[1]+t[1]+t[2]+t[2]+t[3]+t[3],16)),this}if(/^(\w+)$/i.test(e))return this.setHex(p.ColorKeywords[e]),this},copy:function(e){return this.r=e.r,this.g=e.g,this.b=e.b,this},copyGammaToLinear:function(e){return this.r=e.r*e.r,this.g=e.g*e.g,this.b=e.b*e.b,this},copyLinearToGamma:function(e){return this.r=Math.sqrt(e.r),this.g=Math.sqrt(e.g),this.b=Math.sqrt(e.b),this},convertGammaToLinear:function(){var e=this.r,t=this.g,i=this.b;return this.r=e*e,this.g=t*t,this.b=i*i,this},convertLinearToGamma:function(){return this.r=Math.sqrt(this.r),this.g=Math.sqrt(this.g),this.b=Math.sqrt(this.b),this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getStyle:function(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"},getHSV:function(e){var t,i,r=this.r,n=this.g,a=this.b,o=Math.max(Math.max(r,n),a),s=Math.min(Math.min(r,n),a),l=o;if(s===o)t=0,i=0;else{var h=o-s;i=h/o,t=r===o?(n-a)/h:n===o?2+(a-r)/h:4+(r-n)/h,(t/=6)<0&&(t+=1),t>1&&(t-=1)}return void 0===e&&(e={h:0,s:0,v:0}),e.h=t,e.s=i,e.v=l,e},add:function(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this},addColors:function(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this},addScalar:function(e){return this.r+=e,this.g+=e,this.b+=e,this},multiply:function(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this},multiplyScalar:function(e){return this.r*=e,this.g*=e,this.b*=e,this},lerp:function(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this},clone:function(){return(new p.Color).setRGB(this.r,this.g,this.b)}},p.ColorKeywords={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},p.Quaternion=function(e,t,i,r){this.x=e||0,this.y=t||0,this.z=i||0,this.w=void 0!==r?r:1},p.Quaternion.prototype={constructor:p.Quaternion,set:function(e,t,i,r){return this.x=e,this.y=t,this.z=i,this.w=r,this},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w,this},setFromEuler:function(e,t){var i=Math.cos(e.x/2),r=Math.cos(e.y/2),n=Math.cos(e.z/2),a=Math.sin(e.x/2),o=Math.sin(e.y/2),s=Math.sin(e.z/2);return void 0===t||"XYZ"===t?(this.x=a*r*n+i*o*s,this.y=i*o*n-a*r*s,this.z=i*r*s+a*o*n,this.w=i*r*n-a*o*s):"YXZ"===t?(this.x=a*r*n+i*o*s,this.y=i*o*n-a*r*s,this.z=i*r*s-a*o*n,this.w=i*r*n+a*o*s):"ZXY"===t?(this.x=a*r*n-i*o*s,this.y=i*o*n+a*r*s,this.z=i*r*s+a*o*n,this.w=i*r*n-a*o*s):"ZYX"===t?(this.x=a*r*n-i*o*s,this.y=i*o*n+a*r*s,this.z=i*r*s-a*o*n,this.w=i*r*n+a*o*s):"YZX"===t?(this.x=a*r*n+i*o*s,this.y=i*o*n+a*r*s,this.z=i*r*s-a*o*n,this.w=i*r*n-a*o*s):"XZY"===t&&(this.x=a*r*n-i*o*s,this.y=i*o*n-a*r*s,this.z=i*r*s+a*o*n,this.w=i*r*n+a*o*s),this},setFromAxisAngle:function(e,t){var i=t/2,r=Math.sin(i);return this.x=e.x*r,this.y=e.y*r,this.z=e.z*r,this.w=Math.cos(i),this},setFromRotationMatrix:function(e){var t,i=e.elements,r=i[0],n=i[4],a=i[8],o=i[1],s=i[5],l=i[9],h=i[2],c=i[6],u=i[10],d=r+s+u;return d>0?(t=.5/Math.sqrt(d+1),this.w=.25/t,this.x=(c-l)*t,this.y=(a-h)*t,this.z=(o-n)*t):r>s&&r>u?(t=2*Math.sqrt(1+r-s-u),this.w=(c-l)/t,this.x=.25*t,this.y=(n+o)/t,this.z=(a+h)/t):s>u?(t=2*Math.sqrt(1+s-r-u),this.w=(a-h)/t,this.x=(n+o)/t,this.y=.25*t,this.z=(l+c)/t):(t=2*Math.sqrt(1+u-r-s),this.w=(o-n)/t,this.x=(a+h)/t,this.y=(l+c)/t,this.z=.25*t),this},inverse:function(){return this.conjugate().normalize(),this},conjugate:function(){return this.x*=-1,this.y*=-1,this.z*=-1,this},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},normalize:function(){var e=this.length();return 0===e?(this.x=0,this.y=0,this.z=0,this.w=1):(e=1/e,this.x=this.x*e,this.y=this.y*e,this.z=this.z*e,this.w=this.w*e),this},multiply:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Quaternion's .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,t)):this.multiplyQuaternions(this,e)},multiplyQuaternions:function(e,t){var i=e.x,r=e.y,n=e.z,a=e.w,o=t.x,s=t.y,l=t.z,h=t.w;return this.x=i*h+a*o+r*l-n*s,this.y=r*h+a*s+n*o-i*l,this.z=n*h+a*l+i*s-r*o,this.w=a*h-i*o-r*s-n*l,this},multiplyVector3:function(e){return console.warn("DEPRECATED: Quaternion's .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),e.applyQuaternion(this)},slerp:function(e,t){var i=this.x,r=this.y,n=this.z,a=this.w,o=a*e.w+i*e.x+r*e.y+n*e.z;if(o<0?(this.w=-e.w,this.x=-e.x,this.y=-e.y,this.z=-e.z,o=-o):this.copy(e),o>=1)return this.w=a,this.x=i,this.y=r,this.z=n,this;var s=Math.acos(o),l=Math.sqrt(1-o*o);if(Math.abs(l)<.001)return this.w=.5*(a+this.w),this.x=.5*(i+this.x),this.y=.5*(r+this.y),this.z=.5*(n+this.z),this;var h=Math.sin((1-t)*s)/l,c=Math.sin(t*s)/l;return this.w=a*h+this.w*c,this.x=i*h+this.x*c,this.y=r*h+this.y*c,this.z=n*h+this.z*c,this},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w},clone:function(){return new p.Quaternion(this.x,this.y,this.z,this.w)}},p.Quaternion.slerp=function(e,t,i,r){return i.copy(e).slerp(t,r)},p.Vector2=function(e,t){this.x=e||0,this.y=t||0},p.Vector2.prototype={constructor:p.Vector2,set:function(e,t){return this.x=e,this.y=t,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}},copy:function(e){return this.x=e.x,this.y=e.y,this},add:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector2's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this)},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this},addScalar:function(e){return this.x+=e,this.y+=e,this},sub:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector2's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this)},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this},multiplyScalar:function(e){return this.x*=e,this.y*=e,this},divideScalar:function(e){return 0!==e?(this.x/=e,this.y/=e):this.set(0,0),this},min:function(e){return this.x>e.x&&(this.x=e.x),this.y>e.y&&(this.y=e.y),this},max:function(e){return this.x<e.x&&(this.x=e.x),this.y<e.y&&(this.y=e.y),this},clamp:function(e,t){return this.x<e.x?this.x=e.x:this.x>t.x&&(this.x=t.x),this.y<e.y?this.y=e.y:this.y>t.y&&(this.y=t.y),this},negate:function(){return this.multiplyScalar(-1)},dot:function(e){return this.x*e.x+this.y*e.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){var t=this.x-e.x,i=this.y-e.y;return t*t+i*i},setLength:function(e){var t=this.length();return 0!==t&&e!==t&&this.multiplyScalar(e/t),this},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this},equals:function(e){return e.x===this.x&&e.y===this.y},clone:function(){return new p.Vector2(this.x,this.y)}},p.Vector3=function(e,t,i){this.x=e||0,this.y=t||0,this.z=i||0},p.Vector3.prototype={constructor:p.Vector3,set:function(e,t,i){return this.x=e,this.y=t,this.z=i,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setZ:function(e){return this.z=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this},add:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector3's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this)},addScalar:function(e){return this.x+=e,this.y+=e,this.z+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this},sub:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector3's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this)},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this},multiply:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector3's .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,t)):(this.x*=e.x,this.y*=e.y,this.z*=e.z,this)},multiplyScalar:function(e){return this.x*=e,this.y*=e,this.z*=e,this},multiplyVectors:function(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this},applyMatrix3:function(e){var t=this.x,i=this.y,r=this.z,n=e.elements;return this.x=n[0]*t+n[3]*i+n[6]*r,this.y=n[1]*t+n[4]*i+n[7]*r,this.z=n[2]*t+n[5]*i+n[8]*r,this},applyMatrix4:function(e){var t=this.x,i=this.y,r=this.z,n=e.elements;return this.x=n[0]*t+n[4]*i+n[8]*r+n[12],this.y=n[1]*t+n[5]*i+n[9]*r+n[13],this.z=n[2]*t+n[6]*i+n[10]*r+n[14],this},applyProjection:function(e){var t=this.x,i=this.y,r=this.z,n=e.elements,a=1/(n[3]*t+n[7]*i+n[11]*r+n[15]);return this.x=(n[0]*t+n[4]*i+n[8]*r+n[12])*a,this.y=(n[1]*t+n[5]*i+n[9]*r+n[13])*a,this.z=(n[2]*t+n[6]*i+n[10]*r+n[14])*a,this},applyQuaternion:function(e){var t=this.x,i=this.y,r=this.z,n=e.x,a=e.y,o=e.z,s=e.w,l=s*t+a*r-o*i,h=s*i+o*t-n*r,c=s*r+n*i-a*t,u=-n*t-a*i-o*r;return this.x=l*s+u*-n+h*-o-c*-a,this.y=h*s+u*-a+c*-n-l*-o,this.z=c*s+u*-o+l*-a-h*-n,this},applyEuler:function(e,t){var i=p.Vector3.__q1.setFromEuler(e,t);return this.applyQuaternion(i),this},applyAxisAngle:function(e,t){var i=p.Vector3.__q1.setFromAxisAngle(e,t);return this.applyQuaternion(i),this},divide:function(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this},divideScalar:function(e){return 0!==e?(this.x/=e,this.y/=e,this.z/=e):(this.x=0,this.y=0,this.z=0),this},min:function(e){return this.x>e.x&&(this.x=e.x),this.y>e.y&&(this.y=e.y),this.z>e.z&&(this.z=e.z),this},max:function(e){return this.x<e.x&&(this.x=e.x),this.y<e.y&&(this.y=e.y),this.z<e.z&&(this.z=e.z),this},clamp:function(e,t){return this.x<e.x?this.x=e.x:this.x>t.x&&(this.x=t.x),this.y<e.y?this.y=e.y:this.y>t.y&&(this.y=t.y),this.z<e.z?this.z=e.z:this.z>t.z&&(this.z=t.z),this},negate:function(){return this.multiplyScalar(-1)},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(e){var t=this.length();return 0!==t&&e!==t&&this.multiplyScalar(e/t),this},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this},cross:function(e,t){if(void 0!==t)return console.warn("DEPRECATED: Vector3's .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,t);var i=this.x,r=this.y,n=this.z;return this.x=r*e.z-n*e.y,this.y=n*e.x-i*e.z,this.z=i*e.y-r*e.x,this},crossVectors:function(e,t){return this.x=e.y*t.z-e.z*t.y,this.y=e.z*t.x-e.x*t.z,this.z=e.x*t.y-e.y*t.x,this},angleTo:function(e){return Math.acos(this.dot(e)/this.length()/e.length())},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){var t=this.x-e.x,i=this.y-e.y,r=this.z-e.z;return t*t+i*i+r*r},getPositionFromMatrix:function(e){return this.x=e.elements[12],this.y=e.elements[13],this.z=e.elements[14],this},setEulerFromRotationMatrix:function(e,t){function i(e){return Math.min(Math.max(e,-1),1)}var r=e.elements,n=r[0],a=r[4],o=r[8],s=r[1],l=r[5],h=r[9],c=r[2],u=r[6],d=r[10];return void 0===t||"XYZ"===t?(this.y=Math.asin(i(o)),Math.abs(o)<.99999?(this.x=Math.atan2(-h,d),this.z=Math.atan2(-a,n)):(this.x=Math.atan2(u,l),this.z=0)):"YXZ"===t?(this.x=Math.asin(-i(h)),Math.abs(h)<.99999?(this.y=Math.atan2(o,d),this.z=Math.atan2(s,l)):(this.y=Math.atan2(-c,n),this.z=0)):"ZXY"===t?(this.x=Math.asin(i(u)),Math.abs(u)<.99999?(this.y=Math.atan2(-c,d),this.z=Math.atan2(-a,l)):(this.y=0,this.z=Math.atan2(s,n))):"ZYX"===t?(this.y=Math.asin(-i(c)),Math.abs(c)<.99999?(this.x=Math.atan2(u,d),this.z=Math.atan2(s,n)):(this.x=0,this.z=Math.atan2(-a,l))):"YZX"===t?(this.z=Math.asin(i(s)),Math.abs(s)<.99999?(this.x=Math.atan2(-h,l),this.y=Math.atan2(-c,n)):(this.x=0,this.y=Math.atan2(o,d))):"XZY"===t&&(this.z=Math.asin(-i(a)),Math.abs(a)<.99999?(this.x=Math.atan2(u,l),this.y=Math.atan2(o,n)):(this.x=Math.atan2(-h,d),this.y=0)),this},setEulerFromQuaternion:function(e,t){function i(e){return Math.min(Math.max(e,-1),1)}var r=e.x*e.x,n=e.y*e.y,a=e.z*e.z,o=e.w*e.w;return void 0===t||"XYZ"===t?(this.x=Math.atan2(2*(e.x*e.w-e.y*e.z),o-r-n+a),this.y=Math.asin(i(2*(e.x*e.z+e.y*e.w))),this.z=Math.atan2(2*(e.z*e.w-e.x*e.y),o+r-n-a)):"YXZ"===t?(this.x=Math.asin(i(2*(e.x*e.w-e.y*e.z))),this.y=Math.atan2(2*(e.x*e.z+e.y*e.w),o-r-n+a),this.z=Math.atan2(2*(e.x*e.y+e.z*e.w),o-r+n-a)):"ZXY"===t?(this.x=Math.asin(i(2*(e.x*e.w+e.y*e.z))),this.y=Math.atan2(2*(e.y*e.w-e.z*e.x),o-r-n+a),this.z=Math.atan2(2*(e.z*e.w-e.x*e.y),o-r+n-a)):"ZYX"===t?(this.x=Math.atan2(2*(e.x*e.w+e.z*e.y),o-r-n+a),this.y=Math.asin(i(2*(e.y*e.w-e.x*e.z))),this.z=Math.atan2(2*(e.x*e.y+e.z*e.w),o+r-n-a)):"YZX"===t?(this.x=Math.atan2(2*(e.x*e.w-e.z*e.y),o-r+n-a),this.y=Math.atan2(2*(e.y*e.w-e.x*e.z),o+r-n-a),this.z=Math.asin(i(2*(e.x*e.y+e.z*e.w)))):"XZY"===t&&(this.x=Math.atan2(2*(e.x*e.w+e.y*e.z),o-r+n-a),this.y=Math.atan2(2*(e.x*e.z+e.y*e.w),o+r-n-a),this.z=Math.asin(i(2*(e.z*e.w-e.x*e.y)))),this},getScaleFromMatrix:function(e){var t=this.set(e.elements[0],e.elements[1],e.elements[2]).length(),i=this.set(e.elements[4],e.elements[5],e.elements[6]).length(),r=this.set(e.elements[8],e.elements[9],e.elements[10]).length();return this.x=t,this.y=i,this.z=r,this},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z},clone:function(){return new p.Vector3(this.x,this.y,this.z)}},p.Vector3.__q1=new p.Quaternion,p.Vector4=function(e,t,i,r){this.x=e||0,this.y=t||0,this.z=i||0,this.w=void 0!==r?r:1},p.Vector4.prototype={constructor:p.Vector4,set:function(e,t,i,r){return this.x=e,this.y=t,this.z=i,this.w=r,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setZ:function(e){return this.z=e,this},setW:function(e){return this.w=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0!==e.w?e.w:1,this},add:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector4's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this)},addScalar:function(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this},sub:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector4's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this)},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this},multiplyScalar:function(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this},applyMatrix4:function(e){var t=this.x,i=this.y,r=this.z,n=this.w,a=e.elements;return this.x=a[0]*t+a[4]*i+a[8]*r+a[12]*n,this.y=a[1]*t+a[5]*i+a[9]*r+a[13]*n,this.z=a[2]*t+a[6]*i+a[10]*r+a[14]*n,this.w=a[3]*t+a[7]*i+a[11]*r+a[15]*n,this},divideScalar:function(e){return 0!==e?(this.x/=e,this.y/=e,this.z/=e,this.w/=e):(this.x=0,this.y=0,this.z=0,this.w=1),this},min:function(e){return this.x>e.x&&(this.x=e.x),this.y>e.y&&(this.y=e.y),this.z>e.z&&(this.z=e.z),this.w>e.w&&(this.w=e.w),this},max:function(e){return this.x<e.x&&(this.x=e.x),this.y<e.y&&(this.y=e.y),this.z<e.z&&(this.z=e.z),this.w<e.w&&(this.w=e.w),this},clamp:function(e,t){return this.x<e.x?this.x=e.x:this.x>t.x&&(this.x=t.x),this.y<e.y?this.y=e.y:this.y>t.y&&(this.y=t.y),this.z<e.z?this.z=e.z:this.z>t.z&&(this.z=t.z),this.w<e.w?this.w=e.w:this.w>t.w&&(this.w=t.w),this},negate:function(){return this.multiplyScalar(-1)},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length())},setLength:function(e){var t=this.length();return 0!==t&&e!==t&&this.multiplyScalar(e/t),this},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w},clone:function(){return new p.Vector4(this.x,this.y,this.z,this.w)},setAxisAngleFromQuaternion:function(e){this.w=2*Math.acos(e.w);var t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this},setAxisAngleFromRotationMatrix:function(e){var t,i,r,n,a=e.elements,o=a[0],s=a[4],l=a[8],h=a[1],c=a[5],u=a[9],d=a[2],p=a[6],f=a[10];if(Math.abs(s-h)<.01&&Math.abs(l-d)<.01&&Math.abs(u-p)<.01){if(Math.abs(s+h)<.1&&Math.abs(l+d)<.1&&Math.abs(u+p)<.1&&Math.abs(o+c+f-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;var m=(o+1)/2,g=(c+1)/2,v=(f+1)/2,y=(s+h)/4,x=(l+d)/4,_=(u+p)/4;return m>g&&m>v?m<.01?(i=0,r=.707106781,n=.707106781):(r=y/(i=Math.sqrt(m)),n=x/i):g>v?g<.01?(i=.707106781,r=0,n=.707106781):(i=y/(r=Math.sqrt(g)),n=_/r):v<.01?(i=.707106781,r=.707106781,n=0):(i=x/(n=Math.sqrt(v)),r=_/n),this.set(i,r,n,t),this}var w=Math.sqrt((p-u)*(p-u)+(l-d)*(l-d)+(h-s)*(h-s));return Math.abs(w)<.001&&(w=1),this.x=(p-u)/w,this.y=(l-d)/w,this.z=(h-s)/w,this.w=Math.acos((o+c+f-1)/2),this}},p.Box2=function(e,t){this.min=void 0!==e?e:new p.Vector2(1/0,1/0),this.max=void 0!==t?t:new p.Vector2(-1/0,-1/0)},p.Box2.prototype={constructor:p.Box2,set:function(e,t){return this.min.copy(e),this.max.copy(t),this},setFromPoints:function(e){if(e.length>0){var t=e[0];this.min.copy(t),this.max.copy(t);for(var i=1,r=e.length;i<r;i++)(t=e[i]).x<this.min.x?this.min.x=t.x:t.x>this.max.x&&(this.max.x=t.x),t.y<this.min.y?this.min.y=t.y:t.y>this.max.y&&(this.max.y=t.y)}else this.makeEmpty();return this},setFromCenterAndSize:function(e,t){var i=p.Box2.__v1.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this},copy:function(e){return this.min.copy(e.min),this.max.copy(e.max),this},makeEmpty:function(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},center:function(e){return(e||new p.Vector2).addVectors(this.min,this.max).multiplyScalar(.5)},size:function(e){return(e||new p.Vector2).subVectors(this.max,this.min)},expandByPoint:function(e){return this.min.min(e),this.max.max(e),this},expandByVector:function(e){return this.min.sub(e),this.max.add(e),this},expandByScalar:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this},containsPoint:function(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)},containsBox:function(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y},getParameter:function(e){return new p.Vector2((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))},isIntersectionBox:function(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)},clampPoint:function(e,t){return(t||new p.Vector2).copy(e).clamp(this.min,this.max)},distanceToPoint:function(e){return p.Box2.__v1.copy(e).clamp(this.min,this.max).sub(e).length()},intersect:function(e){return this.min.max(e.min),this.max.min(e.max),this},union:function(e){return this.min.min(e.min),this.max.max(e.max),this},translate:function(e){return this.min.add(e),this.max.add(e),this},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)},clone:function(){return(new p.Box2).copy(this)}},p.Box2.__v1=new p.Vector2,p.Box3=function(e,t){this.min=void 0!==e?e:new p.Vector3(1/0,1/0,1/0),this.max=void 0!==t?t:new p.Vector3(-1/0,-1/0,-1/0)},p.Box3.prototype={constructor:p.Box3,set:function(e,t){return this.min.copy(e),this.max.copy(t),this},setFromPoints:function(e){if(e.length>0){var t=e[0];this.min.copy(t),this.max.copy(t);for(var i=1,r=e.length;i<r;i++)(t=e[i]).x<this.min.x?this.min.x=t.x:t.x>this.max.x&&(this.max.x=t.x),t.y<this.min.y?this.min.y=t.y:t.y>this.max.y&&(this.max.y=t.y),t.z<this.min.z?this.min.z=t.z:t.z>this.max.z&&(this.max.z=t.z)}else this.makeEmpty();return this},setFromCenterAndSize:function(e,t){var i=p.Box3.__v1.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this},copy:function(e){return this.min.copy(e.min),this.max.copy(e.max),this},makeEmpty:function(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},center:function(e){return(e||new p.Vector3).addVectors(this.min,this.max).multiplyScalar(.5)},size:function(e){return(e||new p.Vector3).subVectors(this.max,this.min)},expandByPoint:function(e){return this.min.min(e),this.max.max(e),this},expandByVector:function(e){return this.min.sub(e),this.max.add(e),this},expandByScalar:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this},containsPoint:function(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)},containsBox:function(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z},getParameter:function(e){return new p.Vector3((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))},isIntersectionBox:function(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)},clampPoint:function(e,t){t||new p.Vector3;return(new p.Vector3).copy(e).clamp(this.min,this.max)},distanceToPoint:function(e){return p.Box3.__v1.copy(e).clamp(this.min,this.max).sub(e).length()},getBoundingSphere:function(e){var t=e||new p.Sphere;return t.center=this.center(),t.radius=.5*this.size(p.Box3.__v0).length(),t},intersect:function(e){return this.min.max(e.min),this.max.min(e.max),this},union:function(e){return this.min.min(e.min),this.max.max(e.max),this},transform:function(e){var t=[p.Box3.__v0.set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),p.Box3.__v0.set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),p.Box3.__v1.set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),p.Box3.__v2.set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),p.Box3.__v3.set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),p.Box3.__v4.set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),p.Box3.__v5.set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),p.Box3.__v6.set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),p.Box3.__v7.set(this.max.x,this.max.y,this.max.z).applyMatrix4(e)];return this.makeEmpty(),this.setFromPoints(t),this},translate:function(e){return this.min.add(e),this.max.add(e),this},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)},clone:function(){return(new p.Box3).copy(this)}},p.Box3.__v0=new p.Vector3,p.Box3.__v1=new p.Vector3,p.Box3.__v2=new p.Vector3,p.Box3.__v3=new p.Vector3,p.Box3.__v4=new p.Vector3,p.Box3.__v5=new p.Vector3,p.Box3.__v6=new p.Vector3,p.Box3.__v7=new p.Vector3,p.Matrix3=function(e,t,i,r,n,a,o,s,l){this.elements=new Float32Array(9),this.set(void 0!==e?e:1,t||0,i||0,r||0,void 0!==n?n:1,a||0,o||0,s||0,void 0!==l?l:1)},p.Matrix3.prototype={constructor:p.Matrix3,set:function(e,t,i,r,n,a,o,s,l){var h=this.elements;return h[0]=e,h[3]=t,h[6]=i,h[1]=r,h[4]=n,h[7]=a,h[2]=o,h[5]=s,h[8]=l,this},identity:function(){return this.set(1,0,0,0,1,0,0,0,1),this},copy:function(e){var t=e.elements;return this.set(t[0],t[3],t[6],t[1],t[4],t[7],t[2],t[5],t[8]),this},multiplyVector3:function(e){return console.warn("DEPRECATED: Matrix3's .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},multiplyVector3Array:function(e){for(var t=p.Matrix3.__v1,i=0,r=e.length;i<r;i+=3)t.x=e[i],t.y=e[i+1],t.z=e[i+2],t.applyMatrix3(this),e[i]=t.x,e[i+1]=t.y,e[i+2]=t.z;return e},multiplyScalar:function(e){var t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this},determinant:function(){var e=this.elements,t=e[0],i=e[1],r=e[2],n=e[3],a=e[4],o=e[5],s=e[6],l=e[7],h=e[8];return t*a*h-t*o*l-i*n*h+i*o*s+r*n*l-r*a*s},getInverse:function(e,t){var i=e.elements,r=this.elements;r[0]=i[10]*i[5]-i[6]*i[9],r[1]=-i[10]*i[1]+i[2]*i[9],r[2]=i[6]*i[1]-i[2]*i[5],r[3]=-i[10]*i[4]+i[6]*i[8],r[4]=i[10]*i[0]-i[2]*i[8],r[5]=-i[6]*i[0]+i[2]*i[4],r[6]=i[9]*i[4]-i[5]*i[8],r[7]=-i[9]*i[0]+i[1]*i[8],r[8]=i[5]*i[0]-i[1]*i[4];var n=i[0]*r[0]+i[1]*r[3]+i[2]*r[6];if(0===n){var a="Matrix3.getInverse(): can't invert matrix, determinant is 0";if(t)throw new Error(a);return console.warn(a),this.identity(),this}return this.multiplyScalar(1/n),this},transpose:function(){var e,t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this},transposeIntoArray:function(e){var t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this},clone:function(){var e=this.elements;return new p.Matrix3(e[0],e[3],e[6],e[1],e[4],e[7],e[2],e[5],e[8])}},p.Matrix3.__v1=new p.Vector3,p.Matrix4=function(e,t,i,r,n,a,o,s,l,h,c,u,d,p,f,m){this.elements=new Float32Array(16),this.set(void 0!==e?e:1,t||0,i||0,r||0,n||0,void 0!==a?a:1,o||0,s||0,l||0,h||0,void 0!==c?c:1,u||0,d||0,p||0,f||0,void 0!==m?m:1)},p.Matrix4.prototype={constructor:p.Matrix4,set:function(e,t,i,r,n,a,o,s,l,h,c,u,d,p,f,m){var g=this.elements;return g[0]=e,g[4]=t,g[8]=i,g[12]=r,g[1]=n,g[5]=a,g[9]=o,g[13]=s,g[2]=l,g[6]=h,g[10]=c,g[14]=u,g[3]=d,g[7]=p,g[11]=f,g[15]=m,this},identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},copy:function(e){var t=e.elements;return this.set(t[0],t[4],t[8],t[12],t[1],t[5],t[9],t[13],t[2],t[6],t[10],t[14],t[3],t[7],t[11],t[15]),this},setRotationFromEuler:function(e,t){var i=this.elements,r=e.x,n=e.y,a=e.z,o=Math.cos(r),s=Math.sin(r),l=Math.cos(n),h=Math.sin(n),c=Math.cos(a),u=Math.sin(a);if(void 0===t||"XYZ"===t){var d=o*c,p=o*u,f=s*c,m=s*u;i[0]=l*c,i[4]=-l*u,i[8]=h,i[1]=p+f*h,i[5]=d-m*h,i[9]=-s*l,i[2]=m-d*h,i[6]=f+p*h,i[10]=o*l}else if("YXZ"===t){var g=l*c,v=l*u,y=h*c,x=h*u;i[0]=g+x*s,i[4]=y*s-v,i[8]=o*h,i[1]=o*u,i[5]=o*c,i[9]=-s,i[2]=v*s-y,i[6]=x+g*s,i[10]=o*l}else if("ZXY"===t){g=l*c,v=l*u,y=h*c,x=h*u;i[0]=g-x*s,i[4]=-o*u,i[8]=y+v*s,i[1]=v+y*s,i[5]=o*c,i[9]=x-g*s,i[2]=-o*h,i[6]=s,i[10]=o*l}else if("ZYX"===t){d=o*c,p=o*u,f=s*c,m=s*u;i[0]=l*c,i[4]=f*h-p,i[8]=d*h+m,i[1]=l*u,i[5]=m*h+d,i[9]=p*h-f,i[2]=-h,i[6]=s*l,i[10]=o*l}else if("YZX"===t){var _=o*l,w=o*h,b=s*l,M=s*h;i[0]=l*c,i[4]=M-_*u,i[8]=b*u+w,i[1]=u,i[5]=o*c,i[9]=-s*c,i[2]=-h*c,i[6]=w*u+b,i[10]=_-M*u}else if("XZY"===t){_=o*l,w=o*h,b=s*l,M=s*h;i[0]=l*c,i[4]=-u,i[8]=h*c,i[1]=_*u+M,i[5]=o*c,i[9]=w*u-b,i[2]=b*u-w,i[6]=s*c,i[10]=M*u+_}return this},setRotationFromQuaternion:function(e){var t=this.elements,i=e.x,r=e.y,n=e.z,a=e.w,o=i+i,s=r+r,l=n+n,h=i*o,c=i*s,u=i*l,d=r*s,p=r*l,f=n*l,m=a*o,g=a*s,v=a*l;return t[0]=1-(d+f),t[4]=c-v,t[8]=u+g,t[1]=c+v,t[5]=1-(h+f),t[9]=p-m,t[2]=u-g,t[6]=p+m,t[10]=1-(h+d),this},lookAt:function(e,t,i){var r=this.elements,n=p.Matrix4.__v1,a=p.Matrix4.__v2,o=p.Matrix4.__v3;return o.subVectors(e,t).normalize(),0===o.length()&&(o.z=1),n.crossVectors(i,o).normalize(),0===n.length()&&(o.x+=1e-4,n.crossVectors(i,o).normalize()),a.crossVectors(o,n),r[0]=n.x,r[4]=a.x,r[8]=o.x,r[1]=n.y,r[5]=a.y,r[9]=o.y,r[2]=n.z,r[6]=a.z,r[10]=o.z,this},multiply:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Matrix4's .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,t)):this.multiplyMatrices(this,e)},multiplyMatrices:function(e,t){var i=e.elements,r=t.elements,n=this.elements,a=i[0],o=i[4],s=i[8],l=i[12],h=i[1],c=i[5],u=i[9],d=i[13],p=i[2],f=i[6],m=i[10],g=i[14],v=i[3],y=i[7],x=i[11],_=i[15],w=r[0],b=r[4],M=r[8],S=r[12],T=r[1],E=r[5],A=r[9],C=r[13],L=r[2],R=r[6],P=r[10],D=r[14],F=r[3],z=r[7],I=r[11],N=r[15];return n[0]=a*w+o*T+s*L+l*F,n[4]=a*b+o*E+s*R+l*z,n[8]=a*M+o*A+s*P+l*I,n[12]=a*S+o*C+s*D+l*N,n[1]=h*w+c*T+u*L+d*F,n[5]=h*b+c*E+u*R+d*z,n[9]=h*M+c*A+u*P+d*I,n[13]=h*S+c*C+u*D+d*N,n[2]=p*w+f*T+m*L+g*F,n[6]=p*b+f*E+m*R+g*z,n[10]=p*M+f*A+m*P+g*I,n[14]=p*S+f*C+m*D+g*N,n[3]=v*w+y*T+x*L+_*F,n[7]=v*b+y*E+x*R+_*z,n[11]=v*M+y*A+x*P+_*I,n[15]=v*S+y*C+x*D+_*N,this},multiplyToArray:function(e,t,i){var r=this.elements;return this.multiplyMatrices(e,t),i[0]=r[0],i[1]=r[1],i[2]=r[2],i[3]=r[3],i[4]=r[4],i[5]=r[5],i[6]=r[6],i[7]=r[7],i[8]=r[8],i[9]=r[9],i[10]=r[10],i[11]=r[11],i[12]=r[12],i[13]=r[13],i[14]=r[14],i[15]=r[15],this},multiplyScalar:function(e){var t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this},multiplyVector3:function(e){return console.warn("DEPRECATED: Matrix4's .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead."),e.applyProjection(this)},multiplyVector4:function(e){return console.warn("DEPRECATED: Matrix4's .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},multiplyVector3Array:function(e){for(var t=p.Matrix4.__v1,i=0,r=e.length;i<r;i+=3)t.x=e[i],t.y=e[i+1],t.z=e[i+2],t.applyProjection(this),e[i]=t.x,e[i+1]=t.y,e[i+2]=t.z;return e},rotateAxis:function(e){var t=this.elements,i=e.x,r=e.y,n=e.z;return e.x=i*t[0]+r*t[4]+n*t[8],e.y=i*t[1]+r*t[5]+n*t[9],e.z=i*t[2]+r*t[6]+n*t[10],e.normalize(),e},crossVector:function(e){var t=this.elements,i=new p.Vector4;return i.x=t[0]*e.x+t[4]*e.y+t[8]*e.z+t[12]*e.w,i.y=t[1]*e.x+t[5]*e.y+t[9]*e.z+t[13]*e.w,i.z=t[2]*e.x+t[6]*e.y+t[10]*e.z+t[14]*e.w,i.w=e.w?t[3]*e.x+t[7]*e.y+t[11]*e.z+t[15]*e.w:1,i},determinant:function(){var e=this.elements,t=e[0],i=e[4],r=e[8],n=e[12],a=e[1],o=e[5],s=e[9],l=e[13],h=e[2],c=e[6],u=e[10],d=e[14];return e[3]*(+n*s*c-r*l*c-n*o*u+i*l*u+r*o*d-i*s*d)+e[7]*(+t*s*d-t*l*u+n*a*u-r*a*d+r*l*h-n*s*h)+e[11]*(+t*l*c-t*o*d-n*a*c+i*a*d+n*o*h-i*l*h)+e[15]*(-r*o*h-t*s*c+t*o*u+r*a*c-i*a*u+i*s*h)},transpose:function(){var e,t=this.elements;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this},flattenToArray:function(e){var t=this.elements;return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e[9]=t[9],e[10]=t[10],e[11]=t[11],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15],e},flattenToArrayOffset:function(e,t){var i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e[t+9]=i[9],e[t+10]=i[10],e[t+11]=i[11],e[t+12]=i[12],e[t+13]=i[13],e[t+14]=i[14],e[t+15]=i[15],e},getPosition:function(){var e=this.elements;return p.Matrix4.__v1.set(e[12],e[13],e[14])},setPosition:function(e){var t=this.elements;return t[12]=e.x,t[13]=e.y,t[14]=e.z,this},getColumnX:function(){var e=this.elements;return p.Matrix4.__v1.set(e[0],e[1],e[2])},getColumnY:function(){var e=this.elements;return p.Matrix4.__v1.set(e[4],e[5],e[6])},getColumnZ:function(){var e=this.elements;return p.Matrix4.__v1.set(e[8],e[9],e[10])},getInverse:function(e,t){var i=this.elements,r=e.elements,n=r[0],a=r[4],o=r[8],s=r[12],l=r[1],h=r[5],c=r[9],u=r[13],d=r[2],p=r[6],f=r[10],m=r[14],g=r[3],v=r[7],y=r[11],x=r[15];i[0]=c*m*v-u*f*v+u*p*y-h*m*y-c*p*x+h*f*x,i[4]=s*f*v-o*m*v-s*p*y+a*m*y+o*p*x-a*f*x,i[8]=o*u*v-s*c*v+s*h*y-a*u*y-o*h*x+a*c*x,i[12]=s*c*p-o*u*p-s*h*f+a*u*f+o*h*m-a*c*m,i[1]=u*f*g-c*m*g-u*d*y+l*m*y+c*d*x-l*f*x,i[5]=o*m*g-s*f*g+s*d*y-n*m*y-o*d*x+n*f*x,i[9]=s*c*g-o*u*g-s*l*y+n*u*y+o*l*x-n*c*x,i[13]=o*u*d-s*c*d+s*l*f-n*u*f-o*l*m+n*c*m,i[2]=h*m*g-u*p*g+u*d*v-l*m*v-h*d*x+l*p*x,i[6]=s*p*g-a*m*g-s*d*v+n*m*v+a*d*x-n*p*x,i[10]=a*u*g-s*h*g+s*l*v-n*u*v-a*l*x+n*h*x,i[14]=s*h*d-a*u*d-s*l*p+n*u*p+a*l*m-n*h*m,i[3]=c*p*g-h*f*g-c*d*v+l*f*v+h*d*y-l*p*y,i[7]=a*f*g-o*p*g+o*d*v-n*f*v-a*d*y+n*p*y,i[11]=o*h*g-a*c*g-o*l*v+n*c*v+a*l*y-n*h*y,i[15]=a*c*d-o*h*d+o*l*p-n*c*p-a*l*f+n*h*f;var _=r[0]*i[0]+r[1]*i[4]+r[2]*i[8]+r[3]*i[12];if(0==_){var w="Matrix4.getInverse(): can't invert matrix, determinant is 0";if(t)throw new Error(w);return console.warn(w),this.identity(),this}return this.multiplyScalar(1/_),this},compose:function(e,t,i){var r=this.elements,n=p.Matrix4.__m1,a=p.Matrix4.__m2;return n.identity(),n.setRotationFromQuaternion(t),a.makeScale(i.x,i.y,i.z),this.multiplyMatrices(n,a),r[12]=e.x,r[13]=e.y,r[14]=e.z,this},decompose:function(e,t,i){var r=this.elements,n=p.Matrix4.__v1,a=p.Matrix4.__v2,o=p.Matrix4.__v3;n.set(r[0],r[1],r[2]),a.set(r[4],r[5],r[6]),o.set(r[8],r[9],r[10]),e=e instanceof p.Vector3?e:new p.Vector3,t=t instanceof p.Quaternion?t:new p.Quaternion,(i=i instanceof p.Vector3?i:new p.Vector3).x=n.length(),i.y=a.length(),i.z=o.length(),e.x=r[12],e.y=r[13],e.z=r[14];var s=p.Matrix4.__m1;return s.copy(this),s.elements[0]/=i.x,s.elements[1]/=i.x,s.elements[2]/=i.x,s.elements[4]/=i.y,s.elements[5]/=i.y,s.elements[6]/=i.y,s.elements[8]/=i.z,s.elements[9]/=i.z,s.elements[10]/=i.z,t.setFromRotationMatrix(s),[e,t,i]},extractPosition:function(e){var t=this.elements,i=e.elements;return t[12]=i[12],t[13]=i[13],t[14]=i[14],this},extractRotation:function(e){var t=this.elements,i=e.elements,r=p.Matrix4.__v1,n=1/r.set(i[0],i[1],i[2]).length(),a=1/r.set(i[4],i[5],i[6]).length(),o=1/r.set(i[8],i[9],i[10]).length();return t[0]=i[0]*n,t[1]=i[1]*n,t[2]=i[2]*n,t[4]=i[4]*a,t[5]=i[5]*a,t[6]=i[6]*a,t[8]=i[8]*o,t[9]=i[9]*o,t[10]=i[10]*o,this},translate:function(e){var t=this.elements,i=e.x,r=e.y,n=e.z;return t[12]=t[0]*i+t[4]*r+t[8]*n+t[12],t[13]=t[1]*i+t[5]*r+t[9]*n+t[13],t[14]=t[2]*i+t[6]*r+t[10]*n+t[14],t[15]=t[3]*i+t[7]*r+t[11]*n+t[15],this},rotateX:function(e){var t=this.elements,i=t[4],r=t[5],n=t[6],a=t[7],o=t[8],s=t[9],l=t[10],h=t[11],c=Math.cos(e),u=Math.sin(e);return t[4]=c*i+u*o,t[5]=c*r+u*s,t[6]=c*n+u*l,t[7]=c*a+u*h,t[8]=c*o-u*i,t[9]=c*s-u*r,t[10]=c*l-u*n,t[11]=c*h-u*a,this},rotateY:function(e){var t=this.elements,i=t[0],r=t[1],n=t[2],a=t[3],o=t[8],s=t[9],l=t[10],h=t[11],c=Math.cos(e),u=Math.sin(e);return t[0]=c*i-u*o,t[1]=c*r-u*s,t[2]=c*n-u*l,t[3]=c*a-u*h,t[8]=c*o+u*i,t[9]=c*s+u*r,t[10]=c*l+u*n,t[11]=c*h+u*a,this},rotateZ:function(e){var t=this.elements,i=t[0],r=t[1],n=t[2],a=t[3],o=t[4],s=t[5],l=t[6],h=t[7],c=Math.cos(e),u=Math.sin(e);return t[0]=c*i+u*o,t[1]=c*r+u*s,t[2]=c*n+u*l,t[3]=c*a+u*h,t[4]=c*o-u*i,t[5]=c*s-u*r,t[6]=c*l-u*n,t[7]=c*h-u*a,this},rotateByAxis:function(e,t){var i=this.elements;if(1===e.x&&0===e.y&&0===e.z)return this.rotateX(t);if(0===e.x&&1===e.y&&0===e.z)return this.rotateY(t);if(0===e.x&&0===e.y&&1===e.z)return this.rotateZ(t);var r=e.x,n=e.y,a=e.z,o=Math.sqrt(r*r+n*n+a*a),s=(r/=o)*r,l=(n/=o)*n,h=(a/=o)*a,c=Math.cos(t),u=Math.sin(t),d=1-c,p=r*n*d,f=r*a*d,m=n*a*d,g=r*u,v=n*u,y=a*u,x=s+(1-s)*c,_=p+y,w=f-v,b=p-y,M=l+(1-l)*c,S=m+g,T=f+v,E=m-g,A=h+(1-h)*c,C=i[0],L=i[1],R=i[2],P=i[3],D=i[4],F=i[5],z=i[6],I=i[7],N=i[8],U=i[9],B=i[10],O=i[11];i[12],i[13],i[14],i[15];return i[0]=x*C+_*D+w*N,i[1]=x*L+_*F+w*U,i[2]=x*R+_*z+w*B,i[3]=x*P+_*I+w*O,i[4]=b*C+M*D+S*N,i[5]=b*L+M*F+S*U,i[6]=b*R+M*z+S*B,i[7]=b*P+M*I+S*O,i[8]=T*C+E*D+A*N,i[9]=T*L+E*F+A*U,i[10]=T*R+E*z+A*B,i[11]=T*P+E*I+A*O,this},scale:function(e){var t=this.elements,i=e.x,r=e.y,n=e.z;return t[0]*=i,t[4]*=r,t[8]*=n,t[1]*=i,t[5]*=r,t[9]*=n,t[2]*=i,t[6]*=r,t[10]*=n,t[3]*=i,t[7]*=r,t[11]*=n,this},getMaxScaleOnAxis:function(){var e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],i=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],r=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,Math.max(i,r)))},makeTranslation:function(e,t,i){return this.set(1,0,0,e,0,1,0,t,0,0,1,i,0,0,0,1),this},makeRotationX:function(e){var t=Math.cos(e),i=Math.sin(e);return this.set(1,0,0,0,0,t,-i,0,0,i,t,0,0,0,0,1),this},makeRotationY:function(e){var t=Math.cos(e),i=Math.sin(e);return this.set(t,0,i,0,0,1,0,0,-i,0,t,0,0,0,0,1),this},makeRotationZ:function(e){var t=Math.cos(e),i=Math.sin(e);return this.set(t,-i,0,0,i,t,0,0,0,0,1,0,0,0,0,1),this},makeRotationAxis:function(e,t){var i=Math.cos(t),r=Math.sin(t),n=1-i,a=e.x,o=e.y,s=e.z,l=n*a,h=n*o;return this.set(l*a+i,l*o-r*s,l*s+r*o,0,l*o+r*s,h*o+i,h*s-r*a,0,l*s-r*o,h*s+r*a,n*s*s+i,0,0,0,0,1),this},makeScale:function(e,t,i){return this.set(e,0,0,0,0,t,0,0,0,0,i,0,0,0,0,1),this},makeFrustum:function(e,t,i,r,n,a){var o=this.elements,s=2*n/(t-e),l=2*n/(r-i),h=(t+e)/(t-e),c=(r+i)/(r-i),u=-(a+n)/(a-n),d=-2*a*n/(a-n);return o[0]=s,o[4]=0,o[8]=h,o[12]=0,o[1]=0,o[5]=l,o[9]=c,o[13]=0,o[2]=0,o[6]=0,o[10]=u,o[14]=d,o[3]=0,o[7]=0,o[11]=-1,o[15]=0,this},makePerspective:function(e,t,i,r){var n=i*Math.tan(p.Math.degToRad(.5*e)),a=-n,o=a*t,s=n*t;return this.makeFrustum(o,s,a,n,i,r)},makeOrthographic:function(e,t,i,r,n,a){var o=this.elements,s=t-e,l=i-r,h=a-n,c=(t+e)/s,u=(i+r)/l,d=(a+n)/h;return o[0]=2/s,o[4]=0,o[8]=0,o[12]=-c,o[1]=0,o[5]=2/l,o[9]=0,o[13]=-u,o[2]=0,o[6]=0,o[10]=-2/h,o[14]=-d,o[3]=0,o[7]=0,o[11]=0,o[15]=1,this},clone:function(){var e=this.elements;return new p.Matrix4(e[0],e[4],e[8],e[12],e[1],e[5],e[9],e[13],e[2],e[6],e[10],e[14],e[3],e[7],e[11],e[15])}},p.Matrix4.__v1=new p.Vector3,p.Matrix4.__v2=new p.Vector3,p.Matrix4.__v3=new p.Vector3,p.Matrix4.__m1=new p.Matrix4,p.Matrix4.__m2=new p.Matrix4,p.Ray=function(e,t){this.origin=void 0!==e?e:new p.Vector3,this.direction=void 0!==t?t:new p.Vector3},p.Ray.prototype={constructor:p.Ray,set:function(e,t){return this.origin.copy(e),this.direction.copy(t),this},copy:function(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this},at:function(e,t){return(t||new p.Vector3).copy(this.direction).multiplyScalar(e).add(this.origin)},recast:function(e){return this.origin.copy(this.at(e,p.Ray.__v1)),this},closestPointToPoint:function(e,t){var i=t||new p.Vector3;i.subVectors(e,this.origin);var r=i.dot(this.direction);return i.copy(this.direction).multiplyScalar(r).add(this.origin)},distanceToPoint:function(e){var t=p.Ray.__v1.subVectors(e,this.origin).dot(this.direction);return p.Ray.__v1.copy(this.direction).multiplyScalar(t).add(this.origin),p.Ray.__v1.distanceTo(e)},isIntersectionSphere:function(e){return this.distanceToPoint(e.center)<=e.radius},isIntersectionPlane:function(e){return 0!=e.normal.dot(this.direction)||0==e.distanceToPoint(this.origin)},distanceToPlane:function(e){var t=e.normal.dot(this.direction);return 0==t?0==e.distanceToPoint(this.origin)?0:void 0:-(this.origin.dot(e.normal)+e.constant)/t},intersectPlane:function(e,t){var i=this.distanceToPlane(e);if(void 0!==i)return this.at(i,t)},transform:function(e){return this.direction.add(this.origin).applyMatrix4(e),this.origin.applyMatrix4(e),this.direction.sub(this.origin),this},equals:function(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)},clone:function(){return(new p.Ray).copy(this)}},p.Ray.__v1=new p.Vector3,p.Ray.__v2=new p.Vector3,p.Sphere=function(e,t){this.center=void 0!==e?e:new p.Vector3,this.radius=void 0!==t?t:0},p.Sphere.prototype={constructor:p.Sphere,set:function(e,t){return this.center.copy(e),this.radius=t,this},setFromCenterAndPoints:function(e,t){for(var i=0,r=0,n=t.length;r<n;r++){var a=e.distanceToSquared(t[r]);i=Math.max(i,a)}return this.center=e,this.radius=Math.sqrt(i),this},copy:function(e){return this.center.copy(e.center),this.radius=e.radius,this},empty:function(){return this.radius<=0},containsPoint:function(e){return e.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(e){return e.distanceTo(this.center)-this.radius},intersectsSphere:function(e){var t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t},clampPoint:function(e,t){var i=this.center.distanceToSquared(e),r=t||new p.Vector3;return r.copy(e),i>this.radius*this.radius&&(r.sub(this.center).normalize(),r.multiplyScalar(this.radius).add(this.center)),r},getBoundingBox:function(e){var t=e||new p.Box3;return t.set(this.center,this.center),t.expandByScalar(this.radius),t},transform:function(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this},translate:function(e){return this.center.add(e),this},equals:function(e){return e.center.equals(this.center)&&e.radius===this.radius},clone:function(){return(new p.Sphere).copy(this)}},p.Frustum=function(e,t,i,r,n,a){this.planes=[void 0!==e?e:new p.Plane,void 0!==t?t:new p.Plane,void 0!==i?i:new p.Plane,void 0!==r?r:new p.Plane,void 0!==n?n:new p.Plane,void 0!==a?a:new p.Plane]},p.Frustum.prototype={set:function(e,t,i,r,n,a){var o=this.planes;return o[0].copy(e),o[1].copy(t),o[2].copy(i),o[3].copy(r),o[4].copy(n),o[5].copy(a),this},copy:function(e){for(var t=this.planes,i=0;i<6;i++)t[i].copy(e.planes[i]);return this},setFromMatrix:function(e){var t=this.planes,i=e.elements,r=i[0],n=i[1],a=i[2],o=i[3],s=i[4],l=i[5],h=i[6],c=i[7],u=i[8],d=i[9],p=i[10],f=i[11],m=i[12],g=i[13],v=i[14],y=i[15];return t[0].setComponents(o-r,c-s,f-u,y-m).normalize(),t[1].setComponents(o+r,c+s,f+u,y+m).normalize(),t[2].setComponents(o+n,c+l,f+d,y+g).normalize(),t[3].setComponents(o-n,c-l,f-d,y-g).normalize(),t[4].setComponents(o-a,c-h,f-p,y-v).normalize(),t[5].setComponents(o+a,c+h,f+p,y+v).normalize(),this},intersectsObject:function(e){for(var t=e.matrixWorld,i=this.planes,r=t.getPosition(),n=-e.geometry.boundingSphere.radius*t.getMaxScaleOnAxis(),a=0;a<6;a++){if(i[a].distanceToPoint(r)<n)return!1}return!0},intersectsSphere:function(e){for(var t=this.planes,i=e.center,r=-e.radius,n=0;n<6;n++){if(t[n].distanceToPoint(i)<r)return!1}return!0},containsPoint:function(e){for(var t=this.planes,i=0;i<6;i++)if(t[i].distanceToPoint(e)<0)return!1;return!0},clone:function(){return(new p.Frustum).copy(this)}},p.Plane=function(e,t){this.normal=void 0!==e?e:new p.Vector3(1,0,0),this.constant=void 0!==t?t:0},p.Plane.prototype={constructor:p.Plane,set:function(e,t){return this.normal.copy(e),this.constant=t,this},setComponents:function(e,t,i,r){return this.normal.set(e,t,i),this.constant=r,this},setFromNormalAndCoplanarPoint:function(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this},setFromCoplanarPoints:function(e,t,i){var r=p.Plane.__v1.subVectors(i,t).cross(p.Plane.__v2.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(r,e),this},copy:function(e){return this.normal.copy(e.normal),this.constant=e.constant,this},normalize:function(){var e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this},negate:function(){return this.constant*=-1,this.normal.negate(),this},distanceToPoint:function(e){return this.normal.dot(e)+this.constant},distanceToSphere:function(e){return this.distanceToPoint(e.center)-e.radius},projectPoint:function(e,t){return this.orthoPoint(e,t).sub(e).negate()},orthoPoint:function(e,t){var i=this.distanceToPoint(e);return(t||new p.Vector3).copy(this.normal).multiplyScalar(i)},isIntersectionLine:function(e,t){var i=this.distanceToPoint(e),r=this.distanceToPoint(t);return i<0&&r>0||r<0&&i>0},intersectLine:function(e,t,i){var r=i||new p.Vector3,n=p.Plane.__v1.subVectors(t,e),a=this.normal.dot(n);if(0==a)return 0==this.distanceToPoint(e)?r.copy(e):void 0;var o=-(e.dot(this.normal)+this.constant)/a;return o<0||o>1?void 0:r.copy(n).multiplyScalar(o).add(e)},coplanarPoint:function(e){return(e||new p.Vector3).copy(this.normal).multiplyScalar(-this.constant)},transform:function(e,t){t=t||(new p.Matrix3).getInverse(e).transpose();var i=p.Plane.__v1.copy(this.normal).applyMatrix3(t),r=this.coplanarPoint(p.Plane.__v2);return r.applyMatrix4(e),this.setFromNormalAndCoplanarPoint(i,r),this},translate:function(e){return this.constant=this.constant-e.dot(this.normal),this},equals:function(e){return e.normal.equals(this.normal)&&e.constant==this.constant},clone:function(){return(new p.Plane).copy(this)}},p.Plane.__vZero=new p.Vector3(0,0,0),p.Plane.__v1=new p.Vector3,p.Plane.__v2=new p.Vector3,p.Math={clamp:function(e,t,i){return e<t?t:e>i?i:e},clampBottom:function(e,t){return e<t?t:e},mapLinear:function(e,t,i,r,n){return r+(e-t)*(n-r)/(i-t)},random16:function(){return(65280*Math.random()+255*Math.random())/65535},randInt:function(e,t){return e+Math.floor(Math.random()*(t-e+1))},randFloat:function(e,t){return e+Math.random()*(t-e)},randFloatSpread:function(e){return e*(.5-Math.random())},sign:function(e){return e<0?-1:e>0?1:0},degToRad:function(e){return e*p.Math.__d2r},radToDeg:function(e){return e*p.Math.__r2d}},p.Math.__d2r=Math.PI/180,p.Math.__r2d=180/Math.PI,p.Spline=function(e){this.points=e;var t,i,r,n,a,o,s,l,h,c=[],u={x:0,y:0,z:0};function d(e,t,i,r,n,a,o){var s=.5*(i-e),l=.5*(r-t);return(2*(t-i)+s+l)*o+(-3*(t-i)-2*s-l)*a+s*n+t}this.initFromArray=function(e){this.points=[];for(var t=0;t<e.length;t++)this.points[t]={x:e[t][0],y:e[t][1],z:e[t][2]}},this.getPoint=function(e){return t=(this.points.length-1)*e,i=Math.floor(t),r=t-i,c[0]=0===i?i:i-1,c[1]=i,c[2]=i>this.points.length-2?this.points.length-1:i+1,c[3]=i>this.points.length-3?this.points.length-1:i+2,o=this.points[c[0]],s=this.points[c[1]],l=this.points[c[2]],h=this.points[c[3]],a=r*(n=r*r),u.x=d(o.x,s.x,l.x,h.x,r,n,a),u.y=d(o.y,s.y,l.y,h.y,r,n,a),u.z=d(o.z,s.z,l.z,h.z,r,n,a),u},this.getControlPointsArray=function(){var e,t,i=this.points.length,r=[];for(e=0;e<i;e++)t=this.points[e],r[e]=[t.x,t.y,t.z];return r},this.getLength=function(e){var t,i,r,n,a=0,o=0,s=0,l=new p.Vector3,h=new p.Vector3,c=[],u=0;for(c[0]=0,e||(e=100),r=this.points.length*e,l.copy(this.points[0]),t=1;t<r;t++)i=t/r,n=this.getPoint(i),h.copy(n),u+=h.distanceTo(l),l.copy(n),a=(this.points.length-1)*i,(o=Math.floor(a))!=s&&(c[o]=u,s=o);return c[c.length]=u,{chunks:c,total:u}},this.reparametrizeByArcLength=function(e){var t,i,r,n,a,o,s,l,h=[],c=new p.Vector3,u=this.getLength();for(h.push(c.copy(this.points[0]).clone()),t=1;t<this.points.length;t++){for(o=u.chunks[t]-u.chunks[t-1],s=Math.ceil(e*o/u.total),n=(t-1)/(this.points.length-1),a=t/(this.points.length-1),i=1;i<s-1;i++)r=n+i*(1/s)*(a-n),l=this.getPoint(r),h.push(c.copy(l).clone());h.push(c.copy(this.points[t]).clone())}this.points=h}},p.Triangle=function(e,t,i){this.a=void 0!==e?e:new p.Vector3,this.b=void 0!==t?t:new p.Vector3,this.c=void 0!==i?i:new p.Vector3},p.Triangle.normal=function(e,t,i,r){var n=r||new p.Vector3;n.subVectors(i,t),p.Triangle.__v0.subVectors(e,t),n.cross(p.Triangle.__v0);var a=n.lengthSq();return a>0?n.multiplyScalar(1/Math.sqrt(a)):n.set(0,0,0)},p.Triangle.barycoordFromPoint=function(e,t,i,r,n){p.Triangle.__v0.subVectors(r,t),p.Triangle.__v1.subVectors(i,t),p.Triangle.__v2.subVectors(e,t);var a=p.Triangle.__v0.dot(p.Triangle.__v0),o=p.Triangle.__v0.dot(p.Triangle.__v1),s=p.Triangle.__v0.dot(p.Triangle.__v2),l=p.Triangle.__v1.dot(p.Triangle.__v1),h=p.Triangle.__v1.dot(p.Triangle.__v2),c=a*l-o*o,u=n||new p.Vector3;if(0==c)return u.set(-2,-1,-1);var d=1/c,f=(l*s-o*h)*d,m=(a*h-o*s)*d;return u.set(1-f-m,m,f)},p.Triangle.containsPoint=function(e,t,i,r){var n=p.Triangle.barycoordFromPoint(e,t,i,r,p.Triangle.__v3);return n.x>=0&&n.y>=0&&n.x+n.y<=1},p.Triangle.prototype={constructor:p.Triangle,set:function(e,t,i){return this.a.copy(e),this.b.copy(t),this.c.copy(i),this},setFromPointsAndIndices:function(e,t,i,r){return this.a.copy(e[t]),this.b.copy(e[i]),this.c.copy(e[r]),this},copy:function(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this},area:function(){return p.Triangle.__v0.subVectors(this.c,this.b),p.Triangle.__v1.subVectors(this.a,this.b),.5*p.Triangle.__v0.cross(p.Triangle.__v1).length()},midpoint:function(e){return(e||new p.Vector3).addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},normal:function(e){return p.Triangle.normal(this.a,this.b,this.c,e)},plane:function(e){return(e||new p.Plane).setFromCoplanarPoints(this.a,this.b,this.c)},barycoordFromPoint:function(e,t){return p.Triangle.barycoordFromPoint(e,this.a,this.b,this.c,t)},containsPoint:function(e){return p.Triangle.containsPoint(e,this.a,this.b,this.c)},equals:function(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)},clone:function(){return(new p.Triangle).copy(this)}},p.Triangle.__v0=new p.Vector3,p.Triangle.__v1=new p.Vector3,p.Triangle.__v2=new p.Vector3,p.Triangle.__v3=new p.Vector3,p.Vertex=function(e){return console.warn("THREE.Vertex has been DEPRECATED. Use THREE.Vector3 instead."),e},p.UV=function(e,t){return console.warn("THREE.UV has been DEPRECATED. Use THREE.Vector2 instead."),new p.Vector2(e,t)},p.Clock=function(e){this.autoStart=void 0===e||e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1},p.Clock.prototype.start=function(){this.startTime=Date.now(),this.oldTime=this.startTime,this.running=!0},p.Clock.prototype.stop=function(){this.getElapsedTime(),this.running=!1},p.Clock.prototype.getElapsedTime=function(){return this.getDelta(),this.elapsedTime},p.Clock.prototype.getDelta=function(){var e=0;if(this.autoStart&&!this.running&&this.start(),this.running){var t=Date.now();e=.001*(t-this.oldTime),this.oldTime=t,this.elapsedTime+=e}return e},p.EventDispatcher=function(){var e={};this.addEventListener=function(t,i){void 0===e[t]&&(e[t]=[]),-1===e[t].indexOf(i)&&e[t].push(i)},this.removeEventListener=function(t,i){var r=e[t].indexOf(i);-1!==r&&e[t].splice(r,1)},this.dispatchEvent=function(t){var i=e[t.type];if(void 0!==i){t.target=this;for(var r=0,n=i.length;r<n;r++)i[r].call(this,t)}}},function(e){e.Raycaster=function(t,i,r,n){this.ray=new e.Ray(t,i),this.ray.direction.length()>0&&this.ray.direction.normalize(),this.near=r||0,this.far=n||1/0};var t=new e.Sphere,i=new e.Ray,r=new e.Plane,n=new e.Vector3,a=new e.Matrix4,o=function(e,t){return e.distance-t.distance},s=function(o,s,l){if(o instanceof e.Particle){var h=s.ray.distanceToPoint(o.matrixWorld.getPosition());if(h>o.scale.x)return l;l.push({distance:h,point:o.position,face:null,object:o})}else if(o instanceof e.Mesh){if(t.set(o.matrixWorld.getPosition(),o.geometry.boundingSphere.radius*o.matrixWorld.getMaxScaleOnAxis()),!s.ray.isIntersectionSphere(t))return l;var c,u,d,p,f=o.geometry,m=f.vertices,g=o.material instanceof e.MeshFaceMaterial,v=!0===g?o.material.materials:null,y=o.material.side,x=s.precision;o.matrixRotationWorld.extractRotation(o.matrixWorld),a.getInverse(o.matrixWorld),i.copy(s.ray).transform(a);for(var _=0,w=f.faces.length;_<w;_++){var b=f.faces[_],M=!0===g?v[b.materialIndex]:o.material;if(void 0!==M){r.setFromNormalAndCoplanarPoint(b.normal,m[b.a]);var S=i.distanceToPlane(r);if(!(Math.abs(S)<x||S<0)){if((y=M.side)!==e.DoubleSide){var T=i.direction.dot(r.normal);if(!(y===e.FrontSide?T<0:T>0))continue}if(!(S<s.near||S>s.far)){if(n=i.at(S,n),b instanceof e.Face3){if(c=m[b.a],u=m[b.b],d=m[b.c],!e.Triangle.containsPoint(n,c,u,d))continue}else{if(!(b instanceof e.Face4))throw Error("face type not supported");if(c=m[b.a],u=m[b.b],d=m[b.c],p=m[b.d],!e.Triangle.containsPoint(n,c,u,p)&&!e.Triangle.containsPoint(n,u,d,p))continue}l.push({distance:S,point:s.ray.at(S),face:b,faceIndex:_,object:o})}}}}}},l=function(e,t,i){for(var r=e.getDescendants(),n=0,a=r.length;n<a;n++)s(r[n],t,i)};e.Raycaster.prototype.precision=1e-4,e.Raycaster.prototype.set=function(e,t){this.ray.set(e,t),this.ray.direction.length()>0&&this.ray.direction.normalize()},e.Raycaster.prototype.intersectObject=function(e,t){var i=[];return!0===t&&l(e,this,i),s(e,this,i),i.sort(o),i},e.Raycaster.prototype.intersectObjects=function(e,t){for(var i=[],r=0,n=e.length;r<n;r++)s(e[r],this,i),!0===t&&l(e[r],this,i);return i.sort(o),i}}(p),p.Object3D=function(){this.id=p.Object3DIdCount++,this.name="",this.properties={},this.parent=void 0,this.children=[],this.up=new p.Vector3(0,1,0),this.position=new p.Vector3,this.rotation=new p.Vector3,this.eulerOrder=p.Object3D.defaultEulerOrder,this.scale=new p.Vector3(1,1,1),this.renderDepth=null,this.rotationAutoUpdate=!0,this.matrix=new p.Matrix4,this.matrixWorld=new p.Matrix4,this.matrixRotationWorld=new p.Matrix4,this.matrixAutoUpdate=!0,this.matrixWorldNeedsUpdate=!0,this.quaternion=new p.Quaternion,this.useQuaternion=!1,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this._vector=new p.Vector3},p.Object3D.prototype={constructor:p.Object3D,applyMatrix:function(e){this.matrix.multiplyMatrices(e,this.matrix),this.scale.getScaleFromMatrix(this.matrix);var t=(new p.Matrix4).extractRotation(this.matrix);this.rotation.setEulerFromRotationMatrix(t,this.eulerOrder),this.position.getPositionFromMatrix(this.matrix)},translate:function(e,t){this.matrix.rotateAxis(t),this.position.add(t.multiplyScalar(e))},translateX:function(e){this.translate(e,this._vector.set(1,0,0))},translateY:function(e){this.translate(e,this._vector.set(0,1,0))},translateZ:function(e){this.translate(e,this._vector.set(0,0,1))},localToWorld:function(e){return e.applyMatrix4(this.matrixWorld)},worldToLocal:function(e){return e.applyMatrix4(p.Object3D.__m1.getInverse(this.matrixWorld))},lookAt:function(e){this.matrix.lookAt(e,this.position,this.up),this.rotationAutoUpdate&&(!1===this.useQuaternion?this.rotation.setEulerFromRotationMatrix(this.matrix,this.eulerOrder):this.quaternion.copy(this.matrix.decompose()[1]))},add:function(e){if(e!==this){if(e instanceof p.Object3D){void 0!==e.parent&&e.parent.remove(e),e.parent=this,this.children.push(e);for(var t=this;void 0!==t.parent;)t=t.parent;void 0!==t&&t instanceof p.Scene&&t.__addObject(e)}}else console.warn("THREE.Object3D.add: An object can't be added as a child of itself.")},remove:function(e){var t=this.children.indexOf(e);if(-1!==t){e.parent=void 0,this.children.splice(t,1);for(var i=this;void 0!==i.parent;)i=i.parent;void 0!==i&&i instanceof p.Scene&&i.__removeObject(e)}},traverse:function(e){e(this);for(var t=0,i=this.children.length;t<i;t++)this.children[t].traverse(e)},getChildByName:function(e,t){for(var i=0,r=this.children.length;i<r;i++){var n=this.children[i];if(n.name===e)return n;if(!0===t&&void 0!==(n=n.getChildByName(e,t)))return n}},getDescendants:function(e){void 0===e&&(e=[]),Array.prototype.push.apply(e,this.children);for(var t=0,i=this.children.length;t<i;t++)this.children[t].getDescendants(e);return e},updateMatrix:function(){this.matrix.setPosition(this.position),!1===this.useQuaternion?this.matrix.setRotationFromEuler(this.rotation,this.eulerOrder):this.matrix.setRotationFromQuaternion(this.quaternion),1===this.scale.x&&1===this.scale.y&&1===this.scale.z||this.matrix.scale(this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(e){!0===this.matrixAutoUpdate&&this.updateMatrix(),!0!==this.matrixWorldNeedsUpdate&&!0!==e||(void 0===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);for(var t=0,i=this.children.length;t<i;t++)this.children[t].updateMatrixWorld(e)},clone:function(e){void 0===e&&(e=new p.Object3D),e.name=this.name,e.up.copy(this.up),e.position.copy(this.position),e.rotation instanceof p.Vector3&&e.rotation.copy(this.rotation),e.eulerOrder=this.eulerOrder,e.scale.copy(this.scale),e.renderDepth=this.renderDepth,e.rotationAutoUpdate=this.rotationAutoUpdate,e.matrix.copy(this.matrix),e.matrixWorld.copy(this.matrixWorld),e.matrixRotationWorld.copy(this.matrixRotationWorld),e.matrixAutoUpdate=this.matrixAutoUpdate,e.matrixWorldNeedsUpdate=this.matrixWorldNeedsUpdate,e.quaternion.copy(this.quaternion),e.useQuaternion=this.useQuaternion,e.visible=this.visible,e.castShadow=this.castShadow,e.receiveShadow=this.receiveShadow,e.frustumCulled=this.frustumCulled;for(var t=0;t<this.children.length;t++){var i=this.children[t];e.add(i.clone())}return e}},p.Object3D.__m1=new p.Matrix4,p.Object3D.defaultEulerOrder="XYZ",p.Object3DIdCount=0,p.Projector=function(){var e,t,i,r,n,a,o,s,l,h,c,u,d=[],f=0,m=[],g=0,v=[],y=0,x=[],_=0,w=[],b=0,M=[],S=0,T={objects:[],sprites:[],lights:[],elements:[]},E=new p.Vector3,A=new p.Vector4,C=new p.Box3(new p.Vector3(-1,-1,-1),new p.Vector3(1,1,1)),L=new p.Box3,R=new Array(3),P=new Array(4),D=new p.Matrix4,F=new p.Matrix4,z=new p.Matrix4,I=new p.Matrix3,N=new p.Matrix3,U=new p.Vector3,B=new p.Frustum,O=new p.Vector4,V=new p.Vector4;this.projectVector=function(e,t){return t.matrixWorldInverse.getInverse(t.matrixWorld),F.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),e.applyProjection(F)},this.unprojectVector=function(e,t){return t.projectionMatrixInverse.getInverse(t.projectionMatrix),F.multiplyMatrices(t.matrixWorld,t.projectionMatrixInverse),e.applyProjection(F)},this.pickingRay=function(e,t){e.z=-1;var i=new p.Vector3(e.x,e.y,1);return this.unprojectVector(e,t),this.unprojectVector(i,t),i.sub(e).normalize(),new p.Raycaster(e,i)};function H(){if(t===f){var e=new p.RenderableObject;return d.push(e),f++,t++,e}return d[t++]}function G(){if(r===g){var e=new p.RenderableVertex;return m.push(e),g++,r++,e}return m[r++]}function k(){if(a===y){var e=new p.RenderableFace3;return v.push(e),y++,a++,e}return v[a++]}function W(){if(o===_){var e=new p.RenderableFace4;return x.push(e),_++,o++,e}return x[o++]}function j(){if(l===b){var e=new p.RenderableLine;return w.push(e),b++,l++,e}return w[l++]}function X(){if(c===S){var e=new p.RenderableParticle;return M.push(e),S++,c++,e}return M[c++]}function q(e,t){return t.z-e.z}function Y(e,t){var i=0,r=1,n=e.z+e.w,a=t.z+t.w,o=-e.z+e.w,s=-t.z+t.w;return n>=0&&a>=0&&o>=0&&s>=0||!(n<0&&a<0||o<0&&s<0)&&(n<0?i=Math.max(i,n/(n-a)):a<0&&(r=Math.min(r,n/(n-a))),o<0?i=Math.max(i,o/(o-s)):s<0&&(r=Math.min(r,o/(o-s))),!(r<i)&&(e.lerp(t,i),t.lerp(e,1-r),!0))}this.projectScene=function(d,f,g,v){var y,x,_,w,b,M,S,K,Z,J,Q,$,ee,te,ie,re,ne,ae,oe,se,le,he,ce,ue,de,pe,fe=!1;for(a=0,o=0,l=0,c=0,T.elements.length=0,d.updateMatrixWorld(),void 0===f.parent&&f.updateMatrixWorld(),D.copy(f.matrixWorldInverse.getInverse(f.matrixWorld)),F.multiplyMatrices(f.projectionMatrix,D),N.getInverse(D),N.transpose(),B.setFromMatrix(F),y=0,x=(T=function(i,r){t=0,T.objects.length=0,T.sprites.length=0,T.lights.length=0;var n=function(t){for(var i=0,r=t.children.length;i<r;i++){var a=t.children[i];!1!==a.visible&&(a instanceof p.Light?T.lights.push(a):a instanceof p.Mesh||a instanceof p.Line?!1!==a.frustumCulled&&!0!==B.intersectsObject(a)||((e=H()).object=a,null!==a.renderDepth?e.z=a.renderDepth:(E.copy(a.matrixWorld.getPosition()),E.applyProjection(F),e.z=E.z),T.objects.push(e)):a instanceof p.Sprite||a instanceof p.Particle?((e=H()).object=a,null!==a.renderDepth?e.z=a.renderDepth:(E.copy(a.matrixWorld.getPosition()),E.applyProjection(F),e.z=E.z),T.sprites.push(e)):((e=H()).object=a,null!==a.renderDepth?e.z=a.renderDepth:(E.copy(a.matrixWorld.getPosition()),E.applyProjection(F),e.z=E.z),T.objects.push(e)),n(a))}};return n(i),!0===r&&T.objects.sort(q),T}(d,g)).objects.length;y<x;y++)if(ee=T.objects[y].object,u=ee.matrixWorld,r=0,ee instanceof p.Mesh){for(ie=(te=ee.geometry).vertices,re=te.faces,oe=te.faceVertexUvs,I.getInverse(u),I.transpose(),pe=!0===(de=ee.material instanceof p.MeshFaceMaterial)?ee.material:null,_=0,w=ie.length;_<w;_++)(i=G()).positionWorld.copy(ie[_]).applyMatrix4(u),i.positionScreen.copy(i.positionWorld).applyMatrix4(F),i.positionScreen.x/=i.positionScreen.w,i.positionScreen.y/=i.positionScreen.w,i.positionScreen.z/=i.positionScreen.w,i.visible=!(i.positionScreen.x<-1||i.positionScreen.x>1||i.positionScreen.y<-1||i.positionScreen.y>1||i.positionScreen.z<-1||i.positionScreen.z>1);for(b=0,M=re.length;b<M;b++){ne=re[b];var me=!0===de?pe.materials[ne.materialIndex]:ee.material;if(void 0!==me){var ge=me.side;if(ne instanceof p.Face3){if(le=m[ne.a],he=m[ne.b],ce=m[ne.c],R[0]=le.positionScreen,R[1]=he.positionScreen,R[2]=ce.positionScreen,!0!==le.visible&&!0!==he.visible&&!0!==ce.visible&&!C.isIntersectionBox(L.setFromPoints(R)))continue;if(fe=(ce.positionScreen.x-le.positionScreen.x)*(he.positionScreen.y-le.positionScreen.y)-(ce.positionScreen.y-le.positionScreen.y)*(he.positionScreen.x-le.positionScreen.x)<0,ge!==p.DoubleSide&&fe!==(ge===p.FrontSide))continue;(n=k()).v1.copy(le),n.v2.copy(he),n.v3.copy(ce)}else if(ne instanceof p.Face4){if(le=m[ne.a],he=m[ne.b],ce=m[ne.c],ue=m[ne.d],P[0]=le.positionScreen,P[1]=he.positionScreen,P[2]=ce.positionScreen,P[3]=ue.positionScreen,!0!==le.visible&&!0!==he.visible&&!0!==ce.visible&&!0!==ue.visible&&!C.isIntersectionBox(L.setFromPoints(P)))continue;if(fe=(ue.positionScreen.x-le.positionScreen.x)*(he.positionScreen.y-le.positionScreen.y)-(ue.positionScreen.y-le.positionScreen.y)*(he.positionScreen.x-le.positionScreen.x)<0||(he.positionScreen.x-ce.positionScreen.x)*(ue.positionScreen.y-ce.positionScreen.y)-(he.positionScreen.y-ce.positionScreen.y)*(ue.positionScreen.x-ce.positionScreen.x)<0,ge!==p.DoubleSide&&fe!==(ge===p.FrontSide))continue;(n=W()).v1.copy(le),n.v2.copy(he),n.v3.copy(ce),n.v4.copy(ue)}for(n.normalModel.copy(ne.normal),!1!==fe||ge!==p.BackSide&&ge!==p.DoubleSide||n.normalModel.negate(),n.normalModel.applyMatrix3(I).normalize(),n.normalModelView.copy(n.normalModel).applyMatrix3(N),n.centroidModel.copy(ne.centroid).applyMatrix4(u),S=0,K=(ae=ne.vertexNormals).length;S<K;S++){var ve=n.vertexNormalsModel[S];ve.copy(ae[S]),!1!==fe||ge!==p.BackSide&&ge!==p.DoubleSide||ve.negate(),ve.applyMatrix3(I).normalize(),n.vertexNormalsModelView[S].copy(ve).applyMatrix3(N)}for(n.vertexNormalsLength=ae.length,Z=0,J=oe.length;Z<J;Z++)if(void 0!==(se=oe[Z][b]))for(Q=0,$=se.length;Q<$;Q++)n.uvs[Z][Q]=se[Q];n.color=ne.color,n.material=me,U.copy(n.centroidModel).applyProjection(F),n.z=U.z,T.elements.push(n)}}}else if(ee instanceof p.Line){z.multiplyMatrices(F,u),ie=ee.geometry.vertices,(le=G()).positionScreen.copy(ie[0]).applyMatrix4(z);var ye=ee.type===p.LinePieces?2:1;for(_=1,w=ie.length;_<w;_++)(le=G()).positionScreen.copy(ie[_]).applyMatrix4(z),(_+1)%ye>0||(he=m[r-2],O.copy(le.positionScreen),V.copy(he.positionScreen),!0===Y(O,V)&&(O.multiplyScalar(1/O.w),V.multiplyScalar(1/V.w),(s=j()).v1.positionScreen.copy(O),s.v2.positionScreen.copy(V),s.z=Math.max(O.z,V.z),s.material=ee.material,T.elements.push(s)))}for(y=0,x=T.sprites.length;y<x;y++)ee=T.sprites[y].object,u=ee.matrixWorld,ee instanceof p.Particle&&(A.set(u.elements[12],u.elements[13],u.elements[14],1),A.applyMatrix4(F),A.z/=A.w,A.z>0&&A.z<1&&((h=X()).object=ee,h.x=A.x/A.w,h.y=A.y/A.w,h.z=A.z,h.rotation=ee.rotation.z,h.scale.x=ee.scale.x*Math.abs(h.x-(A.x+f.projectionMatrix.elements[0])/(A.w+f.projectionMatrix.elements[12])),h.scale.y=ee.scale.y*Math.abs(h.y-(A.y+f.projectionMatrix.elements[5])/(A.w+f.projectionMatrix.elements[13])),h.material=ee.material,T.elements.push(h)));return!0===v&&T.elements.sort(q),T}},p.Face3=function(e,t,i,r,n,a){this.a=e,this.b=t,this.c=i,this.normal=r instanceof p.Vector3?r:new p.Vector3,this.vertexNormals=r instanceof Array?r:[],this.color=n instanceof p.Color?n:new p.Color,this.vertexColors=n instanceof Array?n:[],this.vertexTangents=[],this.materialIndex=void 0!==a?a:0,this.centroid=new p.Vector3},p.Face3.prototype={constructor:p.Face3,clone:function(){var e,t,i=new p.Face3(this.a,this.b,this.c);for(i.normal.copy(this.normal),i.color.copy(this.color),i.centroid.copy(this.centroid),i.materialIndex=this.materialIndex,e=0,t=this.vertexNormals.length;e<t;e++)i.vertexNormals[e]=this.vertexNormals[e].clone();for(e=0,t=this.vertexColors.length;e<t;e++)i.vertexColors[e]=this.vertexColors[e].clone();for(e=0,t=this.vertexTangents.length;e<t;e++)i.vertexTangents[e]=this.vertexTangents[e].clone();return i}},p.Face4=function(e,t,i,r,n,a,o){this.a=e,this.b=t,this.c=i,this.d=r,this.normal=n instanceof p.Vector3?n:new p.Vector3,this.vertexNormals=n instanceof Array?n:[],this.color=a instanceof p.Color?a:new p.Color,this.vertexColors=a instanceof Array?a:[],this.vertexTangents=[],this.materialIndex=void 0!==o?o:0,this.centroid=new p.Vector3},p.Face4.prototype={constructor:p.Face4,clone:function(){var e,t,i=new p.Face4(this.a,this.b,this.c,this.d);for(i.normal.copy(this.normal),i.color.copy(this.color),i.centroid.copy(this.centroid),i.materialIndex=this.materialIndex,e=0,t=this.vertexNormals.length;e<t;e++)i.vertexNormals[e]=this.vertexNormals[e].clone();for(e=0,t=this.vertexColors.length;e<t;e++)i.vertexColors[e]=this.vertexColors[e].clone();for(e=0,t=this.vertexTangents.length;e<t;e++)i.vertexTangents[e]=this.vertexTangents[e].clone();return i}},p.Geometry=function(){p.EventDispatcher.call(this),this.id=p.GeometryIdCount++,this.name="",this.vertices=[],this.colors=[],this.normals=[],this.faces=[],this.faceUvs=[[]],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphColors=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.hasTangents=!1,this.dynamic=!0,this.verticesNeedUpdate=!1,this.elementsNeedUpdate=!1,this.uvsNeedUpdate=!1,this.normalsNeedUpdate=!1,this.tangentsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.lineDistancesNeedUpdate=!1,this.buffersNeedUpdate=!1},p.Geometry.prototype={constructor:p.Geometry,applyMatrix:function(e){for(var t=(new p.Matrix3).getInverse(e).transpose(),i=0,r=this.vertices.length;i<r;i++){this.vertices[i].applyMatrix4(e)}for(i=0,r=this.faces.length;i<r;i++){var n=this.faces[i];n.normal.applyMatrix3(t).normalize();for(var a=0,o=n.vertexNormals.length;a<o;a++)n.vertexNormals[a].applyMatrix3(t).normalize();n.centroid.applyMatrix4(e)}},computeCentroids:function(){var e,t,i;for(e=0,t=this.faces.length;e<t;e++)(i=this.faces[e]).centroid.set(0,0,0),i instanceof p.Face3?(i.centroid.add(this.vertices[i.a]),i.centroid.add(this.vertices[i.b]),i.centroid.add(this.vertices[i.c]),i.centroid.divideScalar(3)):i instanceof p.Face4&&(i.centroid.add(this.vertices[i.a]),i.centroid.add(this.vertices[i.b]),i.centroid.add(this.vertices[i.c]),i.centroid.add(this.vertices[i.d]),i.centroid.divideScalar(4))},computeFaceNormals:function(){var e,t,i,r,n,a,o=new p.Vector3,s=new p.Vector3;for(e=0,t=this.faces.length;e<t;e++)i=this.faces[e],r=this.vertices[i.a],n=this.vertices[i.b],a=this.vertices[i.c],o.subVectors(a,n),s.subVectors(r,n),o.cross(s),o.normalize(),i.normal.copy(o)},computeVertexNormals:function(e){var t,i,r,n,a,o;if(void 0===this.__tmpVertices){for(this.__tmpVertices=new Array(this.vertices.length),o=this.__tmpVertices,t=0,i=this.vertices.length;t<i;t++)o[t]=new p.Vector3;for(r=0,n=this.faces.length;r<n;r++)(a=this.faces[r])instanceof p.Face3?a.vertexNormals=[new p.Vector3,new p.Vector3,new p.Vector3]:a instanceof p.Face4&&(a.vertexNormals=[new p.Vector3,new p.Vector3,new p.Vector3,new p.Vector3])}else for(o=this.__tmpVertices,t=0,i=this.vertices.length;t<i;t++)o[t].set(0,0,0);if(e){var s,l,h,c,u=new p.Vector3,d=new p.Vector3,f=new p.Vector3,m=new p.Vector3,g=new p.Vector3;for(r=0,n=this.faces.length;r<n;r++)(a=this.faces[r])instanceof p.Face3?(s=this.vertices[a.a],l=this.vertices[a.b],h=this.vertices[a.c],u.subVectors(h,l),d.subVectors(s,l),u.cross(d),o[a.a].add(u),o[a.b].add(u),o[a.c].add(u)):a instanceof p.Face4&&(s=this.vertices[a.a],l=this.vertices[a.b],h=this.vertices[a.c],c=this.vertices[a.d],f.subVectors(c,l),d.subVectors(s,l),f.cross(d),o[a.a].add(f),o[a.b].add(f),o[a.d].add(f),m.subVectors(c,h),g.subVectors(l,h),m.cross(g),o[a.b].add(m),o[a.c].add(m),o[a.d].add(m))}else for(r=0,n=this.faces.length;r<n;r++)(a=this.faces[r])instanceof p.Face3?(o[a.a].add(a.normal),o[a.b].add(a.normal),o[a.c].add(a.normal)):a instanceof p.Face4&&(o[a.a].add(a.normal),o[a.b].add(a.normal),o[a.c].add(a.normal),o[a.d].add(a.normal));for(t=0,i=this.vertices.length;t<i;t++)o[t].normalize();for(r=0,n=this.faces.length;r<n;r++)(a=this.faces[r])instanceof p.Face3?(a.vertexNormals[0].copy(o[a.a]),a.vertexNormals[1].copy(o[a.b]),a.vertexNormals[2].copy(o[a.c])):a instanceof p.Face4&&(a.vertexNormals[0].copy(o[a.a]),a.vertexNormals[1].copy(o[a.b]),a.vertexNormals[2].copy(o[a.c]),a.vertexNormals[3].copy(o[a.d]))},computeMorphNormals:function(){var e,t,i,r,n;for(i=0,r=this.faces.length;i<r;i++)for((n=this.faces[i]).__originalFaceNormal?n.__originalFaceNormal.copy(n.normal):n.__originalFaceNormal=n.normal.clone(),n.__originalVertexNormals||(n.__originalVertexNormals=[]),e=0,t=n.vertexNormals.length;e<t;e++)n.__originalVertexNormals[e]?n.__originalVertexNormals[e].copy(n.vertexNormals[e]):n.__originalVertexNormals[e]=n.vertexNormals[e].clone();var a=new p.Geometry;for(a.faces=this.faces,e=0,t=this.morphTargets.length;e<t;e++){if(!this.morphNormals[e]){this.morphNormals[e]={},this.morphNormals[e].faceNormals=[],this.morphNormals[e].vertexNormals=[];var o=this.morphNormals[e].faceNormals,s=this.morphNormals[e].vertexNormals;for(i=0,r=this.faces.length;i<r;i++)n=this.faces[i],l=new p.Vector3,h=n instanceof p.Face3?{a:new p.Vector3,b:new p.Vector3,c:new p.Vector3}:{a:new p.Vector3,b:new p.Vector3,c:new p.Vector3,d:new p.Vector3},o.push(l),s.push(h)}var l,h,c=this.morphNormals[e];for(a.vertices=this.morphTargets[e].vertices,a.computeFaceNormals(),a.computeVertexNormals(),i=0,r=this.faces.length;i<r;i++)n=this.faces[i],l=c.faceNormals[i],h=c.vertexNormals[i],l.copy(n.normal),n instanceof p.Face3?(h.a.copy(n.vertexNormals[0]),h.b.copy(n.vertexNormals[1]),h.c.copy(n.vertexNormals[2])):(h.a.copy(n.vertexNormals[0]),h.b.copy(n.vertexNormals[1]),h.c.copy(n.vertexNormals[2]),h.d.copy(n.vertexNormals[3]))}for(i=0,r=this.faces.length;i<r;i++)(n=this.faces[i]).normal=n.__originalFaceNormal,n.vertexNormals=n.__originalVertexNormals},computeTangents:function(){var e,t,i,r,n,a,o,s,l,h,c,u,d,f,m,g,v,y,x,_,w,b,M,S,T,E,A,C=[],L=[],R=new p.Vector3,P=new p.Vector3,D=new p.Vector3,F=new p.Vector3,z=new p.Vector3;for(i=0,r=this.vertices.length;i<r;i++)C[i]=new p.Vector3,L[i]=new p.Vector3;function I(e,t,i,r,n,a,o){l=e.vertices[t],h=e.vertices[i],c=e.vertices[r],u=s[n],d=s[a],f=s[o],m=h.x-l.x,g=c.x-l.x,v=h.y-l.y,y=c.y-l.y,x=h.z-l.z,_=c.z-l.z,w=d.x-u.x,b=f.x-u.x,M=d.y-u.y,S=f.y-u.y,T=1/(w*S-b*M),R.set((S*m-M*g)*T,(S*v-M*y)*T,(S*x-M*_)*T),P.set((w*g-b*m)*T,(w*y-b*v)*T,(w*_-b*x)*T),C[t].add(R),C[i].add(R),C[r].add(R),L[t].add(P),L[i].add(P),L[r].add(P)}for(e=0,t=this.faces.length;e<t;e++)o=this.faces[e],s=this.faceVertexUvs[0][e],o instanceof p.Face3?I(this,o.a,o.b,o.c,0,1,2):o instanceof p.Face4&&(I(this,o.a,o.b,o.d,0,1,3),I(this,o.b,o.c,o.d,1,2,3));var N=["a","b","c","d"];for(e=0,t=this.faces.length;e<t;e++)for(o=this.faces[e],n=0;n<o.vertexNormals.length;n++)z.copy(o.vertexNormals[n]),a=o[N[n]],E=C[a],D.copy(E),D.sub(z.multiplyScalar(z.dot(E))).normalize(),F.crossVectors(o.vertexNormals[n],E),A=F.dot(L[a])<0?-1:1,o.vertexTangents[n]=new p.Vector4(D.x,D.y,D.z,A);this.hasTangents=!0},computeLineDistances:function(){for(var e=0,t=this.vertices,i=0,r=t.length;i<r;i++)i>0&&(e+=t[i].distanceTo(t[i-1])),this.lineDistances[i]=e},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new p.Box3),this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new p.Sphere),this.boundingSphere.setFromCenterAndPoints(this.boundingSphere.center,this.vertices)},mergeVertices:function(){var e,t,i,r,n,a,o,s,l,h={},c=[],u=[],d=Math.pow(10,4);for(this.__tmpVertices=void 0,i=0,r=this.vertices.length;i<r;i++)e=this.vertices[i],void 0===h[t=[Math.round(e.x*d),Math.round(e.y*d),Math.round(e.z*d)].join("_")]?(h[t]=i,c.push(this.vertices[i]),u[i]=c.length-1):u[i]=u[h[t]];var f=[];for(i=0,r=this.faces.length;i<r;i++)if((n=this.faces[i])instanceof p.Face3){n.a=u[n.a],n.b=u[n.b],n.c=u[n.c],a=[n.a,n.b,n.c];for(var m=-1,g=0;g<3;g++)if(a[g]==a[(g+1)%3]){m=g,f.push(i);break}}else if(n instanceof p.Face4){n.a=u[n.a],n.b=u[n.b],n.c=u[n.c],n.d=u[n.d],a=[n.a,n.b,n.c,n.d];for(m=-1,g=0;g<4;g++)a[g]==a[(g+1)%4]&&(m>=0&&f.push(i),m=g);if(m>=0){a.splice(m,1);var v=new p.Face3(a[0],a[1],a[2],n.normal,n.color,n.materialIndex);for(o=0,s=this.faceVertexUvs.length;o<s;o++)(l=this.faceVertexUvs[o][i])&&l.splice(m,1);n.vertexNormals&&n.vertexNormals.length>0&&(v.vertexNormals=n.vertexNormals,v.vertexNormals.splice(m,1)),n.vertexColors&&n.vertexColors.length>0&&(v.vertexColors=n.vertexColors,v.vertexColors.splice(m,1)),this.faces[i]=v}}for(i=f.length-1;i>=0;i--)for(this.faces.splice(i,1),o=0,s=this.faceVertexUvs.length;o<s;o++)this.faceVertexUvs[o].splice(i,1);var y=this.vertices.length-c.length;return this.vertices=c,y},clone:function(){for(var e=new p.Geometry,t=this.vertices,i=0,r=t.length;i<r;i++)e.vertices.push(t[i].clone());var n=this.faces;for(i=0,r=n.length;i<r;i++)e.faces.push(n[i].clone());var a=this.faceVertexUvs[0];for(i=0,r=a.length;i<r;i++){for(var o=a[i],s=[],l=0,h=o.length;l<h;l++)s.push(new p.Vector2(o[l].x,o[l].y));e.faceVertexUvs[0].push(s)}return e},dispose:function(){this.dispatchEvent({type:"dispose"})}},p.GeometryIdCount=0,p.BufferGeometry=function(){p.EventDispatcher.call(this),this.id=p.GeometryIdCount++,this.attributes={},this.dynamic=!1,this.offsets=[],this.boundingBox=null,this.boundingSphere=null,this.hasTangents=!1,this.morphTargets=[]},p.BufferGeometry.prototype={constructor:p.BufferGeometry,applyMatrix:function(e){var t,i;if(this.attributes.position&&(t=this.attributes.position.array),this.attributes.normal&&(i=this.attributes.normal.array),void 0!==t&&(e.multiplyVector3Array(t),this.verticesNeedUpdate=!0),void 0!==i){var r=new p.Matrix3;r.getInverse(e).transpose(),r.multiplyVector3Array(i),this.normalizeNormals(),this.normalsNeedUpdate=!0}},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new p.Box3);var e=this.attributes.position.array;if(e){var t,i,r,n=this.boundingBox;e.length>=3&&(n.min.x=n.max.x=e[0],n.min.y=n.max.y=e[1],n.min.z=n.max.z=e[2]);for(var a=3,o=e.length;a<o;a+=3)t=e[a],i=e[a+1],r=e[a+2],t<n.min.x?n.min.x=t:t>n.max.x&&(n.max.x=t),i<n.min.y?n.min.y=i:i>n.max.y&&(n.max.y=i),r<n.min.z?n.min.z=r:r>n.max.z&&(n.max.z=r)}void 0!==e&&0!==e.length||(this.boundingBox.min.set(0,0,0),this.boundingBox.max.set(0,0,0))},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new p.Sphere);var e=this.attributes.position.array;if(e){for(var t,i,r,n,a=0,o=0,s=e.length;o<s;o+=3)(t=(i=e[o])*i+(r=e[o+1])*r+(n=e[o+2])*n)>a&&(a=t);this.boundingSphere.radius=Math.sqrt(a)}},computeVertexNormals:function(){if(this.attributes.position){var e,t,i,r,n=this.attributes.position.array.length;if(void 0===this.attributes.normal)this.attributes.normal={itemSize:3,array:new Float32Array(n),numItems:n};else for(e=0,t=this.attributes.normal.array.length;e<t;e++)this.attributes.normal.array[e]=0;var a,o,s,l,h,c,u=this.attributes.position.array,d=this.attributes.normal.array,f=new p.Vector3,m=new p.Vector3,g=new p.Vector3,v=new p.Vector3,y=new p.Vector3;if(this.attributes.index){var x=this.attributes.index.array,_=this.offsets;for(i=0,r=_.length;i<r;++i){var w=_[i].start,b=_[i].count,M=_[i].index;for(e=w,t=w+b;e<t;e+=3)a=M+x[e],o=M+x[e+1],s=M+x[e+2],l=u[3*a],h=u[3*a+1],c=u[3*a+2],f.set(l,h,c),l=u[3*o],h=u[3*o+1],c=u[3*o+2],m.set(l,h,c),l=u[3*s],h=u[3*s+1],c=u[3*s+2],g.set(l,h,c),v.subVectors(g,m),y.subVectors(f,m),v.cross(y),d[3*a]+=v.x,d[3*a+1]+=v.y,d[3*a+2]+=v.z,d[3*o]+=v.x,d[3*o+1]+=v.y,d[3*o+2]+=v.z,d[3*s]+=v.x,d[3*s+1]+=v.y,d[3*s+2]+=v.z}}else for(e=0,t=u.length;e<t;e+=9)l=u[e],h=u[e+1],c=u[e+2],f.set(l,h,c),l=u[e+3],h=u[e+4],c=u[e+5],m.set(l,h,c),l=u[e+6],h=u[e+7],c=u[e+8],g.set(l,h,c),v.subVectors(g,m),y.subVectors(f,m),v.cross(y),d[e]=v.x,d[e+1]=v.y,d[e+2]=v.z,d[e+3]=v.x,d[e+4]=v.y,d[e+5]=v.z,d[e+6]=v.x,d[e+7]=v.y,d[e+8]=v.z;this.normalizeNormals(),this.normalsNeedUpdate=!0}},normalizeNormals:function(){for(var e,t,i,r,n=this.attributes.normal.array,a=0,o=n.length;a<o;a+=3)e=n[a],t=n[a+1],i=n[a+2],r=1/Math.sqrt(e*e+t*t+i*i),n[a]*=r,n[a+1]*=r,n[a+2]*=r},computeTangents:function(){if(void 0!==this.attributes.index&&void 0!==this.attributes.position&&void 0!==this.attributes.normal&&void 0!==this.attributes.uv){var e=this.attributes.index.array,t=this.attributes.position.array,i=this.attributes.normal.array,r=this.attributes.uv.array,n=t.length/3;if(void 0===this.attributes.tangent){var a=4*n;this.attributes.tangent={itemSize:4,array:new Float32Array(a),numItems:a}}for(var o,s,l,h,c,u,d,f,m,g,v,y,x,_,w,b,M,S,T,E,A,C,L,R,P,D,F=this.attributes.tangent.array,z=[],I=[],N=0;N<n;N++)z[N]=new p.Vector3,I[N]=new p.Vector3;var U,B,O,V,H,G,k,W,j,X,q=new p.Vector3,Y=new p.Vector3,K=this.offsets;for(O=0,V=K.length;O<V;++O){var Z=K[O].start,J=K[O].count,Q=K[O].index;for(U=Z,B=Z+J;U<B;U+=3)H=Q+e[U],G=Q+e[U+1],k=Q+e[U+2],j=G,X=k,o=t[3*(W=H)],s=t[3*W+1],l=t[3*W+2],h=t[3*j],c=t[3*j+1],u=t[3*j+2],d=t[3*X],f=t[3*X+1],m=t[3*X+2],g=r[2*W],v=r[2*W+1],y=r[2*j],x=r[2*j+1],_=r[2*X],w=r[2*X+1],b=h-o,M=d-o,S=c-s,T=f-s,E=u-l,A=m-l,D=1/((C=y-g)*(P=w-v)-(L=_-g)*(R=x-v)),q.set((P*b-R*M)*D,(P*S-R*T)*D,(P*E-R*A)*D),Y.set((C*M-L*b)*D,(C*T-L*S)*D,(C*A-L*E)*D),z[W].add(q),z[j].add(q),z[X].add(q),I[W].add(Y),I[j].add(Y),I[X].add(Y)}var $,ee,te,ie=new p.Vector3,re=new p.Vector3,ne=new p.Vector3,ae=new p.Vector3;for(O=0,V=K.length;O<V;++O){Z=K[O].start,J=K[O].count,Q=K[O].index;for(U=Z,B=Z+J;U<B;U+=3)H=Q+e[U],G=Q+e[U+1],k=Q+e[U+2],oe(H),oe(G),oe(k)}this.hasTangents=!0,this.tangentsNeedUpdate=!0}else console.warn("Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()");function oe(e){ne.x=i[3*e],ne.y=i[3*e+1],ne.z=i[3*e+2],ae.copy(ne),ee=z[e],ie.copy(ee),ie.sub(ne.multiplyScalar(ne.dot(ee))).normalize(),re.crossVectors(ae,ee),te=re.dot(I[e]),$=te<0?-1:1,F[4*e]=ie.x,F[4*e+1]=ie.y,F[4*e+2]=ie.z,F[4*e+3]=$}},dispose:function(){this.dispatchEvent({type:"dispose"})}},p.Camera=function(){p.Object3D.call(this),this.matrixWorldInverse=new p.Matrix4,this.projectionMatrix=new p.Matrix4,this.projectionMatrixInverse=new p.Matrix4},p.Camera.prototype=Object.create(p.Object3D.prototype),p.Camera.prototype.lookAt=function(e){this.matrix.lookAt(this.position,e,this.up),!0===this.rotationAutoUpdate&&(!1===this.useQuaternion?this.rotation.setEulerFromRotationMatrix(this.matrix,this.eulerOrder):this.quaternion.copy(this.matrix.decompose()[1]))},p.OrthographicCamera=function(e,t,i,r,n,a){p.Camera.call(this),this.left=e,this.right=t,this.top=i,this.bottom=r,this.near=void 0!==n?n:.1,this.far=void 0!==a?a:2e3,this.updateProjectionMatrix()},p.OrthographicCamera.prototype=Object.create(p.Camera.prototype),p.OrthographicCamera.prototype.updateProjectionMatrix=function(){this.projectionMatrix.makeOrthographic(this.left,this.right,this.top,this.bottom,this.near,this.far)},p.PerspectiveCamera=function(e,t,i,r){p.Camera.call(this),this.fov=void 0!==e?e:50,this.aspect=void 0!==t?t:1,this.near=void 0!==i?i:.1,this.far=void 0!==r?r:2e3,this.updateProjectionMatrix()},p.PerspectiveCamera.prototype=Object.create(p.Camera.prototype),p.PerspectiveCamera.prototype.setLens=function(e,t){void 0===t&&(t=24),this.fov=2*p.Math.radToDeg(Math.atan(t/(2*e))),this.updateProjectionMatrix()},p.PerspectiveCamera.prototype.setViewOffset=function(e,t,i,r,n,a){this.fullWidth=e,this.fullHeight=t,this.x=i,this.y=r,this.width=n,this.height=a,this.updateProjectionMatrix()},p.PerspectiveCamera.prototype.updateProjectionMatrix=function(){if(this.fullWidth){var e=this.fullWidth/this.fullHeight,t=Math.tan(p.Math.degToRad(.5*this.fov))*this.near,i=-t,r=e*i,n=e*t,a=Math.abs(n-r),o=Math.abs(t-i);this.projectionMatrix.makeFrustum(r+this.x*a/this.fullWidth,r+(this.x+this.width)*a/this.fullWidth,t-(this.y+this.height)*o/this.fullHeight,t-this.y*o/this.fullHeight,this.near,this.far)}else this.projectionMatrix.makePerspective(this.fov,this.aspect,this.near,this.far)},p.Light=function(e){p.Object3D.call(this),this.color=new p.Color(e)},p.Light.prototype=Object.create(p.Object3D.prototype),p.AmbientLight=function(e){p.Light.call(this,e)},p.AmbientLight.prototype=Object.create(p.Light.prototype),p.AreaLight=function(e,t){p.Light.call(this,e),this.normal=new p.Vector3(0,-1,0),this.right=new p.Vector3(1,0,0),this.intensity=void 0!==t?t:1,this.width=1,this.height=1,this.constantAttenuation=1.5,this.linearAttenuation=.5,this.quadraticAttenuation=.1},p.AreaLight.prototype=Object.create(p.Light.prototype),p.DirectionalLight=function(e,t){p.Light.call(this,e),this.position=new p.Vector3(0,1,0),this.target=new p.Object3D,this.intensity=void 0!==t?t:1,this.castShadow=!1,this.onlyShadow=!1,this.shadowCameraNear=50,this.shadowCameraFar=5e3,this.shadowCameraLeft=-500,this.shadowCameraRight=500,this.shadowCameraTop=500,this.shadowCameraBottom=-500,this.shadowCameraVisible=!1,this.shadowBias=0,this.shadowDarkness=.5,this.shadowMapWidth=512,this.shadowMapHeight=512,this.shadowCascade=!1,this.shadowCascadeOffset=new p.Vector3(0,0,-1e3),this.shadowCascadeCount=2,this.shadowCascadeBias=[0,0,0],this.shadowCascadeWidth=[512,512,512],this.shadowCascadeHeight=[512,512,512],this.shadowCascadeNearZ=[-1,.99,.998],this.shadowCascadeFarZ=[.99,.998,1],this.shadowCascadeArray=[],this.shadowMap=null,this.shadowMapSize=null,this.shadowCamera=null,this.shadowMatrix=null},p.DirectionalLight.prototype=Object.create(p.Light.prototype),p.HemisphereLight=function(e,t,i){p.Light.call(this,e),this.groundColor=new p.Color(t),this.position=new p.Vector3(0,100,0),this.intensity=void 0!==i?i:1},p.HemisphereLight.prototype=Object.create(p.Light.prototype),p.PointLight=function(e,t,i){p.Light.call(this,e),this.position=new p.Vector3(0,0,0),this.intensity=void 0!==t?t:1,this.distance=void 0!==i?i:0},p.PointLight.prototype=Object.create(p.Light.prototype),p.SpotLight=function(e,t,i,r,n){p.Light.call(this,e),this.position=new p.Vector3(0,1,0),this.target=new p.Object3D,this.intensity=void 0!==t?t:1,this.distance=void 0!==i?i:0,this.angle=void 0!==r?r:Math.PI/2,this.exponent=void 0!==n?n:10,this.castShadow=!1,this.onlyShadow=!1,this.shadowCameraNear=50,this.shadowCameraFar=5e3,this.shadowCameraFov=50,this.shadowCameraVisible=!1,this.shadowBias=0,this.shadowDarkness=.5,this.shadowMapWidth=512,this.shadowMapHeight=512,this.shadowMap=null,this.shadowMapSize=null,this.shadowCamera=null,this.shadowMatrix=null},p.SpotLight.prototype=Object.create(p.Light.prototype),p.Loader=function(e){this.showStatus=e,this.statusDomElement=e?p.Loader.prototype.addStatusElement():null,this.onLoadStart=function(){},this.onLoadProgress=function(){},this.onLoadComplete=function(){}},p.Loader.prototype={constructor:p.Loader,crossOrigin:"anonymous",addStatusElement:function(){var e=document.createElement("div");return e.style.position="absolute",e.style.right="0px",e.style.top="0px",e.style.fontSize="0.8em",e.style.textAlign="left",e.style.background="rgba(0,0,0,0.25)",e.style.color="#fff",e.style.width="120px",e.style.padding="0.5em 0.5em 0.5em 0.5em",e.style.zIndex=1e3,e.innerHTML="Loading ...",e},updateProgress:function(e){var t="Loaded ";e.total?t+=(100*e.loaded/e.total).toFixed(0)+"%":t+=(e.loaded/1e3).toFixed(2)+" KB",this.statusDomElement.innerHTML=t},extractUrlBase:function(e){var t=e.split("/");return t.pop(),(t.length<1?".":t.join("/"))+"/"},initMaterials:function(e,t){for(var i=[],r=0;r<e.length;++r)i[r]=p.Loader.prototype.createMaterial(e[r],t);return i},needsTangents:function(e){for(var t=0,i=e.length;t<i;t++){if(e[t]instanceof p.ShaderMaterial)return!0}return!1},createMaterial:function(e,t){var i=this;function r(e){var t=Math.log(e)/Math.LN2;return Math.floor(t)==t}function n(e){var t=Math.log(e)/Math.LN2;return Math.pow(2,Math.round(t))}function a(e,a,o,s,l,h,c){var u=o.toLowerCase().endsWith(".dds"),d=t+"/"+o;if(u){var f=p.ImageUtils.loadCompressedTexture(d);e[a]=f}else{f=document.createElement("canvas");e[a]=new p.Texture(f)}if(e[a].sourceFile=o,s&&(e[a].repeat.set(s[0],s[1]),1!==s[0]&&(e[a].wrapS=p.RepeatWrapping),1!==s[1]&&(e[a].wrapT=p.RepeatWrapping)),l&&e[a].offset.set(l[0],l[1]),h){var m={repeat:p.RepeatWrapping,mirror:p.MirroredRepeatWrapping};void 0!==m[h[0]]&&(e[a].wrapS=m[h[0]]),void 0!==m[h[1]]&&(e[a].wrapT=m[h[1]])}c&&(e[a].anisotropy=c),u||function(e,t){var a=new Image;a.onload=function(){if(r(this.width)&&r(this.height))e.image=this;else{var t=n(this.width),i=n(this.height);e.image.width=t,e.image.height=i,e.image.getContext("2d").drawImage(this,0,0,t,i)}e.needsUpdate=!0},a.crossOrigin=i.crossOrigin,a.src=t}(e[a],d)}function o(e){return(255*e[0]<<16)+(255*e[1]<<8)+255*e[2]}var s="MeshLambertMaterial",l={color:15658734,opacity:1,map:null,lightMap:null,normalMap:null,bumpMap:null,wireframe:!1};if(e.shading){var h=e.shading.toLowerCase();"phong"===h?s="MeshPhongMaterial":"basic"===h&&(s="MeshBasicMaterial")}if(void 0!==e.blending&&void 0!==p[e.blending]&&(l.blending=p[e.blending]),(void 0!==e.transparent||e.opacity<1)&&(l.transparent=e.transparent),void 0!==e.depthTest&&(l.depthTest=e.depthTest),void 0!==e.depthWrite&&(l.depthWrite=e.depthWrite),void 0!==e.visible&&(l.visible=e.visible),void 0!==e.flipSided&&(l.side=p.BackSide),void 0!==e.doubleSided&&(l.side=p.DoubleSide),void 0!==e.wireframe&&(l.wireframe=e.wireframe),void 0!==e.vertexColors&&("face"===e.vertexColors?l.vertexColors=p.FaceColors:e.vertexColors&&(l.vertexColors=p.VertexColors)),e.colorDiffuse?l.color=o(e.colorDiffuse):e.DbgColor&&(l.color=e.DbgColor),e.colorSpecular&&(l.specular=o(e.colorSpecular)),e.colorAmbient&&(l.ambient=o(e.colorAmbient)),e.transparency&&(l.opacity=e.transparency),e.specularCoef&&(l.shininess=e.specularCoef),e.mapDiffuse&&t&&a(l,"map",e.mapDiffuse,e.mapDiffuseRepeat,e.mapDiffuseOffset,e.mapDiffuseWrap,e.mapDiffuseAnisotropy),e.mapLight&&t&&a(l,"lightMap",e.mapLight,e.mapLightRepeat,e.mapLightOffset,e.mapLightWrap,e.mapLightAnisotropy),e.mapBump&&t&&a(l,"bumpMap",e.mapBump,e.mapBumpRepeat,e.mapBumpOffset,e.mapBumpWrap,e.mapBumpAnisotropy),e.mapNormal&&t&&a(l,"normalMap",e.mapNormal,e.mapNormalRepeat,e.mapNormalOffset,e.mapNormalWrap,e.mapNormalAnisotropy),e.mapSpecular&&t&&a(l,"specularMap",e.mapSpecular,e.mapSpecularRepeat,e.mapSpecularOffset,e.mapSpecularWrap,e.mapSpecularAnisotropy),e.mapBumpScale&&(l.bumpScale=e.mapBumpScale),e.mapNormal){var c=p.ShaderLib.normalmap,u=p.UniformsUtils.clone(c.uniforms);u.tNormal.value=l.normalMap,e.mapNormalFactor&&u.uNormalScale.value.set(e.mapNormalFactor,e.mapNormalFactor),l.map&&(u.tDiffuse.value=l.map,u.enableDiffuse.value=!0),l.specularMap&&(u.tSpecular.value=l.specularMap,u.enableSpecular.value=!0),l.lightMap&&(u.tAO.value=l.lightMap,u.enableAO.value=!0),u.uDiffuseColor.value.setHex(l.color),u.uSpecularColor.value.setHex(l.specular),u.uAmbientColor.value.setHex(l.ambient),u.uShininess.value=l.shininess,void 0!==l.opacity&&(u.uOpacity.value=l.opacity);var d={fragmentShader:c.fragmentShader,vertexShader:c.vertexShader,uniforms:u,lights:!0,fog:!0},f=new p.ShaderMaterial(d);l.transparent&&(f.transparent=!0)}else f=new p[s](l);return void 0!==e.DbgName&&(f.name=e.DbgName),f}},p.ImageLoader=function(){p.EventDispatcher.call(this),this.crossOrigin=null},p.ImageLoader.prototype={constructor:p.ImageLoader,load:function(e,t){var i=this;void 0===t&&(t=new Image),t.addEventListener("load",function(){i.dispatchEvent({type:"load",content:t})},!1),t.addEventListener("error",function(){i.dispatchEvent({type:"error",message:"Couldn't load URL ["+e+"]"})},!1),i.crossOrigin&&(t.crossOrigin=i.crossOrigin),t.src=e}},p.JSONLoader=function(e){p.Loader.call(this,e),this.withCredentials=!1},p.JSONLoader.prototype=Object.create(p.Loader.prototype),p.JSONLoader.prototype.load=function(e,t,i){i=i&&"string"==typeof i?i:this.extractUrlBase(e),this.onLoadStart(),this.loadAjaxJSON(this,e,t,i)},p.JSONLoader.prototype.loadAjaxJSON=function(e,t,i,r,n){var a=new XMLHttpRequest,o=0;a.onreadystatechange=function(){if(a.readyState===a.DONE)if(200===a.status||0===a.status){if(a.responseText){var s=JSON.parse(a.responseText);e.createModel(s,i,r)}else console.warn("THREE.JSONLoader: ["+t+"] seems to be unreachable or file there is empty");e.onLoadComplete()}else console.error("THREE.JSONLoader: Couldn't load ["+t+"] ["+a.status+"]");else a.readyState===a.LOADING?n&&(0===o&&(o=a.getResponseHeader("Content-Length")),n({total:o,loaded:a.responseText.length})):a.readyState===a.HEADERS_RECEIVED&&(o=a.getResponseHeader("Content-Length"))},a.open("GET",t,!0),a.withCredentials=this.withCredentials,a.send(null)},p.JSONLoader.prototype.createModel=function(e,t,i){var r=new p.Geometry,n=void 0!==e.scale?1/e.scale:1;!function(t){function i(e,t){return e&1<<t}var n,a,o,s,l,h,c,u,d,f,m,g,v,y,x,_,w,b,M,S,T,E,A,C,L,R,P,D=e.faces,F=e.vertices,z=e.normals,I=e.colors,N=0;for(n=0;n<e.uvs.length;n++)e.uvs[n].length&&N++;for(n=0;n<N;n++)r.faceUvs[n]=[],r.faceVertexUvs[n]=[];s=0,l=F.length;for(;s<l;)(S=new p.Vector3).x=F[s++]*t,S.y=F[s++]*t,S.z=F[s++]*t,r.vertices.push(S);s=0,l=D.length;for(;s<l;){if(m=D[s++],g=i(m,0),v=i(m,1),y=i(m,2),x=i(m,3),_=i(m,4),w=i(m,5),b=i(m,6),M=i(m,7),g?((T=new p.Face4).a=D[s++],T.b=D[s++],T.c=D[s++],T.d=D[s++],h=4):((T=new p.Face3).a=D[s++],T.b=D[s++],T.c=D[s++],h=3),v&&(f=D[s++],T.materialIndex=f),o=r.faces.length,y)for(n=0;n<N;n++)C=e.uvs[n],d=D[s++],R=C[2*d],P=C[2*d+1],r.faceUvs[n][o]=new p.Vector2(R,P);if(x)for(n=0;n<N;n++){for(C=e.uvs[n],L=[],a=0;a<h;a++)d=D[s++],R=C[2*d],P=C[2*d+1],L[a]=new p.Vector2(R,P);r.faceVertexUvs[n][o]=L}if(_&&(u=3*D[s++],(A=new p.Vector3).x=z[u++],A.y=z[u++],A.z=z[u],T.normal=A),w)for(n=0;n<h;n++)u=3*D[s++],(A=new p.Vector3).x=z[u++],A.y=z[u++],A.z=z[u],T.vertexNormals.push(A);if(b&&(c=D[s++],E=new p.Color(I[c]),T.color=E),M)for(n=0;n<h;n++)c=D[s++],E=new p.Color(I[c]),T.vertexColors.push(E);r.faces.push(T)}}(n),function(){var t,i,n,a,o,s,l,h,c,u;if(e.skinWeights)for(t=0,i=e.skinWeights.length;t<i;t+=2)n=e.skinWeights[t],a=e.skinWeights[t+1],o=0,s=0,r.skinWeights.push(new p.Vector4(n,a,o,s));if(e.skinIndices)for(t=0,i=e.skinIndices.length;t<i;t+=2)l=e.skinIndices[t],h=e.skinIndices[t+1],c=0,u=0,r.skinIndices.push(new p.Vector4(l,h,c,u));r.bones=e.bones,r.animation=e.animation}(),function(t){var i,n,a,o,s,l,h,c,u,d,f;if(void 0!==e.morphTargets)for(s=0,l=e.morphTargets.length;s<l;s++)for(r.morphTargets[s]={},r.morphTargets[s].name=e.morphTargets[s].name,r.morphTargets[s].vertices=[],a=r.morphTargets[s].vertices,o=e.morphTargets[s].vertices,i=0,n=o.length;i<n;i+=3){var m=new p.Vector3;m.x=o[i]*t,m.y=o[i+1]*t,m.z=o[i+2]*t,a.push(m)}if(void 0!==e.morphColors)for(s=0,l=e.morphColors.length;s<l;s++)for(r.morphColors[s]={},r.morphColors[s].name=e.morphColors[s].name,r.morphColors[s].colors=[],u=r.morphColors[s].colors,d=e.morphColors[s].colors,h=0,c=d.length;h<c;h+=3)(f=new p.Color(16755200)).setRGB(d[h],d[h+1],d[h+2]),u.push(f)}(n),r.computeCentroids(),r.computeFaceNormals();var a=this.initMaterials(e.materials,i);this.needsTangents(a)&&r.computeTangents(),t(r,a)},p.LoadingMonitor=function(){p.EventDispatcher.call(this);var e=this,t=0,i=0,r=function(r){t++,e.dispatchEvent({type:"progress",loaded:t,total:i}),t===i&&e.dispatchEvent({type:"load"})};this.add=function(e){i++,e.addEventListener("load",r,!1)}},p.SceneLoader=function(){this.onLoadStart=function(){},this.onLoadProgress=function(){},this.onLoadComplete=function(){},this.callbackSync=function(){},this.callbackProgress=function(){},this.geometryHandlerMap={},this.hierarchyHandlerMap={},this.addGeometryHandler("ascii",p.JSONLoader)},p.SceneLoader.prototype.constructor=p.SceneLoader,p.SceneLoader.prototype.load=function(e,t){var i=this,r=new XMLHttpRequest;r.onreadystatechange=function(){if(4===r.readyState)if(200===r.status||0===r.status){var n=JSON.parse(r.responseText);i.parse(n,t,e)}else console.error("THREE.SceneLoader: Couldn't load ["+e+"] ["+r.status+"]")},r.open("GET",e,!0),r.send(null)},p.SceneLoader.prototype.addGeometryHandler=function(e,t){this.geometryHandlerMap[e]={loaderClass:t}},p.SceneLoader.prototype.addHierarchyHandler=function(e,t){this.hierarchyHandlerMap[e]={loaderClass:t}},p.SceneLoader.prototype.parse=function(e,t,i){var r,n,a,o,s,l,h,c,u,d,f,m,g,v,y=this,x=p.Loader.prototype.extractUrlBase(i),_=[],w=e;for(var b in this.geometryHandlerMap){var M=this.geometryHandlerMap[b].loaderClass;this.geometryHandlerMap[b].loaderObject=new M}for(var b in this.hierarchyHandlerMap){M=this.hierarchyHandlerMap[b].loaderClass;this.hierarchyHandlerMap[b].loaderObject=new M}if(d=0,f=0,v={scene:new p.Scene,geometries:{},face_materials:{},materials:{},textures:{},objects:{},cameras:{},lights:{},fogs:{},empties:{},groups:{}},w.transform){var S=w.transform.position,T=w.transform.rotation,E=w.transform.scale;S&&v.scene.position.set(S[0],S[1],S[2]),T&&v.scene.rotation.set(T[0],T[1],T[2]),E&&v.scene.scale.set(E[0],E[1],E[2]),(S||T||E)&&(v.scene.updateMatrix(),v.scene.updateMatrixWorld())}function A(e,t){return"relativeToHTML"==t?e:x+"/"+e}function C(){!function e(t,i){var o,s,l,d,f,m;for(var g in i)if(void 0===v.objects[g]){var x=i[g],b=null;if(x.type&&x.type in y.hierarchyHandlerMap){if(void 0===x.loading){var M={type:1,url:1,material:1,position:1,rotation:1,scale:1,visible:1,children:1,properties:1,skin:1,morph:1,mirroredLoop:1,duration:1},S={};for(var T in x)T in M||(S[T]=x[T]);n=v.materials[x.material],x.loading=!0;var E=y.hierarchyHandlerMap[x.type].loaderObject;E.options?E.load(A(x.url,w.urlBaseType),P(g,t,n,x)):E.load(A(x.url,w.urlBaseType),P(g,t,n,x),S)}}else if(void 0!==x.geometry){if(r=v.geometries[x.geometry]){var C=!1;if(n=v.materials[x.material],C=n instanceof p.ShaderMaterial,l=x.position,d=x.rotation,f=x.scale,o=x.matrix,m=x.quaternion,x.material||(n=new p.MeshFaceMaterial(v.face_materials[x.geometry])),n instanceof p.MeshFaceMaterial&&0===n.materials.length&&(n=new p.MeshFaceMaterial(v.face_materials[x.geometry])),n instanceof p.MeshFaceMaterial)for(var L=0;L<n.materials.length;L++)C=C||n.materials[L]instanceof p.ShaderMaterial;C&&r.computeTangents(),x.skin?b=new p.SkinnedMesh(r,n):x.morph?(b=new p.MorphAnimMesh(r,n),void 0!==x.duration&&(b.duration=x.duration),void 0!==x.time&&(b.time=x.time),void 0!==x.mirroredLoop&&(b.mirroredLoop=x.mirroredLoop),n.morphNormals&&r.computeMorphNormals()):b=new p.Mesh(r,n),b.name=g,o?(b.matrixAutoUpdate=!1,b.matrix.set(o[0],o[1],o[2],o[3],o[4],o[5],o[6],o[7],o[8],o[9],o[10],o[11],o[12],o[13],o[14],o[15])):(b.position.set(l[0],l[1],l[2]),m?(b.quaternion.set(m[0],m[1],m[2],m[3]),b.useQuaternion=!0):b.rotation.set(d[0],d[1],d[2]),b.scale.set(f[0],f[1],f[2])),b.visible=x.visible,b.castShadow=x.castShadow,b.receiveShadow=x.receiveShadow,t.add(b),v.objects[g]=b}}else"DirectionalLight"===x.type||"PointLight"===x.type||"AmbientLight"===x.type?(c=void 0!==x.color?x.color:16777215,u=void 0!==x.intensity?x.intensity:1,"DirectionalLight"===x.type?(l=x.direction,(h=new p.DirectionalLight(c,u)).position.set(l[0],l[1],l[2]),x.target&&(_.push({object:h,targetName:x.target}),h.target=null)):"PointLight"===x.type?(l=x.position,s=x.distance,(h=new p.PointLight(c,u,s)).position.set(l[0],l[1],l[2])):"AmbientLight"===x.type&&(h=new p.AmbientLight(c)),t.add(h),h.name=g,v.lights[g]=h,v.objects[g]=h):"PerspectiveCamera"===x.type||"OrthographicCamera"===x.type?("PerspectiveCamera"===x.type?a=new p.PerspectiveCamera(x.fov,x.aspect,x.near,x.far):"OrthographicCamera"===x.type&&(a=new p.OrthographicCamera(x.left,x.right,x.top,x.bottom,x.near,x.far)),l=x.position,a.position.set(l[0],l[1],l[2]),t.add(a),a.name=g,v.cameras[g]=a,v.objects[g]=a):(l=x.position,d=x.rotation,f=x.scale,m=x.quaternion,(b=new p.Object3D).name=g,b.position.set(l[0],l[1],l[2]),m?(b.quaternion.set(m[0],m[1],m[2],m[3]),b.useQuaternion=!0):b.rotation.set(d[0],d[1],d[2]),b.scale.set(f[0],f[1],f[2]),b.visible=void 0!==x.visible&&x.visible,t.add(b),v.objects[g]=b,v.empties[g]=b);if(b){if(void 0!==x.properties)for(var R in x.properties){var D=x.properties[R];b.properties[R]=D}if(void 0!==x.groups)for(var L=0;L<x.groups.length;L++){var F=x.groups[L];void 0===v.groups[F]&&(v.groups[F]=[]),v.groups[F].push(g)}void 0!==x.children&&e(b,x.children)}}}(v.scene,w.objects)}function L(e,t,i,r,n){var a=n.position,o=n.rotation,s=n.quaternion,l=n.scale;e.position.set(a[0],a[1],a[2]),s?(e.quaternion.set(s[0],s[1],s[2],s[3]),e.useQuaternion=!0):e.rotation.set(o[0],o[1],o[2]),e.scale.set(l[0],l[1],l[2]),r&&e.traverse(function(e){e.material=r});var h=void 0===n.visible||n.visible;e.traverse(function(e){e.visible=h}),i.add(e),e.name=t,v.objects[t]=e,C()}function R(e){return function(t,i){!function(e,t,i){v.geometries[i]=e,v.face_materials[i]=t,C()}(t,i,e),d-=1,y.onLoadComplete(),F()}}function P(e,t,i,r){return function(n){L(n.content?n.content:n.dae?n.scene:n,e,t,i,r),d-=1,y.onLoadComplete(),F()}}function D(e){return function(t,i){v.geometries[e]=t,v.face_materials[e]=i}}function F(){var e={totalModels:m,totalTextures:g,loadedModels:m-d,loadedTextures:g-f};y.callbackProgress(e,v),y.onLoadProgress(),0===d&&0===f&&(!function(){for(var e=0;e<_.length;e++){var t=_[e],i=v.objects[t.targetName];i?t.object.target=i:(t.object.target=new p.Object3D,v.scene.add(t.object.target)),t.object.target.properties.targetInverse=t.object}}(),t(v))}var z,I,N,U,B,O,V,H,G,k,W,j=function(e){return function(){!function(e){f-=e,F(),y.onLoadComplete()}(e)}};for(z in w.fogs)"linear"===(I=w.fogs[z]).type?o=new p.Fog(0,I.near,I.far):"exp2"===I.type&&(o=new p.FogExp2(0,I.density)),l=I.color,o.color.setRGB(l[0],l[1],l[2]),v.fogs[z]=o;for(N in w.geometries)(U=w.geometries[N]).type in this.geometryHandlerMap&&(d+=1,y.onLoadStart());for(B in w.objects)(O=w.objects[B]).type&&O.type in this.hierarchyHandlerMap&&(d+=1,y.onLoadStart());for(N in m=d,w.geometries)if("cube"===(U=w.geometries[N]).type)r=new p.CubeGeometry(U.width,U.height,U.depth,U.widthSegments,U.heightSegments,U.depthSegments),v.geometries[N]=r;else if("plane"===U.type)r=new p.PlaneGeometry(U.width,U.height,U.widthSegments,U.heightSegments),v.geometries[N]=r;else if("sphere"===U.type)r=new p.SphereGeometry(U.radius,U.widthSegments,U.heightSegments),v.geometries[N]=r;else if("cylinder"===U.type)r=new p.CylinderGeometry(U.topRad,U.botRad,U.height,U.radSegs,U.heightSegs),v.geometries[N]=r;else if("torus"===U.type)r=new p.TorusGeometry(U.radius,U.tube,U.segmentsR,U.segmentsT),v.geometries[N]=r;else if("icosahedron"===U.type)r=new p.IcosahedronGeometry(U.radius,U.subdivisions),v.geometries[N]=r;else if(U.type in this.geometryHandlerMap){var X={};for(var q in U)"type"!==q&&"url"!==q&&(X[q]=U[q]);this.geometryHandlerMap[U.type].loaderObject.load(A(U.url,w.urlBaseType),R(N),X)}else if("embedded"===U.type){var Y=w.embeds[U.id];if(Y.metadata=w.metadata,Y)this.geometryHandlerMap.ascii.loaderObject.createModel(Y,D(N),"")}for(V in w.textures)if((H=w.textures[V]).url instanceof Array){f+=H.url.length;for(var K=0;K<H.url.length;K++)y.onLoadStart()}else f+=1,y.onLoadStart();for(V in g=f,w.textures){if(void 0!==(H=w.textures[V]).mapping&&void 0!==p[H.mapping]&&(H.mapping=new p[H.mapping]),H.url instanceof Array){for(var Z=H.url.length,J=[],Q=0;Q<Z;Q++)J[Q]=A(H.url[Q],w.urlBaseType);s=($=J[0].endsWith(".dds"))?p.ImageUtils.loadCompressedTextureCube(J,H.mapping,j(Z)):p.ImageUtils.loadTextureCube(J,H.mapping,j(Z))}else{var $=H.url.toLowerCase().endsWith(".dds"),ee=A(H.url,w.urlBaseType),te=j(1);if(s=$?p.ImageUtils.loadCompressedTexture(ee,H.mapping,te):p.ImageUtils.loadTexture(ee,H.mapping,te),void 0!==p[H.minFilter]&&(s.minFilter=p[H.minFilter]),void 0!==p[H.magFilter]&&(s.magFilter=p[H.magFilter]),H.anisotropy&&(s.anisotropy=H.anisotropy),H.repeat&&(s.repeat.set(H.repeat[0],H.repeat[1]),1!==H.repeat[0]&&(s.wrapS=p.RepeatWrapping),1!==H.repeat[1]&&(s.wrapT=p.RepeatWrapping)),H.offset&&s.offset.set(H.offset[0],H.offset[1]),H.wrap){var ie={repeat:p.RepeatWrapping,mirror:p.MirroredRepeatWrapping};void 0!==ie[H.wrap[0]]&&(s.wrapS=ie[H.wrap[0]]),void 0!==ie[H.wrap[1]]&&(s.wrapT=ie[H.wrap[1]])}}v.textures[V]=s}for(G in w.materials){for(W in(k=w.materials[G]).parameters)if("envMap"===W||"map"===W||"lightMap"===W||"bumpMap"===W)k.parameters[W]=v.textures[k.parameters[W]];else if("shading"===W)k.parameters[W]="flat"===k.parameters[W]?p.FlatShading:p.SmoothShading;else if("side"===W)"double"==k.parameters[W]?k.parameters[W]=p.DoubleSide:"back"==k.parameters[W]?k.parameters[W]=p.BackSide:k.parameters[W]=p.FrontSide;else if("blending"===W)k.parameters[W]=k.parameters[W]in p?p[k.parameters[W]]:p.NormalBlending;else if("combine"===W)k.parameters[W]=k.parameters[W]in p?p[k.parameters[W]]:p.MultiplyOperation;else if("vertexColors"===W)"face"==k.parameters[W]?k.parameters[W]=p.FaceColors:k.parameters[W]&&(k.parameters[W]=p.VertexColors);else if("wrapRGB"===W){var re=k.parameters[W];k.parameters[W]=new p.Vector3(re[0],re[1],re[2])}if(void 0!==k.parameters.opacity&&k.parameters.opacity<1&&(k.parameters.transparent=!0),k.parameters.normalMap){var ne=p.ShaderLib.normalmap,ae=p.UniformsUtils.clone(ne.uniforms),oe=k.parameters.color,se=k.parameters.specular,le=k.parameters.ambient,he=k.parameters.shininess;ae.tNormal.value=v.textures[k.parameters.normalMap],k.parameters.normalScale&&ae.uNormalScale.value.set(k.parameters.normalScale[0],k.parameters.normalScale[1]),k.parameters.map&&(ae.tDiffuse.value=k.parameters.map,ae.enableDiffuse.value=!0),k.parameters.envMap&&(ae.tCube.value=k.parameters.envMap,ae.enableReflection.value=!0,ae.uReflectivity.value=k.parameters.reflectivity),k.parameters.lightMap&&(ae.tAO.value=k.parameters.lightMap,ae.enableAO.value=!0),k.parameters.specularMap&&(ae.tSpecular.value=v.textures[k.parameters.specularMap],ae.enableSpecular.value=!0),k.parameters.displacementMap&&(ae.tDisplacement.value=v.textures[k.parameters.displacementMap],ae.enableDisplacement.value=!0,ae.uDisplacementBias.value=k.parameters.displacementBias,ae.uDisplacementScale.value=k.parameters.displacementScale),ae.uDiffuseColor.value.setHex(oe),ae.uSpecularColor.value.setHex(se),ae.uAmbientColor.value.setHex(le),ae.uShininess.value=he,k.parameters.opacity&&(ae.uOpacity.value=k.parameters.opacity);var ce={fragmentShader:ne.fragmentShader,vertexShader:ne.vertexShader,uniforms:ae,lights:!0,fog:!0};n=new p.ShaderMaterial(ce)}else n=new p[k.type](k.parameters);v.materials[G]=n}for(G in w.materials)if((k=w.materials[G]).parameters.materials){var ue=[];for(Q=0;Q<k.parameters.materials.length;Q++){var de=k.parameters.materials[Q];ue.push(v.materials[de])}v.materials[G].materials=ue}C(),v.cameras&&w.defaults.camera&&(v.currentCamera=v.cameras[w.defaults.camera]),v.fogs&&w.defaults.fog&&(v.scene.fog=v.fogs[w.defaults.fog]),y.callbackSync(v),F()},p.TextureLoader=function(){p.EventDispatcher.call(this),this.crossOrigin=null},p.TextureLoader.prototype={constructor:p.TextureLoader,load:function(e){var t=this,i=new Image;i.addEventListener("load",function(){var e=new p.Texture(i);e.needsUpdate=!0,t.dispatchEvent({type:"load",content:e})},!1),i.addEventListener("error",function(){t.dispatchEvent({type:"error",message:"Couldn't load URL ["+e+"]"})},!1),t.crossOrigin&&(i.crossOrigin=t.crossOrigin),i.src=e}},p.Material=function(){p.EventDispatcher.call(this),this.id=p.MaterialIdCount++,this.name="",this.side=p.FrontSide,this.opacity=1,this.transparent=!1,this.blending=p.NormalBlending,this.blendSrc=p.SrcAlphaFactor,this.blendDst=p.OneMinusSrcAlphaFactor,this.blendEquation=p.AddEquation,this.depthTest=!0,this.depthWrite=!0,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.alphaTest=0,this.overdraw=!1,this.visible=!0,this.needsUpdate=!0},p.Material.prototype.setValues=function(e){if(void 0!==e)for(var t in e){var i=e[t];if(void 0!==i){if(t in this){var r=this[t];r instanceof p.Color&&i instanceof p.Color?r.copy(i):r instanceof p.Color?r.set(i):r instanceof p.Vector3&&i instanceof p.Vector3?r.copy(i):this[t]=i}}else console.warn("THREE.Material: '"+t+"' parameter is undefined.")}},p.Material.prototype.clone=function(e){return void 0===e&&(e=new p.Material),e.name=this.name,e.side=this.side,e.opacity=this.opacity,e.transparent=this.transparent,e.blending=this.blending,e.blendSrc=this.blendSrc,e.blendDst=this.blendDst,e.blendEquation=this.blendEquation,e.depthTest=this.depthTest,e.depthWrite=this.depthWrite,e.polygonOffset=this.polygonOffset,e.polygonOffsetFactor=this.polygonOffsetFactor,e.polygonOffsetUnits=this.polygonOffsetUnits,e.alphaTest=this.alphaTest,e.overdraw=this.overdraw,e.visible=this.visible,e},p.Material.prototype.dispose=function(){this.dispatchEvent({type:"dispose"})},p.MaterialIdCount=0,p.LineBasicMaterial=function(e){p.Material.call(this),this.color=new p.Color(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.vertexColors=!1,this.fog=!0,this.setValues(e)},p.LineBasicMaterial.prototype=Object.create(p.Material.prototype),p.LineBasicMaterial.prototype.clone=function(){var e=new p.LineBasicMaterial;return p.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.linewidth=this.linewidth,e.linecap=this.linecap,e.linejoin=this.linejoin,e.vertexColors=this.vertexColors,e.fog=this.fog,e},p.LineDashedMaterial=function(e){p.Material.call(this),this.color=new p.Color(16777215),this.linewidth=1,this.scale=1,this.dashSize=3,this.gapSize=1,this.vertexColors=!1,this.fog=!0,this.setValues(e)},p.LineDashedMaterial.prototype=Object.create(p.Material.prototype),p.LineDashedMaterial.prototype.clone=function(){var e=new p.LineDashedMaterial;return p.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.linewidth=this.linewidth,e.scale=this.scale,e.dashSize=this.dashSize,e.gapSize=this.gapSize,e.vertexColors=this.vertexColors,e.fog=this.fog,e},p.MeshBasicMaterial=function(e){p.Material.call(this),this.color=new p.Color(16777215),this.map=null,this.lightMap=null,this.specularMap=null,this.envMap=null,this.combine=p.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=p.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.vertexColors=p.NoColors,this.skinning=!1,this.morphTargets=!1,this.setValues(e)},p.MeshBasicMaterial.prototype=Object.create(p.Material.prototype),p.MeshBasicMaterial.prototype.clone=function(){var e=new p.MeshBasicMaterial;return p.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.map=this.map,e.lightMap=this.lightMap,e.specularMap=this.specularMap,e.envMap=this.envMap,e.combine=this.combine,e.reflectivity=this.reflectivity,e.refractionRatio=this.refractionRatio,e.fog=this.fog,e.shading=this.shading,e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e.wireframeLinecap=this.wireframeLinecap,e.wireframeLinejoin=this.wireframeLinejoin,e.vertexColors=this.vertexColors,e.skinning=this.skinning,e.morphTargets=this.morphTargets,e},p.MeshLambertMaterial=function(e){p.Material.call(this),this.color=new p.Color(16777215),this.ambient=new p.Color(16777215),this.emissive=new p.Color(0),this.wrapAround=!1,this.wrapRGB=new p.Vector3(1,1,1),this.map=null,this.lightMap=null,this.specularMap=null,this.envMap=null,this.combine=p.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=p.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.vertexColors=p.NoColors,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)},p.MeshLambertMaterial.prototype=Object.create(p.Material.prototype),p.MeshLambertMaterial.prototype.clone=function(){var e=new p.MeshLambertMaterial;return p.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.ambient.copy(this.ambient),e.emissive.copy(this.emissive),e.wrapAround=this.wrapAround,e.wrapRGB.copy(this.wrapRGB),e.map=this.map,e.lightMap=this.lightMap,e.specularMap=this.specularMap,e.envMap=this.envMap,e.combine=this.combine,e.reflectivity=this.reflectivity,e.refractionRatio=this.refractionRatio,e.fog=this.fog,e.shading=this.shading,e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e.wireframeLinecap=this.wireframeLinecap,e.wireframeLinejoin=this.wireframeLinejoin,e.vertexColors=this.vertexColors,e.skinning=this.skinning,e.morphTargets=this.morphTargets,e.morphNormals=this.morphNormals,e},p.MeshPhongMaterial=function(e){p.Material.call(this),this.color=new p.Color(16777215),this.ambient=new p.Color(16777215),this.emissive=new p.Color(0),this.specular=new p.Color(1118481),this.shininess=30,this.metal=!1,this.perPixel=!0,this.wrapAround=!1,this.wrapRGB=new p.Vector3(1,1,1),this.map=null,this.lightMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalScale=new p.Vector2(1,1),this.specularMap=null,this.envMap=null,this.combine=p.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=p.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.vertexColors=p.NoColors,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)},p.MeshPhongMaterial.prototype=Object.create(p.Material.prototype),p.MeshPhongMaterial.prototype.clone=function(){var e=new p.MeshPhongMaterial;return p.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.ambient.copy(this.ambient),e.emissive.copy(this.emissive),e.specular.copy(this.specular),e.shininess=this.shininess,e.metal=this.metal,e.perPixel=this.perPixel,e.wrapAround=this.wrapAround,e.wrapRGB.copy(this.wrapRGB),e.map=this.map,e.lightMap=this.lightMap,e.bumpMap=this.bumpMap,e.bumpScale=this.bumpScale,e.normalMap=this.normalMap,e.normalScale.copy(this.normalScale),e.specularMap=this.specularMap,e.envMap=this.envMap,e.combine=this.combine,e.reflectivity=this.reflectivity,e.refractionRatio=this.refractionRatio,e.fog=this.fog,e.shading=this.shading,e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e.wireframeLinecap=this.wireframeLinecap,e.wireframeLinejoin=this.wireframeLinejoin,e.vertexColors=this.vertexColors,e.skinning=this.skinning,e.morphTargets=this.morphTargets,e.morphNormals=this.morphNormals,e},p.MeshDepthMaterial=function(e){p.Material.call(this),this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)},p.MeshDepthMaterial.prototype=Object.create(p.Material.prototype),p.MeshDepthMaterial.prototype.clone=function(){var e=new p.LineBasicMaterial;return p.Material.prototype.clone.call(this,e),e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e},p.MeshNormalMaterial=function(e){p.Material.call(this,e),this.shading=p.FlatShading,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)},p.MeshNormalMaterial.prototype=Object.create(p.Material.prototype),p.MeshNormalMaterial.prototype.clone=function(){var e=new p.MeshNormalMaterial;return p.Material.prototype.clone.call(this,e),e.shading=this.shading,e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e},p.MeshFaceMaterial=function(e){this.materials=e instanceof Array?e:[]},p.MeshFaceMaterial.prototype.clone=function(){return new p.MeshFaceMaterial(this.materials.slice(0))},p.ParticleBasicMaterial=function(e){p.Material.call(this),this.color=new p.Color(16777215),this.map=null,this.size=1,this.sizeAttenuation=!0,this.vertexColors=!1,this.fog=!0,this.setValues(e)},p.ParticleBasicMaterial.prototype=Object.create(p.Material.prototype),p.ParticleBasicMaterial.prototype.clone=function(){var e=new p.ParticleBasicMaterial;return p.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.map=this.map,e.size=this.size,e.sizeAttenuation=this.sizeAttenuation,e.vertexColors=this.vertexColors,e.fog=this.fog,e},p.ParticleCanvasMaterial=function(e){p.Material.call(this),this.color=new p.Color(16777215),this.program=function(e,t){},this.setValues(e)},p.ParticleCanvasMaterial.prototype=Object.create(p.Material.prototype),p.ParticleCanvasMaterial.prototype.clone=function(){var e=new p.ParticleCanvasMaterial;return p.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.program=this.program,e},p.ShaderMaterial=function(e){p.Material.call(this),this.fragmentShader="void main() {}",this.vertexShader="void main() {}",this.uniforms={},this.defines={},this.attributes=null,this.shading=p.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.vertexColors=p.NoColors,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)},p.ShaderMaterial.prototype=Object.create(p.Material.prototype),p.ShaderMaterial.prototype.clone=function(){var e=new p.ShaderMaterial;return p.Material.prototype.clone.call(this,e),e.fragmentShader=this.fragmentShader,e.vertexShader=this.vertexShader,e.uniforms=p.UniformsUtils.clone(this.uniforms),e.attributes=this.attributes,e.defines=this.defines,e.shading=this.shading,e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e.fog=this.fog,e.lights=this.lights,e.vertexColors=this.vertexColors,e.skinning=this.skinning,e.morphTargets=this.morphTargets,e.morphNormals=this.morphNormals,e},p.SpriteMaterial=function(e){p.Material.call(this),this.color=new p.Color(16777215),this.map=new p.Texture,this.useScreenCoordinates=!0,this.depthTest=!this.useScreenCoordinates,this.sizeAttenuation=!this.useScreenCoordinates,this.scaleByViewport=!this.sizeAttenuation,this.alignment=p.SpriteAlignment.center.clone(),this.fog=!1,this.uvOffset=new p.Vector2(0,0),this.uvScale=new p.Vector2(1,1),this.setValues(e),void 0===(e=e||{}).depthTest&&(this.depthTest=!this.useScreenCoordinates),void 0===e.sizeAttenuation&&(this.sizeAttenuation=!this.useScreenCoordinates),void 0===e.scaleByViewport&&(this.scaleByViewport=!this.sizeAttenuation)},p.SpriteMaterial.prototype=Object.create(p.Material.prototype),p.SpriteMaterial.prototype.clone=function(){var e=new p.SpriteMaterial;return p.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.map=this.map,e.useScreenCoordinates=this.useScreenCoordinates,e.sizeAttenuation=this.sizeAttenuation,e.scaleByViewport=this.scaleByViewport,e.alignment.copy(this.alignment),e.uvOffset.copy(this.uvOffset),e.uvScale.copy(this.uvScale),e.fog=this.fog,e},p.SpriteAlignment={},p.SpriteAlignment.topLeft=new p.Vector2(1,-1),p.SpriteAlignment.topCenter=new p.Vector2(0,-1),p.SpriteAlignment.topRight=new p.Vector2(-1,-1),p.SpriteAlignment.centerLeft=new p.Vector2(1,0),p.SpriteAlignment.center=new p.Vector2(0,0),p.SpriteAlignment.centerRight=new p.Vector2(-1,0),p.SpriteAlignment.bottomLeft=new p.Vector2(1,1),p.SpriteAlignment.bottomCenter=new p.Vector2(0,1),p.SpriteAlignment.bottomRight=new p.Vector2(-1,1),p.Texture=function(e,t,i,r,n,a,o,s,l){p.EventDispatcher.call(this),this.id=p.TextureIdCount++,this.name="",this.image=e,this.mipmaps=[],this.mapping=void 0!==t?t:new p.UVMapping,this.wrapS=void 0!==i?i:p.ClampToEdgeWrapping,this.wrapT=void 0!==r?r:p.ClampToEdgeWrapping,this.magFilter=void 0!==n?n:p.LinearFilter,this.minFilter=void 0!==a?a:p.LinearMipMapLinearFilter,this.anisotropy=void 0!==l?l:1,this.format=void 0!==o?o:p.RGBAFormat,this.type=void 0!==s?s:p.UnsignedByteType,this.offset=new p.Vector2(0,0),this.repeat=new p.Vector2(1,1),this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.needsUpdate=!1,this.onUpdate=null},p.Texture.prototype={constructor:p.Texture,clone:function(e){return void 0===e&&(e=new p.Texture),e.image=this.image,e.mipmaps=this.mipmaps.slice(0),e.mapping=this.mapping,e.wrapS=this.wrapS,e.wrapT=this.wrapT,e.magFilter=this.magFilter,e.minFilter=this.minFilter,e.anisotropy=this.anisotropy,e.format=this.format,e.type=this.type,e.offset.copy(this.offset),e.repeat.copy(this.repeat),e.generateMipmaps=this.generateMipmaps,e.premultiplyAlpha=this.premultiplyAlpha,e.flipY=this.flipY,e.unpackAlignment=this.unpackAlignment,e},dispose:function(){this.dispatchEvent({type:"dispose"})}},p.TextureIdCount=0,p.CompressedTexture=function(e,t,i,r,n,a,o,s,l,h,c){p.Texture.call(this,null,a,o,s,l,h,r,n,c),this.image={width:t,height:i},this.mipmaps=e,this.generateMipmaps=!1},p.CompressedTexture.prototype=Object.create(p.Texture.prototype),p.CompressedTexture.prototype.clone=function(){var e=new p.CompressedTexture;return p.Texture.prototype.clone.call(this,e),e},p.DataTexture=function(e,t,i,r,n,a,o,s,l,h,c){p.Texture.call(this,null,a,o,s,l,h,r,n,c),this.image={data:e,width:t,height:i}},p.DataTexture.prototype=Object.create(p.Texture.prototype),p.DataTexture.prototype.clone=function(){var e=new p.DataTexture;return p.Texture.prototype.clone.call(this,e),e},p.Particle=function(e){p.Object3D.call(this),this.material=e},p.Particle.prototype=Object.create(p.Object3D.prototype),p.Particle.prototype.clone=function(e){return void 0===e&&(e=new p.Particle(this.material)),p.Object3D.prototype.clone.call(this,e),e},p.ParticleSystem=function(e,t){p.Object3D.call(this),this.geometry=e,this.material=void 0!==t?t:new p.ParticleBasicMaterial({color:16777215*Math.random()}),this.sortParticles=!1,this.geometry&&null===this.geometry.boundingSphere&&this.geometry.computeBoundingSphere(),this.frustumCulled=!1},p.ParticleSystem.prototype=Object.create(p.Object3D.prototype),p.ParticleSystem.prototype.clone=function(e){return void 0===e&&(e=new p.ParticleSystem(this.geometry,this.material)),e.sortParticles=this.sortParticles,p.Object3D.prototype.clone.call(this,e),e},p.Line=function(e,t,i){p.Object3D.call(this),this.geometry=e,this.material=void 0!==t?t:new p.LineBasicMaterial({color:16777215*Math.random()}),this.type=void 0!==i?i:p.LineStrip,this.geometry&&(this.geometry.boundingSphere||this.geometry.computeBoundingSphere())},p.LineStrip=0,p.LinePieces=1,p.Line.prototype=Object.create(p.Object3D.prototype),p.Line.prototype.clone=function(e){return void 0===e&&(e=new p.Line(this.geometry,this.material,this.type)),p.Object3D.prototype.clone.call(this,e),e},p.Mesh=function(e,t){p.Object3D.call(this),this.geometry=e,this.material=void 0!==t?t:new p.MeshBasicMaterial({color:16777215*Math.random(),wireframe:!0}),void 0!==this.geometry&&(null===this.geometry.boundingSphere&&this.geometry.computeBoundingSphere(),this.updateMorphTargets())},p.Mesh.prototype=Object.create(p.Object3D.prototype),p.Mesh.prototype.updateMorphTargets=function(){if(this.geometry.morphTargets.length>0){this.morphTargetBase=-1,this.morphTargetForcedOrder=[],this.morphTargetInfluences=[],this.morphTargetDictionary={};for(var e=0,t=this.geometry.morphTargets.length;e<t;e++)this.morphTargetInfluences.push(0),this.morphTargetDictionary[this.geometry.morphTargets[e].name]=e}},p.Mesh.prototype.getMorphTargetIndexByName=function(e){return void 0!==this.morphTargetDictionary[e]?this.morphTargetDictionary[e]:(console.log("THREE.Mesh.getMorphTargetIndexByName: morph target "+e+" does not exist. Returning 0."),0)},p.Mesh.prototype.clone=function(e){return void 0===e&&(e=new p.Mesh(this.geometry,this.material)),p.Object3D.prototype.clone.call(this,e),e},p.Bone=function(e){p.Object3D.call(this),this.skin=e,this.skinMatrix=new p.Matrix4},p.Bone.prototype=Object.create(p.Object3D.prototype),p.Bone.prototype.update=function(e,t){this.matrixAutoUpdate&&(t|=this.updateMatrix()),(t||this.matrixWorldNeedsUpdate)&&(e?this.skinMatrix.multiplyMatrices(e,this.matrix):this.skinMatrix.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);var i,r=this.children.length;for(i=0;i<r;i++)this.children[i].update(this.skinMatrix,t)},p.SkinnedMesh=function(e,t,i){var r,n,a,o,s,l;if(p.Mesh.call(this,e,t),this.useVertexTexture=void 0===i||i,this.identityMatrix=new p.Matrix4,this.bones=[],this.boneMatrices=[],this.geometry&&void 0!==this.geometry.bones){for(r=0;r<this.geometry.bones.length;r++)o=(a=this.geometry.bones[r]).pos,s=a.rotq,l=a.scl,(n=this.addBone()).name=a.name,n.position.set(o[0],o[1],o[2]),n.quaternion.set(s[0],s[1],s[2],s[3]),n.useQuaternion=!0,void 0!==l?n.scale.set(l[0],l[1],l[2]):n.scale.set(1,1,1);for(r=0;r<this.bones.length;r++)a=this.geometry.bones[r],n=this.bones[r],-1===a.parent?this.add(n):this.bones[a.parent].add(n);var h,c=this.bones.length;if(this.useVertexTexture)h=c>256?64:c>64?32:c>16?16:8,this.boneTextureWidth=h,this.boneTextureHeight=h,this.boneMatrices=new Float32Array(this.boneTextureWidth*this.boneTextureHeight*4),this.boneTexture=new p.DataTexture(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,p.RGBAFormat,p.FloatType),this.boneTexture.minFilter=p.NearestFilter,this.boneTexture.magFilter=p.NearestFilter,this.boneTexture.generateMipmaps=!1,this.boneTexture.flipY=!1;else this.boneMatrices=new Float32Array(16*c);this.pose()}},p.SkinnedMesh.prototype=Object.create(p.Mesh.prototype),p.SkinnedMesh.prototype.addBone=function(e){return void 0===e&&(e=new p.Bone(this)),this.bones.push(e),e},p.SkinnedMesh.prototype.updateMatrixWorld=function(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent?this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);for(var t=0,i=this.children.length;t<i;t++){var r=this.children[t];r instanceof p.Bone?r.update(this.identityMatrix,!1):r.updateMatrixWorld(!0)}if(void 0==this.boneInverses){this.boneInverses=[];for(var n=0,a=this.bones.length;n<a;n++){var o=new p.Matrix4;o.getInverse(this.bones[n].skinMatrix),this.boneInverses.push(o)}}for(n=0,a=this.bones.length;n<a;n++)p.SkinnedMesh.offsetMatrix.multiplyMatrices(this.bones[n].skinMatrix,this.boneInverses[n]),p.SkinnedMesh.offsetMatrix.flattenToArrayOffset(this.boneMatrices,16*n);this.useVertexTexture&&(this.boneTexture.needsUpdate=!0)},p.SkinnedMesh.prototype.pose=function(){this.updateMatrixWorld(!0);for(var e=0;e<this.geometry.skinIndices.length;e++){var t=this.geometry.skinWeights[e],i=1/t.lengthManhattan();i!==1/0?t.multiplyScalar(i):t.set(1)}},p.SkinnedMesh.prototype.clone=function(e){return void 0===e&&(e=new p.SkinnedMesh(this.geometry,this.material,this.useVertexTexture)),p.Mesh.prototype.clone.call(this,e),e},p.SkinnedMesh.offsetMatrix=new p.Matrix4,p.MorphAnimMesh=function(e,t){p.Mesh.call(this,e,t),this.duration=1e3,this.mirroredLoop=!1,this.time=0,this.lastKeyframe=0,this.currentKeyframe=0,this.direction=1,this.directionBackwards=!1,this.setFrameRange(0,this.geometry.morphTargets.length-1)},p.MorphAnimMesh.prototype=Object.create(p.Mesh.prototype),p.MorphAnimMesh.prototype.setFrameRange=function(e,t){this.startKeyframe=e,this.endKeyframe=t,this.length=this.endKeyframe-this.startKeyframe+1},p.MorphAnimMesh.prototype.setDirectionForward=function(){this.direction=1,this.directionBackwards=!1},p.MorphAnimMesh.prototype.setDirectionBackward=function(){this.direction=-1,this.directionBackwards=!0},p.MorphAnimMesh.prototype.parseAnimations=function(){var e=this.geometry;e.animations||(e.animations={});for(var t,i=e.animations,r=/([a-z]+)(\d+)/,n=0,a=e.morphTargets.length;n<a;n++){var o=e.morphTargets[n].name.match(r);if(o&&o.length>1){var s=o[1];o[2];i[s]||(i[s]={start:1/0,end:-1/0});var l=i[s];n<l.start&&(l.start=n),n>l.end&&(l.end=n),t||(t=s)}}e.firstAnimation=t},p.MorphAnimMesh.prototype.setAnimationLabel=function(e,t,i){this.geometry.animations||(this.geometry.animations={}),this.geometry.animations[e]={start:t,end:i}},p.MorphAnimMesh.prototype.playAnimation=function(e,t){var i=this.geometry.animations[e];i?(this.setFrameRange(i.start,i.end),this.duration=(i.end-i.start)/t*1e3,this.time=0):console.warn("animation["+e+"] undefined")},p.MorphAnimMesh.prototype.updateAnimation=function(e){var t=this.duration/this.length;this.time+=this.direction*e,this.mirroredLoop?(this.time>this.duration||this.time<0)&&(this.direction*=-1,this.time>this.duration&&(this.time=this.duration,this.directionBackwards=!0),this.time<0&&(this.time=0,this.directionBackwards=!1)):(this.time=this.time%this.duration,this.time<0&&(this.time+=this.duration));var i=this.startKeyframe+p.Math.clamp(Math.floor(this.time/t),0,this.length-1);i!==this.currentKeyframe&&(this.morphTargetInfluences[this.lastKeyframe]=0,this.morphTargetInfluences[this.currentKeyframe]=1,this.morphTargetInfluences[i]=0,this.lastKeyframe=this.currentKeyframe,this.currentKeyframe=i);var r=this.time%t/t;this.directionBackwards&&(r=1-r),this.morphTargetInfluences[this.currentKeyframe]=r,this.morphTargetInfluences[this.lastKeyframe]=1-r},p.MorphAnimMesh.prototype.clone=function(e){return void 0===e&&(e=new p.MorphAnimMesh(this.geometry,this.material)),e.duration=this.duration,e.mirroredLoop=this.mirroredLoop,e.time=this.time,e.lastKeyframe=this.lastKeyframe,e.currentKeyframe=this.currentKeyframe,e.direction=this.direction,e.directionBackwards=this.directionBackwards,p.Mesh.prototype.clone.call(this,e),e},p.Ribbon=function(e,t){p.Object3D.call(this),this.geometry=e,this.material=t},p.Ribbon.prototype=Object.create(p.Object3D.prototype),p.Ribbon.prototype.clone=function(e){return void 0===e&&(e=new p.Ribbon(this.geometry,this.material)),p.Object3D.prototype.clone.call(this,e),e},p.LOD=function(){p.Object3D.call(this),this.LODs=[]},p.LOD.prototype=Object.create(p.Object3D.prototype),p.LOD.prototype.addLevel=function(e,t){void 0===t&&(t=0),t=Math.abs(t);for(var i=0;i<this.LODs.length&&!(t<this.LODs[i].visibleAtDistance);i++);this.LODs.splice(i,0,{visibleAtDistance:t,object3D:e}),this.add(e)},p.LOD.prototype.update=function(e){if(this.LODs.length>1){e.matrixWorldInverse.getInverse(e.matrixWorld);var t=e.matrixWorldInverse,i=-(t.elements[2]*this.matrixWorld.elements[12]+t.elements[6]*this.matrixWorld.elements[13]+t.elements[10]*this.matrixWorld.elements[14]+t.elements[14]);this.LODs[0].object3D.visible=!0;for(var r=1;r<this.LODs.length&&i>=this.LODs[r].visibleAtDistance;r++)this.LODs[r-1].object3D.visible=!1,this.LODs[r].object3D.visible=!0;for(;r<this.LODs.length;r++)this.LODs[r].object3D.visible=!1}},p.LOD.prototype.clone=function(){},p.Sprite=function(e){p.Object3D.call(this),this.material=void 0!==e?e:new p.SpriteMaterial,this.rotation3d=this.rotation,this.rotation=0},p.Sprite.prototype=Object.create(p.Object3D.prototype),p.Sprite.prototype.updateMatrix=function(){this.matrix.setPosition(this.position),this.rotation3d.set(0,0,this.rotation),this.matrix.setRotationFromEuler(this.rotation3d),1===this.scale.x&&1===this.scale.y||this.matrix.scale(this.scale),this.matrixWorldNeedsUpdate=!0},p.Sprite.prototype.clone=function(e){return void 0===e&&(e=new p.Sprite(this.material)),p.Object3D.prototype.clone.call(this,e),e},p.Scene=function(){p.Object3D.call(this),this.fog=null,this.overrideMaterial=null,this.matrixAutoUpdate=!1,this.__objects=[],this.__lights=[],this.__objectsAdded=[],this.__objectsRemoved=[]},p.Scene.prototype=Object.create(p.Object3D.prototype),p.Scene.prototype.__addObject=function(e){if(e instanceof p.Light)-1===this.__lights.indexOf(e)&&this.__lights.push(e),e.target&&void 0===e.target.parent&&this.add(e.target);else if(!(e instanceof p.Camera||e instanceof p.Bone)&&-1===this.__objects.indexOf(e)){this.__objects.push(e),this.__objectsAdded.push(e);var t=this.__objectsRemoved.indexOf(e);-1!==t&&this.__objectsRemoved.splice(t,1)}for(var i=0;i<e.children.length;i++)this.__addObject(e.children[i])},p.Scene.prototype.__removeObject=function(e){if(e instanceof p.Light)-1!==(t=this.__lights.indexOf(e))&&this.__lights.splice(t,1);else if(!(e instanceof p.Camera)){var t;if(-1!==(t=this.__objects.indexOf(e))){this.__objects.splice(t,1),this.__objectsRemoved.push(e);var i=this.__objectsAdded.indexOf(e);-1!==i&&this.__objectsAdded.splice(i,1)}}for(var r=0;r<e.children.length;r++)this.__removeObject(e.children[r])},p.Fog=function(e,t,i){this.name="",this.color=new p.Color(e),this.near=void 0!==t?t:1,this.far=void 0!==i?i:1e3},p.Fog.prototype.clone=function(){return new p.Fog(this.color.getHex(),this.near,this.far)},p.FogExp2=function(e,t){this.name="",this.color=new p.Color(e),this.density=void 0!==t?t:25e-5},p.FogExp2.prototype.clone=function(){return new p.FogExp2(this.color.getHex(),this.density)},p.CanvasRenderer=function(e){console.log("THREE.CanvasRenderer",p.REVISION),e=e||{};var t,i,r,n,a,o,s,l,h,c,d,f,m,g,v,y,x,_,w,b,M,S,T,E,A,C,L,R,P,D,F,z,I,N,U,B,O,V,H,G=this,k=new p.Projector,W=void 0!==e.canvas?e.canvas:document.createElement("canvas"),j=W.getContext("2d"),X=new p.Color(0),q=0,Y=1,K=0,Z=null,J=null,Q=null,$=null,ee=null,te=new p.RenderableVertex,ie=new p.RenderableVertex,re=new p.Color,ne=new p.Color,ae=new p.Color,oe=new p.Color,se=new p.Color,le=new p.Color,he=new p.Color,ce=new p.Color,ue={},de={},pe=new p.Box2,fe=new p.Box2,me=new p.Box2,ge=!1,ve=new p.Color,ye=new p.Color,xe=new p.Color,_e=(Math.PI,new p.Vector3),we=16;function be(e){Y!==e&&(j.globalAlpha=e,Y=e)}function Me(e){K!==e&&(e===p.NormalBlending?j.globalCompositeOperation="source-over":e===p.AdditiveBlending?j.globalCompositeOperation="lighter":e===p.SubtractiveBlending&&(j.globalCompositeOperation="darker"),K=e)}function Se(e){Q!==e&&(j.lineWidth=e,Q=e)}function Te(e){$!==e&&(j.lineCap=e,$=e)}function Ee(e){ee!==e&&(j.lineJoin=e,ee=e)}function Ae(e){Z!==e&&(j.strokeStyle=e,Z=e)}function Ce(e){J!==e&&(j.fillStyle=e,J=e)}(N=document.createElement("canvas")).width=N.height=2,(U=N.getContext("2d")).fillStyle="rgba(0,0,0,1)",U.fillRect(0,0,2,2),B=U.getImageData(0,0,2,2),O=B.data,(V=document.createElement("canvas")).width=V.height=we,(H=V.getContext("2d")).translate(-we/2,-we/2),H.scale(we,we),we--,this.domElement=W,this.devicePixelRatio=void 0!==e.devicePixelRatio?e.devicePixelRatio:void 0!==u.devicePixelRatio?u.devicePixelRatio:1,this.autoClear=!0,this.sortObjects=!0,this.sortElements=!0,this.info={render:{vertices:0,faces:0}},this.supportsVertexTextures=function(){},this.setFaceCulling=function(){},this.setSize=function(e,t){n=e*this.devicePixelRatio,a=t*this.devicePixelRatio,o=Math.floor(n/2),s=Math.floor(a/2),W.width=n,W.height=a,W.style.width=e+"px",W.style.height=t+"px",pe.set(new p.Vector2(-o,-s),new p.Vector2(o,s)),fe.set(new p.Vector2(-o,-s),new p.Vector2(o,s)),Y=1,K=0,Z=null,J=null,Q=null,$=null,ee=null},this.setClearColor=function(e,t){X.copy(e),q=void 0!==t?t:1,fe.set(new p.Vector2(-o,-s),new p.Vector2(o,s))},this.setClearColorHex=function(e,t){X.setHex(e),q=void 0!==t?t:1,fe.set(new p.Vector2(-o,-s),new p.Vector2(o,s))},this.getMaxAnisotropy=function(){return 0},this.clear=function(){j.setTransform(1,0,0,-1,o,s),!1===fe.empty()&&(fe.intersect(pe),fe.expandByScalar(2),q<1&&j.clearRect(0|fe.min.x,0|fe.min.y,fe.max.x-fe.min.x|0,fe.max.y-fe.min.y|0),q>0&&(Me(p.NormalBlending),be(1),Ce("rgba("+Math.floor(255*X.r)+","+Math.floor(255*X.g)+","+Math.floor(255*X.b)+","+q+")"),j.fillRect(0|fe.min.x,0|fe.min.y,fe.max.x-fe.min.x|0,fe.max.y-fe.min.y|0)),fe.makeEmpty())},this.render=function(e,n){if(n instanceof p.Camera!=!1){!0===this.autoClear&&this.clear(),j.setTransform(1,0,0,-1,o,s),G.info.render.vertices=0,G.info.render.faces=0,t=k.projectScene(e,n,this.sortObjects,this.sortElements),i=t.elements,r=t.lights,!0===(ge=r.length>0)&&function(){ve.setRGB(0,0,0),ye.setRGB(0,0,0),xe.setRGB(0,0,0);for(var e=0,t=r.length;e<t;e++){var i=r[e],n=i.color;i instanceof p.AmbientLight?ve.add(n):i instanceof p.DirectionalLight?ye.add(n):i instanceof p.PointLight&&xe.add(n)}}();for(var a=0,u=i.length;a<u;a++){var W=i[a],X=W.material;if(void 0!==X&&!1!==X.visible){if(me.makeEmpty(),W instanceof p.RenderableParticle)(l=W).x*=o,l.y*=s,Y(l,W,X,e);else if(W instanceof p.RenderableLine)l=W.v1,h=W.v2,l.positionScreen.x*=o,l.positionScreen.y*=s,h.positionScreen.x*=o,h.positionScreen.y*=s,me.setFromPoints([l.positionScreen,h.positionScreen]),!0===pe.isIntersectionBox(me)&&K(l,h,W,X,e);else if(W instanceof p.RenderableFace3){if(l=W.v1,h=W.v2,c=W.v3,l.positionScreen.z<-1||l.positionScreen.z>1)continue;if(h.positionScreen.z<-1||h.positionScreen.z>1)continue;if(c.positionScreen.z<-1||c.positionScreen.z>1)continue;l.positionScreen.x*=o,l.positionScreen.y*=s,h.positionScreen.x*=o,h.positionScreen.y*=s,c.positionScreen.x*=o,c.positionScreen.y*=s,!0===X.overdraw&&(Fe(l.positionScreen,h.positionScreen),Fe(h.positionScreen,c.positionScreen),Fe(c.positionScreen,l.positionScreen)),me.setFromPoints([l.positionScreen,h.positionScreen,c.positionScreen]),Z(l,h,c,0,1,2,W,X,e)}else if(W instanceof p.RenderableFace4){if(l=W.v1,h=W.v2,c=W.v3,d=W.v4,l.positionScreen.z<-1||l.positionScreen.z>1)continue;if(h.positionScreen.z<-1||h.positionScreen.z>1)continue;if(c.positionScreen.z<-1||c.positionScreen.z>1)continue;if(d.positionScreen.z<-1||d.positionScreen.z>1)continue;l.positionScreen.x*=o,l.positionScreen.y*=s,h.positionScreen.x*=o,h.positionScreen.y*=s,c.positionScreen.x*=o,c.positionScreen.y*=s,d.positionScreen.x*=o,d.positionScreen.y*=s,te.positionScreen.copy(h.positionScreen),ie.positionScreen.copy(d.positionScreen),!0===X.overdraw&&(Fe(l.positionScreen,h.positionScreen),Fe(h.positionScreen,d.positionScreen),Fe(d.positionScreen,l.positionScreen),Fe(c.positionScreen,te.positionScreen),Fe(c.positionScreen,ie.positionScreen)),me.setFromPoints([l.positionScreen,h.positionScreen,c.positionScreen,d.positionScreen]),J(l,h,c,d,te,ie,W,X,e)}fe.union(me)}}j.setTransform(1,0,0,1,0,0)}else console.error("THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera.");function q(e,t,i){for(var n=0,a=r.length;n<a;n++){var o=r[n];if(ce.copy(o.color),o instanceof p.DirectionalLight){var s=o.matrixWorld.getPosition().normalize();if((l=t.dot(s))<=0)continue;l*=o.intensity,i.add(ce.multiplyScalar(l))}else if(o instanceof p.PointLight){var l;s=o.matrixWorld.getPosition();if((l=t.dot(_e.subVectors(s,e).normalize()))<=0)continue;if(0==(l*=0==o.distance?1:1-Math.min(e.distanceTo(s)/o.distance,1)))continue;l*=o.intensity,i.add(ce.multiplyScalar(l))}}}function Y(e,t,i,r){var n,a,l,h,c,u,d;if(be(i.opacity),Me(i.blending),i instanceof p.ParticleBasicMaterial)if(null===i.map){if(l=t.object.scale.x,h=t.object.scale.y,l*=t.scale.x*o,h*=t.scale.y*s,me.min.set(e.x-l,e.y-h),me.max.set(e.x+l,e.y+h),!1===pe.isIntersectionBox(me))return;Ce(i.color.getStyle()),j.save(),j.translate(e.x,e.y),j.rotate(-t.rotation),j.scale(l,h),j.fillRect(-1,-1,2,2),j.restore()}else{if(u=(c=i.map.image).width>>1,d=c.height>>1,n=(l=t.scale.x*o)*u,a=(h=t.scale.y*s)*d,me.min.set(e.x-n,e.y-a),me.max.set(e.x+n,e.y+a),!1===pe.isIntersectionBox(me))return;j.save(),j.translate(e.x,e.y),j.rotate(-t.rotation),j.scale(l,-h),j.translate(-u,-d),j.drawImage(c,0,0),j.restore()}else if(i instanceof p.ParticleCanvasMaterial){if(n=t.scale.x*o,a=t.scale.y*s,me.min.set(e.x-n,e.y-a),me.max.set(e.x+n,e.y+a),!1===pe.isIntersectionBox(me))return;Ae(i.color.getStyle()),Ce(i.color.getStyle()),j.save(),j.translate(e.x,e.y),j.rotate(-t.rotation),j.scale(n,a),i.program(j),j.restore()}}function K(e,t,i,r,n){be(r.opacity),Me(r.blending),j.beginPath(),j.moveTo(e.positionScreen.x,e.positionScreen.y),j.lineTo(t.positionScreen.x,t.positionScreen.y),r instanceof p.LineBasicMaterial&&(Se(r.linewidth),Te(r.linecap),Ee(r.linejoin),Ae(r.color.getStyle()),j.stroke(),me.expandByScalar(2*r.linewidth))}function Z(e,t,i,r,a,o,s,l,h){if(G.info.render.vertices+=3,G.info.render.faces++,be(l.opacity),Me(l.blending),f=e.positionScreen.x,m=e.positionScreen.y,g=t.positionScreen.x,v=t.positionScreen.y,y=i.positionScreen.x,x=i.positionScreen.y,Q(f,m,g,v,y,x),(l instanceof p.MeshLambertMaterial||l instanceof p.MeshPhongMaterial)&&null===l.map&&null===l.map)le.copy(l.color),he.copy(l.emissive),l.vertexColors===p.FaceColors&&le.multiply(s.color),!0===ge?!1===l.wireframe&&l.shading==p.SmoothShading&&3==s.vertexNormalsLength?(ne.copy(ve),ae.copy(ve),oe.copy(ve),q(s.v1.positionWorld,s.vertexNormalsModel[0],ne),q(s.v2.positionWorld,s.vertexNormalsModel[1],ae),q(s.v3.positionWorld,s.vertexNormalsModel[2],oe),ne.multiply(le).add(he),ae.multiply(le).add(he),oe.multiply(le).add(he),se.addColors(ae,oe).multiplyScalar(.5),C=Pe(ne,ae,oe,se),Re(f,m,g,v,y,x,0,0,1,0,0,1,C)):(re.copy(ve),q(s.centroidModel,s.normalModel,re),re.multiply(le).add(he),!0===l.wireframe?ee(re,l.wireframeLinewidth,l.wireframeLinecap,l.wireframeLinejoin):we(re)):!0===l.wireframe?ee(l.color,l.wireframeLinewidth,l.wireframeLinecap,l.wireframeLinejoin):we(l.color);else if(l instanceof p.MeshBasicMaterial||l instanceof p.MeshLambertMaterial||l instanceof p.MeshPhongMaterial)null!==l.map?l.map.mapping instanceof p.UVMapping&&(L=s.uvs[0],Le(f,m,g,v,y,x,L[r].x,L[r].y,L[a].x,L[a].y,L[o].x,L[o].y,l.map)):null!==l.envMap?l.envMap.mapping instanceof p.SphericalReflectionMapping&&(_e.copy(s.vertexNormalsModelView[r]),R=.5*_e.x+.5,P=.5*_e.y+.5,_e.copy(s.vertexNormalsModelView[a]),D=.5*_e.x+.5,F=.5*_e.y+.5,_e.copy(s.vertexNormalsModelView[o]),z=.5*_e.x+.5,I=.5*_e.y+.5,Le(f,m,g,v,y,x,R,P,D,F,z,I,l.envMap)):(re.copy(l.color),l.vertexColors===p.FaceColors&&re.multiply(s.color),!0===l.wireframe?ee(re,l.wireframeLinewidth,l.wireframeLinecap,l.wireframeLinejoin):we(re));else if(l instanceof p.MeshDepthMaterial){var c;E=n.near,A=n.far,c=1-De(e.positionScreen.z*e.positionScreen.w,E,A),ne.setRGB(c,c,c),c=1-De(t.positionScreen.z*t.positionScreen.w,E,A),ae.setRGB(c,c,c),c=1-De(i.positionScreen.z*i.positionScreen.w,E,A),oe.setRGB(c,c,c),se.addColors(ae,oe).multiplyScalar(.5),C=Pe(ne,ae,oe,se),Re(f,m,g,v,y,x,0,0,1,0,0,1,C)}else if(l instanceof p.MeshNormalMaterial){var u;l.shading==p.FlatShading?(u=s.normalModelView,re.setRGB(u.x,u.y,u.z).multiplyScalar(.5).addScalar(.5),!0===l.wireframe?ee(re,l.wireframeLinewidth,l.wireframeLinecap,l.wireframeLinejoin):we(re)):l.shading==p.SmoothShading&&(u=s.vertexNormalsModelView[r],ne.setRGB(u.x,u.y,u.z).multiplyScalar(.5).addScalar(.5),u=s.vertexNormalsModelView[a],ae.setRGB(u.x,u.y,u.z).multiplyScalar(.5).addScalar(.5),u=s.vertexNormalsModelView[o],oe.setRGB(u.x,u.y,u.z).multiplyScalar(.5).addScalar(.5),se.addColors(ae,oe).multiplyScalar(.5),C=Pe(ne,ae,oe,se),Re(f,m,g,v,y,x,0,0,1,0,0,1,C))}}function J(e,t,i,r,a,o,s,l,h){if(G.info.render.vertices+=4,G.info.render.faces++,be(l.opacity),Me(l.blending),void 0!==l.map&&null!==l.map||void 0!==l.envMap&&null!==l.envMap)return Z(e,t,r,0,1,3,s,l),void Z(a,i,o,1,2,3,s,l);if(f=e.positionScreen.x,m=e.positionScreen.y,g=t.positionScreen.x,v=t.positionScreen.y,y=i.positionScreen.x,x=i.positionScreen.y,_=r.positionScreen.x,w=r.positionScreen.y,b=a.positionScreen.x,M=a.positionScreen.y,S=o.positionScreen.x,T=o.positionScreen.y,l instanceof p.MeshLambertMaterial||l instanceof p.MeshPhongMaterial)le.copy(l.color),he.copy(l.emissive),l.vertexColors===p.FaceColors&&le.multiply(s.color),!0===ge?!1===l.wireframe&&l.shading==p.SmoothShading&&4==s.vertexNormalsLength?(ne.copy(ve),ae.copy(ve),oe.copy(ve),se.copy(ve),q(s.v1.positionWorld,s.vertexNormalsModel[0],ne),q(s.v2.positionWorld,s.vertexNormalsModel[1],ae),q(s.v4.positionWorld,s.vertexNormalsModel[3],oe),q(s.v3.positionWorld,s.vertexNormalsModel[2],se),ne.multiply(le).add(he),ae.multiply(le).add(he),oe.multiply(le).add(he),se.multiply(le).add(he),C=Pe(ne,ae,oe,se),Q(f,m,g,v,_,w),Re(f,m,g,v,_,w,0,0,1,0,0,1,C),Q(b,M,y,x,S,T),Re(b,M,y,x,S,T,1,0,1,1,0,1,C)):(re.copy(ve),q(s.centroidModel,s.normalModel,re),re.multiply(le).add(he),$(f,m,g,v,y,x,_,w),!0===l.wireframe?ee(re,l.wireframeLinewidth,l.wireframeLinecap,l.wireframeLinejoin):we(re)):(re.addColors(le,he),$(f,m,g,v,y,x,_,w),!0===l.wireframe?ee(re,l.wireframeLinewidth,l.wireframeLinecap,l.wireframeLinejoin):we(re));else if(l instanceof p.MeshBasicMaterial)re.copy(l.color),l.vertexColors===p.FaceColors&&re.multiply(s.color),$(f,m,g,v,y,x,_,w),!0===l.wireframe?ee(re,l.wireframeLinewidth,l.wireframeLinecap,l.wireframeLinejoin):we(re);else if(l instanceof p.MeshNormalMaterial){var c;l.shading==p.FlatShading?(c=s.normalModelView,re.setRGB(c.x,c.y,c.z).multiplyScalar(.5).addScalar(.5),$(f,m,g,v,y,x,_,w),!0===l.wireframe?ee(re,l.wireframeLinewidth,l.wireframeLinecap,l.wireframeLinejoin):we(re)):l.shading==p.SmoothShading&&(c=s.vertexNormalsModelView[0],ne.setRGB(c.x,c.y,c.z).multiplyScalar(.5).addScalar(.5),c=s.vertexNormalsModelView[1],ae.setRGB(c.x,c.y,c.z).multiplyScalar(.5).addScalar(.5),c=s.vertexNormalsModelView[3],oe.setRGB(c.x,c.y,c.z).multiplyScalar(.5).addScalar(.5),c=s.vertexNormalsModelView[2],se.setRGB(c.x,c.y,c.z).multiplyScalar(.5).addScalar(.5),C=Pe(ne,ae,oe,se),Q(f,m,g,v,_,w),Re(f,m,g,v,_,w,0,0,1,0,0,1,C),Q(b,M,y,x,S,T),Re(b,M,y,x,S,T,1,0,1,1,0,1,C))}else l instanceof p.MeshDepthMaterial&&(E=n.near,A=n.far,ne.r=ne.g=ne.b=1-De(e.positionScreen.z*e.positionScreen.w,E,A),ae.r=ae.g=ae.b=1-De(t.positionScreen.z*t.positionScreen.w,E,A),oe.r=oe.g=oe.b=1-De(r.positionScreen.z*r.positionScreen.w,E,A),se.r=se.g=se.b=1-De(i.positionScreen.z*i.positionScreen.w,E,A),C=Pe(ne,ae,oe,se),Q(f,m,g,v,_,w),Re(f,m,g,v,_,w,0,0,1,0,0,1,C),Q(b,M,y,x,S,T),Re(b,M,y,x,S,T,1,0,1,1,0,1,C))}function Q(e,t,i,r,n,a){j.beginPath(),j.moveTo(e,t),j.lineTo(i,r),j.lineTo(n,a),j.closePath()}function $(e,t,i,r,n,a,o,s){j.beginPath(),j.moveTo(e,t),j.lineTo(i,r),j.lineTo(n,a),j.lineTo(o,s),j.closePath()}function ee(e,t,i,r){Se(t),Te(i),Ee(r),Ae(e.getStyle()),j.stroke(),me.expandByScalar(2*t)}function we(e){Ce(e.getStyle()),j.fill()}function Le(e,t,i,r,n,a,o,s,l,h,c,u,d){if(!(d instanceof p.DataTexture||void 0===d.image||0==d.image.width)){if(!0===d.needsUpdate){var f=d.wrapS==p.RepeatWrapping,m=d.wrapT==p.RepeatWrapping;ue[d.id]=j.createPattern(d.image,!0===f&&!0===m?"repeat":!0===f&&!1===m?"repeat-x":!1===f&&!0===m?"repeat-y":"no-repeat"),d.needsUpdate=!1}void 0===ue[d.id]?Ce("rgba(0,0,0,1)"):Ce(ue[d.id]);var g,v,y,x,_,w,b,M,S=d.offset.x/d.repeat.x,T=d.offset.y/d.repeat.y,E=d.image.width*d.repeat.x,A=d.image.height*d.repeat.y;if(l=(l+S)*E,h=(1-h+T)*A,c=(c+S)*E,u=(1-u+T)*A,i-=e,r-=t,n-=e,a-=t,0===(b=(l-=o=(o+S)*E)*(u-=s=(1-s+T)*A)-(c-=o)*(h-=s))){if(void 0===de[d.id]){var C=document.createElement("canvas");C.width=d.image.width,C.height=d.image.height;var L=C.getContext("2d");L.drawImage(d.image,0,0),de[d.id]=L.getImageData(0,0,d.image.width,d.image.height).data}var R=de[d.id],P=4*(Math.floor(o)+Math.floor(s)*d.image.width);return re.setRGB(R[P]/255,R[P+1]/255,R[P+2]/255),void we(re)}_=e-(g=(u*i-h*n)*(M=1/b))*o-(y=(l*n-c*i)*M)*s,w=t-(v=(u*r-h*a)*M)*o-(x=(l*a-c*r)*M)*s,j.save(),j.transform(g,v,y,x,_,w),j.fill(),j.restore()}}function Re(e,t,i,r,n,a,o,s,l,h,c,u,d){var p,f,m,g,v,y,x,_=d.width-1,w=d.height-1;l*=_,h*=w,c*=_,u*=w,v=e-(p=((u-=s*=w)*(i-=e)-(h-=s)*(n-=e))*(x=1/((l-=o*=_)*u-(c-=o)*h)))*o-(m=(l*n-c*i)*x)*s,y=t-(f=(u*(r-=t)-h*(a-=t))*x)*o-(g=(l*a-c*r)*x)*s,j.save(),j.transform(p,f,m,g,v,y),j.clip(),j.drawImage(d,0,0),j.restore()}function Pe(e,t,i,r){return O[0]=255*e.r|0,O[1]=255*e.g|0,O[2]=255*e.b|0,O[4]=255*t.r|0,O[5]=255*t.g|0,O[6]=255*t.b|0,O[8]=255*i.r|0,O[9]=255*i.g|0,O[10]=255*i.b|0,O[12]=255*r.r|0,O[13]=255*r.g|0,O[14]=255*r.b|0,U.putImageData(B,0,0),H.drawImage(N,0,0),V}function De(e,t,i){var r=(e-t)/(i-t);return r*r*(3-2*r)}function Fe(e,t){var i,r=t.x-e.x,n=t.y-e.y,a=r*r+n*n;0!==a&&(r*=i=1/Math.sqrt(a),n*=i,t.x+=r,t.y+=n,e.x-=r,e.y-=n)}}},p.ShaderChunk={fog_pars_fragment:["#ifdef USE_FOG","uniform vec3 fogColor;","#ifdef FOG_EXP2","uniform float fogDensity;","#else","uniform float fogNear;","uniform float fogFar;","#endif","#endif"].join("\n"),fog_fragment:["#ifdef USE_FOG","float depth = gl_FragCoord.z / gl_FragCoord.w;","#ifdef FOG_EXP2","const float LOG2 = 1.442695;","float fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );","fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );","#else","float fogFactor = smoothstep( fogNear, fogFar, depth );","#endif","gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );","#endif"].join("\n"),envmap_pars_fragment:["#ifdef USE_ENVMAP","uniform float reflectivity;","uniform samplerCube envMap;","uniform float flipEnvMap;","uniform int combine;","#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )","uniform bool useRefract;","uniform float refractionRatio;","#else","varying vec3 vReflect;","#endif","#endif"].join("\n"),envmap_fragment:["#ifdef USE_ENVMAP","vec3 reflectVec;","#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )","vec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );","if ( useRefract ) {","reflectVec = refract( cameraToVertex, normal, refractionRatio );","} else { ","reflectVec = reflect( cameraToVertex, normal );","}","#else","reflectVec = vReflect;","#endif","#ifdef DOUBLE_SIDED","float flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );","vec4 cubeColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );","#else","vec4 cubeColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );","#endif","#ifdef GAMMA_INPUT","cubeColor.xyz *= cubeColor.xyz;","#endif","if ( combine == 1 ) {","gl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularStrength * reflectivity );","} else if ( combine == 2 ) {","gl_FragColor.xyz += cubeColor.xyz * specularStrength * reflectivity;","} else {","gl_FragColor.xyz = mix( gl_FragColor.xyz, gl_FragColor.xyz * cubeColor.xyz, specularStrength * reflectivity );","}","#endif"].join("\n"),envmap_pars_vertex:["#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )","varying vec3 vReflect;","uniform float refractionRatio;","uniform bool useRefract;","#endif"].join("\n"),worldpos_vertex:["#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )","#ifdef USE_SKINNING","vec4 worldPosition = modelMatrix * skinned;","#endif","#if defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )","vec4 worldPosition = modelMatrix * vec4( morphed, 1.0 );","#endif","#if ! defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )","vec4 worldPosition = modelMatrix * vec4( position, 1.0 );","#endif","#endif"].join("\n"),envmap_vertex:["#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )","vec3 worldNormal = mat3( modelMatrix[ 0 ].xyz, modelMatrix[ 1 ].xyz, modelMatrix[ 2 ].xyz ) * objectNormal;","worldNormal = normalize( worldNormal );","vec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );","if ( useRefract ) {","vReflect = refract( cameraToVertex, worldNormal, refractionRatio );","} else {","vReflect = reflect( cameraToVertex, worldNormal );","}","#endif"].join("\n"),map_particle_pars_fragment:["#ifdef USE_MAP","uniform sampler2D map;","#endif"].join("\n"),map_particle_fragment:["#ifdef USE_MAP","gl_FragColor = gl_FragColor * texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) );","#endif"].join("\n"),map_pars_vertex:["#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )","varying vec2 vUv;","uniform vec4 offsetRepeat;","#endif"].join("\n"),map_pars_fragment:["#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )","varying vec2 vUv;","#endif","#ifdef USE_MAP","uniform sampler2D map;","#endif"].join("\n"),map_vertex:["#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )","vUv = uv * offsetRepeat.zw + offsetRepeat.xy;","#endif"].join("\n"),map_fragment:["#ifdef USE_MAP","vec4 texelColor = texture2D( map, vUv );","#ifdef GAMMA_INPUT","texelColor.xyz *= texelColor.xyz;","#endif","gl_FragColor = gl_FragColor * texelColor;","#endif"].join("\n"),lightmap_pars_fragment:["#ifdef USE_LIGHTMAP","varying vec2 vUv2;","uniform sampler2D lightMap;","#endif"].join("\n"),lightmap_pars_vertex:["#ifdef USE_LIGHTMAP","varying vec2 vUv2;","#endif"].join("\n"),lightmap_fragment:["#ifdef USE_LIGHTMAP","gl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );","#endif"].join("\n"),lightmap_vertex:["#ifdef USE_LIGHTMAP","vUv2 = uv2;","#endif"].join("\n"),bumpmap_pars_fragment:["#ifdef USE_BUMPMAP","uniform sampler2D bumpMap;","uniform float bumpScale;","vec2 dHdxy_fwd() {","vec2 dSTdx = dFdx( vUv );","vec2 dSTdy = dFdy( vUv );","float Hll = bumpScale * texture2D( bumpMap, vUv ).x;","float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;","float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;","return vec2( dBx, dBy );","}","vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {","vec3 vSigmaX = dFdx( surf_pos );","vec3 vSigmaY = dFdy( surf_pos );","vec3 vN = surf_norm;","vec3 R1 = cross( vSigmaY, vN );","vec3 R2 = cross( vN, vSigmaX );","float fDet = dot( vSigmaX, R1 );","vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );","return normalize( abs( fDet ) * surf_norm - vGrad );","}","#endif"].join("\n"),normalmap_pars_fragment:["#ifdef USE_NORMALMAP","uniform sampler2D normalMap;","uniform vec2 normalScale;","vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {","vec3 q0 = dFdx( eye_pos.xyz );","vec3 q1 = dFdy( eye_pos.xyz );","vec2 st0 = dFdx( vUv.st );","vec2 st1 = dFdy( vUv.st );","vec3 S = normalize(  q0 * st1.t - q1 * st0.t );","vec3 T = normalize( -q0 * st1.s + q1 * st0.s );","vec3 N = normalize( surf_norm );","vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;","mapN.xy = normalScale * mapN.xy;","mat3 tsn = mat3( S, T, N );","return normalize( tsn * mapN );","}","#endif"].join("\n"),specularmap_pars_fragment:["#ifdef USE_SPECULARMAP","uniform sampler2D specularMap;","#endif"].join("\n"),specularmap_fragment:["float specularStrength;","#ifdef USE_SPECULARMAP","vec4 texelSpecular = texture2D( specularMap, vUv );","specularStrength = texelSpecular.r;","#else","specularStrength = 1.0;","#endif"].join("\n"),lights_lambert_pars_vertex:["uniform vec3 ambient;","uniform vec3 diffuse;","uniform vec3 emissive;","uniform vec3 ambientLightColor;","#if MAX_DIR_LIGHTS > 0","uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];","uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];","#endif","#if MAX_HEMI_LIGHTS > 0","uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];","#endif","#if MAX_POINT_LIGHTS > 0","uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];","uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];","uniform float pointLightDistance[ MAX_POINT_LIGHTS ];","#endif","#if MAX_SPOT_LIGHTS > 0","uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];","uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];","uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];","uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];","#endif","#ifdef WRAP_AROUND","uniform vec3 wrapRGB;","#endif"].join("\n"),lights_lambert_vertex:["vLightFront = vec3( 0.0 );","#ifdef DOUBLE_SIDED","vLightBack = vec3( 0.0 );","#endif","transformedNormal = normalize( transformedNormal );","#if MAX_DIR_LIGHTS > 0","for( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {","vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );","vec3 dirVector = normalize( lDirection.xyz );","float dotProduct = dot( transformedNormal, dirVector );","vec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );","#ifdef DOUBLE_SIDED","vec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );","#ifdef WRAP_AROUND","vec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );","#endif","#endif","#ifdef WRAP_AROUND","vec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );","directionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );","#ifdef DOUBLE_SIDED","directionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );","#endif","#endif","vLightFront += directionalLightColor[ i ] * directionalLightWeighting;","#ifdef DOUBLE_SIDED","vLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;","#endif","}","#endif","#if MAX_POINT_LIGHTS > 0","for( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz - mvPosition.xyz;","float lDistance = 1.0;","if ( pointLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );","lVector = normalize( lVector );","float dotProduct = dot( transformedNormal, lVector );","vec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );","#ifdef DOUBLE_SIDED","vec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );","#ifdef WRAP_AROUND","vec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );","#endif","#endif","#ifdef WRAP_AROUND","vec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );","pointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );","#ifdef DOUBLE_SIDED","pointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );","#endif","#endif","vLightFront += pointLightColor[ i ] * pointLightWeighting * lDistance;","#ifdef DOUBLE_SIDED","vLightBack += pointLightColor[ i ] * pointLightWeightingBack * lDistance;","#endif","}","#endif","#if MAX_SPOT_LIGHTS > 0","for( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz - mvPosition.xyz;","float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - worldPosition.xyz ) );","if ( spotEffect > spotLightAngleCos[ i ] ) {","spotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );","float lDistance = 1.0;","if ( spotLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );","lVector = normalize( lVector );","float dotProduct = dot( transformedNormal, lVector );","vec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );","#ifdef DOUBLE_SIDED","vec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );","#ifdef WRAP_AROUND","vec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );","#endif","#endif","#ifdef WRAP_AROUND","vec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );","spotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );","#ifdef DOUBLE_SIDED","spotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );","#endif","#endif","vLightFront += spotLightColor[ i ] * spotLightWeighting * lDistance * spotEffect;","#ifdef DOUBLE_SIDED","vLightBack += spotLightColor[ i ] * spotLightWeightingBack * lDistance * spotEffect;","#endif","}","}","#endif","#if MAX_HEMI_LIGHTS > 0","for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {","vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );","vec3 lVector = normalize( lDirection.xyz );","float dotProduct = dot( transformedNormal, lVector );","float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;","float hemiDiffuseWeightBack = -0.5 * dotProduct + 0.5;","vLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );","#ifdef DOUBLE_SIDED","vLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );","#endif","}","#endif","vLightFront = vLightFront * diffuse + ambient * ambientLightColor + emissive;","#ifdef DOUBLE_SIDED","vLightBack = vLightBack * diffuse + ambient * ambientLightColor + emissive;","#endif"].join("\n"),lights_phong_pars_vertex:["#ifndef PHONG_PER_PIXEL","#if MAX_POINT_LIGHTS > 0","uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];","uniform float pointLightDistance[ MAX_POINT_LIGHTS ];","varying vec4 vPointLight[ MAX_POINT_LIGHTS ];","#endif","#if MAX_SPOT_LIGHTS > 0","uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];","uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];","varying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];","#endif","#endif","#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )","varying vec3 vWorldPosition;","#endif"].join("\n"),lights_phong_vertex:["#ifndef PHONG_PER_PIXEL","#if MAX_POINT_LIGHTS > 0","for( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz - mvPosition.xyz;","float lDistance = 1.0;","if ( pointLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );","vPointLight[ i ] = vec4( lVector, lDistance );","}","#endif","#if MAX_SPOT_LIGHTS > 0","for( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz - mvPosition.xyz;","float lDistance = 1.0;","if ( spotLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );","vSpotLight[ i ] = vec4( lVector, lDistance );","}","#endif","#endif","#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )","vWorldPosition = worldPosition.xyz;","#endif"].join("\n"),lights_phong_pars_fragment:["uniform vec3 ambientLightColor;","#if MAX_DIR_LIGHTS > 0","uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];","uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];","#endif","#if MAX_HEMI_LIGHTS > 0","uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];","#endif","#if MAX_POINT_LIGHTS > 0","uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];","#ifdef PHONG_PER_PIXEL","uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];","uniform float pointLightDistance[ MAX_POINT_LIGHTS ];","#else","varying vec4 vPointLight[ MAX_POINT_LIGHTS ];","#endif","#endif","#if MAX_SPOT_LIGHTS > 0","uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];","uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];","uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];","#ifdef PHONG_PER_PIXEL","uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];","#else","varying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];","#endif","#endif","#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )","varying vec3 vWorldPosition;","#endif","#ifdef WRAP_AROUND","uniform vec3 wrapRGB;","#endif","varying vec3 vViewPosition;","varying vec3 vNormal;"].join("\n"),lights_phong_fragment:["vec3 normal = normalize( vNormal );","vec3 viewPosition = normalize( vViewPosition );","#ifdef DOUBLE_SIDED","normal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );","#endif","#ifdef USE_NORMALMAP","normal = perturbNormal2Arb( -viewPosition, normal );","#elif defined( USE_BUMPMAP )","normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );","#endif","#if MAX_POINT_LIGHTS > 0","vec3 pointDiffuse  = vec3( 0.0 );","vec3 pointSpecular = vec3( 0.0 );","for ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {","#ifdef PHONG_PER_PIXEL","vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz + vViewPosition.xyz;","float lDistance = 1.0;","if ( pointLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );","lVector = normalize( lVector );","#else","vec3 lVector = normalize( vPointLight[ i ].xyz );","float lDistance = vPointLight[ i ].w;","#endif","float dotProduct = dot( normal, lVector );","#ifdef WRAP_AROUND","float pointDiffuseWeightFull = max( dotProduct, 0.0 );","float pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );","vec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );","#else","float pointDiffuseWeight = max( dotProduct, 0.0 );","#endif","pointDiffuse  += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;","vec3 pointHalfVector = normalize( lVector + viewPosition );","float pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );","float pointSpecularWeight = specularStrength * max( pow( pointDotNormalHalf, shininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float specularNormalization = ( shininess + 2.0001 ) / 8.0;","vec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, pointHalfVector ), 5.0 );","pointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance * specularNormalization;","#else","pointSpecular += specular * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance;","#endif","}","#endif","#if MAX_SPOT_LIGHTS > 0","vec3 spotDiffuse  = vec3( 0.0 );","vec3 spotSpecular = vec3( 0.0 );","for ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {","#ifdef PHONG_PER_PIXEL","vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz + vViewPosition.xyz;","float lDistance = 1.0;","if ( spotLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );","lVector = normalize( lVector );","#else","vec3 lVector = normalize( vSpotLight[ i ].xyz );","float lDistance = vSpotLight[ i ].w;","#endif","float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );","if ( spotEffect > spotLightAngleCos[ i ] ) {","spotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );","float dotProduct = dot( normal, lVector );","#ifdef WRAP_AROUND","float spotDiffuseWeightFull = max( dotProduct, 0.0 );","float spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );","vec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );","#else","float spotDiffuseWeight = max( dotProduct, 0.0 );","#endif","spotDiffuse += diffuse * spotLightColor[ i ] * spotDiffuseWeight * lDistance * spotEffect;","vec3 spotHalfVector = normalize( lVector + viewPosition );","float spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );","float spotSpecularWeight = specularStrength * max( pow( spotDotNormalHalf, shininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float specularNormalization = ( shininess + 2.0001 ) / 8.0;","vec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, spotHalfVector ), 5.0 );","spotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * specularNormalization * spotEffect;","#else","spotSpecular += specular * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * spotEffect;","#endif","}","}","#endif","#if MAX_DIR_LIGHTS > 0","vec3 dirDiffuse  = vec3( 0.0 );","vec3 dirSpecular = vec3( 0.0 );","for( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {","vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );","vec3 dirVector = normalize( lDirection.xyz );","float dotProduct = dot( normal, dirVector );","#ifdef WRAP_AROUND","float dirDiffuseWeightFull = max( dotProduct, 0.0 );","float dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );","vec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );","#else","float dirDiffuseWeight = max( dotProduct, 0.0 );","#endif","dirDiffuse  += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;","vec3 dirHalfVector = normalize( dirVector + viewPosition );","float dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );","float dirSpecularWeight = specularStrength * max( pow( dirDotNormalHalf, shininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float specularNormalization = ( shininess + 2.0001 ) / 8.0;","vec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );","dirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;","#else","dirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight;","#endif","}","#endif","#if MAX_HEMI_LIGHTS > 0","vec3 hemiDiffuse  = vec3( 0.0 );","vec3 hemiSpecular = vec3( 0.0 );","for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {","vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );","vec3 lVector = normalize( lDirection.xyz );","float dotProduct = dot( normal, lVector );","float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;","vec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );","hemiDiffuse += diffuse * hemiColor;","vec3 hemiHalfVectorSky = normalize( lVector + viewPosition );","float hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;","float hemiSpecularWeightSky = specularStrength * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );","vec3 lVectorGround = -lVector;","vec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );","float hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;","float hemiSpecularWeightGround = specularStrength * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float dotProductGround = dot( normal, lVectorGround );","float specularNormalization = ( shininess + 2.0001 ) / 8.0;","vec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );","vec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );","hemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );","#else","hemiSpecular += specular * hemiColor * ( hemiSpecularWeightSky + hemiSpecularWeightGround ) * hemiDiffuseWeight;","#endif","}","#endif","vec3 totalDiffuse = vec3( 0.0 );","vec3 totalSpecular = vec3( 0.0 );","#if MAX_DIR_LIGHTS > 0","totalDiffuse += dirDiffuse;","totalSpecular += dirSpecular;","#endif","#if MAX_HEMI_LIGHTS > 0","totalDiffuse += hemiDiffuse;","totalSpecular += hemiSpecular;","#endif","#if MAX_POINT_LIGHTS > 0","totalDiffuse += pointDiffuse;","totalSpecular += pointSpecular;","#endif","#if MAX_SPOT_LIGHTS > 0","totalDiffuse += spotDiffuse;","totalSpecular += spotSpecular;","#endif","#ifdef METAL","gl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient + totalSpecular );","#else","gl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient ) + totalSpecular;","#endif"].join("\n"),color_pars_fragment:["#ifdef USE_COLOR","varying vec3 vColor;","#endif"].join("\n"),color_fragment:["#ifdef USE_COLOR","gl_FragColor = gl_FragColor * vec4( vColor, opacity );","#endif"].join("\n"),color_pars_vertex:["#ifdef USE_COLOR","varying vec3 vColor;","#endif"].join("\n"),color_vertex:["#ifdef USE_COLOR","#ifdef GAMMA_INPUT","vColor = color * color;","#else","vColor = color;","#endif","#endif"].join("\n"),skinning_pars_vertex:["#ifdef USE_SKINNING","#ifdef BONE_TEXTURE","uniform sampler2D boneTexture;","mat4 getBoneMatrix( const in float i ) {","float j = i * 4.0;","float x = mod( j, N_BONE_PIXEL_X );","float y = floor( j / N_BONE_PIXEL_X );","const float dx = 1.0 / N_BONE_PIXEL_X;","const float dy = 1.0 / N_BONE_PIXEL_Y;","y = dy * ( y + 0.5 );","vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );","vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );","vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );","vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );","mat4 bone = mat4( v1, v2, v3, v4 );","return bone;","}","#else","uniform mat4 boneGlobalMatrices[ MAX_BONES ];","mat4 getBoneMatrix( const in float i ) {","mat4 bone = boneGlobalMatrices[ int(i) ];","return bone;","}","#endif","#endif"].join("\n"),skinbase_vertex:["#ifdef USE_SKINNING","mat4 boneMatX = getBoneMatrix( skinIndex.x );","mat4 boneMatY = getBoneMatrix( skinIndex.y );","#endif"].join("\n"),skinning_vertex:["#ifdef USE_SKINNING","#ifdef USE_MORPHTARGETS","vec4 skinVertex = vec4( morphed, 1.0 );","#else","vec4 skinVertex = vec4( position, 1.0 );","#endif","vec4 skinned  = boneMatX * skinVertex * skinWeight.x;","skinned \t  += boneMatY * skinVertex * skinWeight.y;","#endif"].join("\n"),morphtarget_pars_vertex:["#ifdef USE_MORPHTARGETS","#ifndef USE_MORPHNORMALS","uniform float morphTargetInfluences[ 8 ];","#else","uniform float morphTargetInfluences[ 4 ];","#endif","#endif"].join("\n"),morphtarget_vertex:["#ifdef USE_MORPHTARGETS","vec3 morphed = vec3( 0.0 );","morphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];","morphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];","morphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];","morphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];","#ifndef USE_MORPHNORMALS","morphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];","morphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];","morphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];","morphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];","#endif","morphed += position;","#endif"].join("\n"),default_vertex:["vec4 mvPosition;","#ifdef USE_SKINNING","mvPosition = modelViewMatrix * skinned;","#endif","#if !defined( USE_SKINNING ) && defined( USE_MORPHTARGETS )","mvPosition = modelViewMatrix * vec4( morphed, 1.0 );","#endif","#if !defined( USE_SKINNING ) && ! defined( USE_MORPHTARGETS )","mvPosition = modelViewMatrix * vec4( position, 1.0 );","#endif","gl_Position = projectionMatrix * mvPosition;"].join("\n"),morphnormal_vertex:["#ifdef USE_MORPHNORMALS","vec3 morphedNormal = vec3( 0.0 );","morphedNormal +=  ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];","morphedNormal +=  ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];","morphedNormal +=  ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];","morphedNormal +=  ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];","morphedNormal += normal;","#endif"].join("\n"),skinnormal_vertex:["#ifdef USE_SKINNING","mat4 skinMatrix = skinWeight.x * boneMatX;","skinMatrix \t+= skinWeight.y * boneMatY;","#ifdef USE_MORPHNORMALS","vec4 skinnedNormal = skinMatrix * vec4( morphedNormal, 0.0 );","#else","vec4 skinnedNormal = skinMatrix * vec4( normal, 0.0 );","#endif","#endif"].join("\n"),defaultnormal_vertex:["vec3 objectNormal;","#ifdef USE_SKINNING","objectNormal = skinnedNormal.xyz;","#endif","#if !defined( USE_SKINNING ) && defined( USE_MORPHNORMALS )","objectNormal = morphedNormal;","#endif","#if !defined( USE_SKINNING ) && ! defined( USE_MORPHNORMALS )","objectNormal = normal;","#endif","#ifdef FLIP_SIDED","objectNormal = -objectNormal;","#endif","vec3 transformedNormal = normalMatrix * objectNormal;"].join("\n"),shadowmap_pars_fragment:["#ifdef USE_SHADOWMAP","uniform sampler2D shadowMap[ MAX_SHADOWS ];","uniform vec2 shadowMapSize[ MAX_SHADOWS ];","uniform float shadowDarkness[ MAX_SHADOWS ];","uniform float shadowBias[ MAX_SHADOWS ];","varying vec4 vShadowCoord[ MAX_SHADOWS ];","float unpackDepth( const in vec4 rgba_depth ) {","const vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );","float depth = dot( rgba_depth, bit_shift );","return depth;","}","#endif"].join("\n"),shadowmap_fragment:["#ifdef USE_SHADOWMAP","#ifdef SHADOWMAP_DEBUG","vec3 frustumColors[3];","frustumColors[0] = vec3( 1.0, 0.5, 0.0 );","frustumColors[1] = vec3( 0.0, 1.0, 0.8 );","frustumColors[2] = vec3( 0.0, 0.5, 1.0 );","#endif","#ifdef SHADOWMAP_CASCADE","int inFrustumCount = 0;","#endif","float fDepth;","vec3 shadowColor = vec3( 1.0 );","for( int i = 0; i < MAX_SHADOWS; i ++ ) {","vec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;","bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );","bool inFrustum = all( inFrustumVec );","#ifdef SHADOWMAP_CASCADE","inFrustumCount += int( inFrustum );","bvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );","#else","bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );","#endif","bool frustumTest = all( frustumTestVec );","if ( frustumTest ) {","shadowCoord.z += shadowBias[ i ];","#if defined( SHADOWMAP_TYPE_PCF )","float shadow = 0.0;","const float shadowDelta = 1.0 / 9.0;","float xPixelOffset = 1.0 / shadowMapSize[ i ].x;","float yPixelOffset = 1.0 / shadowMapSize[ i ].y;","float dx0 = -1.25 * xPixelOffset;","float dy0 = -1.25 * yPixelOffset;","float dx1 = 1.25 * xPixelOffset;","float dy1 = 1.25 * yPixelOffset;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","shadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );","#elif defined( SHADOWMAP_TYPE_PCF_SOFT )","float shadow = 0.0;","float xPixelOffset = 1.0 / shadowMapSize[ i ].x;","float yPixelOffset = 1.0 / shadowMapSize[ i ].y;","float dx0 = -1.0 * xPixelOffset;","float dy0 = -1.0 * yPixelOffset;","float dx1 = 1.0 * xPixelOffset;","float dy1 = 1.0 * yPixelOffset;","mat3 shadowKernel;","mat3 depthKernel;","depthKernel[0][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );","if ( depthKernel[0][0] < shadowCoord.z ) shadowKernel[0][0] = 0.25;","else shadowKernel[0][0] = 0.0;","depthKernel[0][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );","if ( depthKernel[0][1] < shadowCoord.z ) shadowKernel[0][1] = 0.25;","else shadowKernel[0][1] = 0.0;","depthKernel[0][2] = unpackDepth( texture2D( shadowMap[ i], shadowCoord.xy + vec2( dx0, dy1 ) ) );","if ( depthKernel[0][2] < shadowCoord.z ) shadowKernel[0][2] = 0.25;","else shadowKernel[0][2] = 0.0;","depthKernel[1][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );","if ( depthKernel[1][0] < shadowCoord.z ) shadowKernel[1][0] = 0.25;","else shadowKernel[1][0] = 0.0;","depthKernel[1][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );","if ( depthKernel[1][1] < shadowCoord.z ) shadowKernel[1][1] = 0.25;","else shadowKernel[1][1] = 0.0;","depthKernel[1][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );","if ( depthKernel[1][2] < shadowCoord.z ) shadowKernel[1][2] = 0.25;","else shadowKernel[1][2] = 0.0;","depthKernel[2][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );","if ( depthKernel[2][0] < shadowCoord.z ) shadowKernel[2][0] = 0.25;","else shadowKernel[2][0] = 0.0;","depthKernel[2][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );","if ( depthKernel[2][1] < shadowCoord.z ) shadowKernel[2][1] = 0.25;","else shadowKernel[2][1] = 0.0;","depthKernel[2][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );","if ( depthKernel[2][2] < shadowCoord.z ) shadowKernel[2][2] = 0.25;","else shadowKernel[2][2] = 0.0;","vec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[i].xy );","shadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );","shadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );","vec4 shadowValues;","shadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );","shadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );","shadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );","shadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );","shadow = dot( shadowValues, vec4( 1.0 ) );","shadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );","#else","vec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );","float fDepth = unpackDepth( rgbaDepth );","if ( fDepth < shadowCoord.z )","shadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );","#endif","}","#ifdef SHADOWMAP_DEBUG","#ifdef SHADOWMAP_CASCADE","if ( inFrustum && inFrustumCount == 1 ) gl_FragColor.xyz *= frustumColors[ i ];","#else","if ( inFrustum ) gl_FragColor.xyz *= frustumColors[ i ];","#endif","#endif","}","#ifdef GAMMA_OUTPUT","shadowColor *= shadowColor;","#endif","gl_FragColor.xyz = gl_FragColor.xyz * shadowColor;","#endif"].join("\n"),shadowmap_pars_vertex:["#ifdef USE_SHADOWMAP","varying vec4 vShadowCoord[ MAX_SHADOWS ];","uniform mat4 shadowMatrix[ MAX_SHADOWS ];","#endif"].join("\n"),shadowmap_vertex:["#ifdef USE_SHADOWMAP","for( int i = 0; i < MAX_SHADOWS; i ++ ) {","vShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;","}","#endif"].join("\n"),alphatest_fragment:["#ifdef ALPHATEST","if ( gl_FragColor.a < ALPHATEST ) discard;","#endif"].join("\n"),linear_to_gamma_fragment:["#ifdef GAMMA_OUTPUT","gl_FragColor.xyz = sqrt( gl_FragColor.xyz );","#endif"].join("\n")},p.UniformsUtils={merge:function(e){var t,i,r,n={};for(t=0;t<e.length;t++)for(i in r=this.clone(e[t]))n[i]=r[i];return n},clone:function(e){var t,i,r,n={};for(t in e)for(i in n[t]={},e[t])(r=e[t][i])instanceof p.Color||r instanceof p.Vector2||r instanceof p.Vector3||r instanceof p.Vector4||r instanceof p.Matrix4||r instanceof p.Texture?n[t][i]=r.clone():r instanceof Array?n[t][i]=r.slice():n[t][i]=r;return n}},p.UniformsLib={common:{diffuse:{type:"c",value:new p.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new p.Vector4(0,0,1,1)},lightMap:{type:"t",value:null},specularMap:{type:"t",value:null},envMap:{type:"t",value:null},flipEnvMap:{type:"f",value:-1},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:.98},combine:{type:"i",value:0},morphTargetInfluences:{type:"f",value:0}},bump:{bumpMap:{type:"t",value:null},bumpScale:{type:"f",value:1}},normalmap:{normalMap:{type:"t",value:null},normalScale:{type:"v2",value:new p.Vector2(1,1)}},fog:{fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new p.Color(16777215)}},lights:{ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},hemisphereLightDirection:{type:"fv",value:[]},hemisphereLightSkyColor:{type:"fv",value:[]},hemisphereLightGroundColor:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightDistance:{type:"fv1",value:[]},spotLightColor:{type:"fv",value:[]},spotLightPosition:{type:"fv",value:[]},spotLightDirection:{type:"fv",value:[]},spotLightDistance:{type:"fv1",value:[]},spotLightAngleCos:{type:"fv1",value:[]},spotLightExponent:{type:"fv1",value:[]}},particle:{psColor:{type:"c",value:new p.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",value:1},scale:{type:"f",value:1},map:{type:"t",value:null},fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new p.Color(16777215)}},shadowmap:{shadowMap:{type:"tv",value:[]},shadowMapSize:{type:"v2v",value:[]},shadowBias:{type:"fv1",value:[]},shadowDarkness:{type:"fv1",value:[]},shadowMatrix:{type:"m4v",value:[]}}},p.ShaderLib={basic:{uniforms:p.UniformsUtils.merge([p.UniformsLib.common,p.UniformsLib.fog,p.UniformsLib.shadowmap]),vertexShader:[p.ShaderChunk.map_pars_vertex,p.ShaderChunk.lightmap_pars_vertex,p.ShaderChunk.envmap_pars_vertex,p.ShaderChunk.color_pars_vertex,p.ShaderChunk.morphtarget_pars_vertex,p.ShaderChunk.skinning_pars_vertex,p.ShaderChunk.shadowmap_pars_vertex,"void main() {",p.ShaderChunk.map_vertex,p.ShaderChunk.lightmap_vertex,p.ShaderChunk.color_vertex,p.ShaderChunk.skinbase_vertex,"#ifdef USE_ENVMAP",p.ShaderChunk.morphnormal_vertex,p.ShaderChunk.skinnormal_vertex,p.ShaderChunk.defaultnormal_vertex,"#endif",p.ShaderChunk.morphtarget_vertex,p.ShaderChunk.skinning_vertex,p.ShaderChunk.default_vertex,p.ShaderChunk.worldpos_vertex,p.ShaderChunk.envmap_vertex,p.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform float opacity;",p.ShaderChunk.color_pars_fragment,p.ShaderChunk.map_pars_fragment,p.ShaderChunk.lightmap_pars_fragment,p.ShaderChunk.envmap_pars_fragment,p.ShaderChunk.fog_pars_fragment,p.ShaderChunk.shadowmap_pars_fragment,p.ShaderChunk.specularmap_pars_fragment,"void main() {","gl_FragColor = vec4( diffuse, opacity );",p.ShaderChunk.map_fragment,p.ShaderChunk.alphatest_fragment,p.ShaderChunk.specularmap_fragment,p.ShaderChunk.lightmap_fragment,p.ShaderChunk.color_fragment,p.ShaderChunk.envmap_fragment,p.ShaderChunk.shadowmap_fragment,p.ShaderChunk.linear_to_gamma_fragment,p.ShaderChunk.fog_fragment,"}"].join("\n")},lambert:{uniforms:p.UniformsUtils.merge([p.UniformsLib.common,p.UniformsLib.fog,p.UniformsLib.lights,p.UniformsLib.shadowmap,{ambient:{type:"c",value:new p.Color(16777215)},emissive:{type:"c",value:new p.Color(0)},wrapRGB:{type:"v3",value:new p.Vector3(1,1,1)}}]),vertexShader:["#define LAMBERT","varying vec3 vLightFront;","#ifdef DOUBLE_SIDED","varying vec3 vLightBack;","#endif",p.ShaderChunk.map_pars_vertex,p.ShaderChunk.lightmap_pars_vertex,p.ShaderChunk.envmap_pars_vertex,p.ShaderChunk.lights_lambert_pars_vertex,p.ShaderChunk.color_pars_vertex,p.ShaderChunk.morphtarget_pars_vertex,p.ShaderChunk.skinning_pars_vertex,p.ShaderChunk.shadowmap_pars_vertex,"void main() {",p.ShaderChunk.map_vertex,p.ShaderChunk.lightmap_vertex,p.ShaderChunk.color_vertex,p.ShaderChunk.morphnormal_vertex,p.ShaderChunk.skinbase_vertex,p.ShaderChunk.skinnormal_vertex,p.ShaderChunk.defaultnormal_vertex,p.ShaderChunk.morphtarget_vertex,p.ShaderChunk.skinning_vertex,p.ShaderChunk.default_vertex,p.ShaderChunk.worldpos_vertex,p.ShaderChunk.envmap_vertex,p.ShaderChunk.lights_lambert_vertex,p.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;","varying vec3 vLightFront;","#ifdef DOUBLE_SIDED","varying vec3 vLightBack;","#endif",p.ShaderChunk.color_pars_fragment,p.ShaderChunk.map_pars_fragment,p.ShaderChunk.lightmap_pars_fragment,p.ShaderChunk.envmap_pars_fragment,p.ShaderChunk.fog_pars_fragment,p.ShaderChunk.shadowmap_pars_fragment,p.ShaderChunk.specularmap_pars_fragment,"void main() {","gl_FragColor = vec4( vec3 ( 1.0 ), opacity );",p.ShaderChunk.map_fragment,p.ShaderChunk.alphatest_fragment,p.ShaderChunk.specularmap_fragment,"#ifdef DOUBLE_SIDED","if ( gl_FrontFacing )","gl_FragColor.xyz *= vLightFront;","else","gl_FragColor.xyz *= vLightBack;","#else","gl_FragColor.xyz *= vLightFront;","#endif",p.ShaderChunk.lightmap_fragment,p.ShaderChunk.color_fragment,p.ShaderChunk.envmap_fragment,p.ShaderChunk.shadowmap_fragment,p.ShaderChunk.linear_to_gamma_fragment,p.ShaderChunk.fog_fragment,"}"].join("\n")},phong:{uniforms:p.UniformsUtils.merge([p.UniformsLib.common,p.UniformsLib.bump,p.UniformsLib.normalmap,p.UniformsLib.fog,p.UniformsLib.lights,p.UniformsLib.shadowmap,{ambient:{type:"c",value:new p.Color(16777215)},emissive:{type:"c",value:new p.Color(0)},specular:{type:"c",value:new p.Color(1118481)},shininess:{type:"f",value:30},wrapRGB:{type:"v3",value:new p.Vector3(1,1,1)}}]),vertexShader:["#define PHONG","varying vec3 vViewPosition;","varying vec3 vNormal;",p.ShaderChunk.map_pars_vertex,p.ShaderChunk.lightmap_pars_vertex,p.ShaderChunk.envmap_pars_vertex,p.ShaderChunk.lights_phong_pars_vertex,p.ShaderChunk.color_pars_vertex,p.ShaderChunk.morphtarget_pars_vertex,p.ShaderChunk.skinning_pars_vertex,p.ShaderChunk.shadowmap_pars_vertex,"void main() {",p.ShaderChunk.map_vertex,p.ShaderChunk.lightmap_vertex,p.ShaderChunk.color_vertex,p.ShaderChunk.morphnormal_vertex,p.ShaderChunk.skinbase_vertex,p.ShaderChunk.skinnormal_vertex,p.ShaderChunk.defaultnormal_vertex,"vNormal = normalize( transformedNormal );",p.ShaderChunk.morphtarget_vertex,p.ShaderChunk.skinning_vertex,p.ShaderChunk.default_vertex,"vViewPosition = -mvPosition.xyz;",p.ShaderChunk.worldpos_vertex,p.ShaderChunk.envmap_vertex,p.ShaderChunk.lights_phong_vertex,p.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform float opacity;","uniform vec3 ambient;","uniform vec3 emissive;","uniform vec3 specular;","uniform float shininess;",p.ShaderChunk.color_pars_fragment,p.ShaderChunk.map_pars_fragment,p.ShaderChunk.lightmap_pars_fragment,p.ShaderChunk.envmap_pars_fragment,p.ShaderChunk.fog_pars_fragment,p.ShaderChunk.lights_phong_pars_fragment,p.ShaderChunk.shadowmap_pars_fragment,p.ShaderChunk.bumpmap_pars_fragment,p.ShaderChunk.normalmap_pars_fragment,p.ShaderChunk.specularmap_pars_fragment,"void main() {","gl_FragColor = vec4( vec3 ( 1.0 ), opacity );",p.ShaderChunk.map_fragment,p.ShaderChunk.alphatest_fragment,p.ShaderChunk.specularmap_fragment,p.ShaderChunk.lights_phong_fragment,p.ShaderChunk.lightmap_fragment,p.ShaderChunk.color_fragment,p.ShaderChunk.envmap_fragment,p.ShaderChunk.shadowmap_fragment,p.ShaderChunk.linear_to_gamma_fragment,p.ShaderChunk.fog_fragment,"}"].join("\n")},particle_basic:{uniforms:p.UniformsUtils.merge([p.UniformsLib.particle,p.UniformsLib.shadowmap]),vertexShader:["uniform float size;","uniform float scale;",p.ShaderChunk.color_pars_vertex,p.ShaderChunk.shadowmap_pars_vertex,"void main() {",p.ShaderChunk.color_vertex,"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );","#ifdef USE_SIZEATTENUATION","gl_PointSize = size * ( scale / length( mvPosition.xyz ) );","#else","gl_PointSize = size;","#endif","gl_Position = projectionMatrix * mvPosition;",p.ShaderChunk.worldpos_vertex,p.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 psColor;","uniform float opacity;",p.ShaderChunk.color_pars_fragment,p.ShaderChunk.map_particle_pars_fragment,p.ShaderChunk.fog_pars_fragment,p.ShaderChunk.shadowmap_pars_fragment,"void main() {","gl_FragColor = vec4( psColor, opacity );",p.ShaderChunk.map_particle_fragment,p.ShaderChunk.alphatest_fragment,p.ShaderChunk.color_fragment,p.ShaderChunk.shadowmap_fragment,p.ShaderChunk.fog_fragment,"}"].join("\n")},dashed:{uniforms:p.UniformsUtils.merge([p.UniformsLib.common,p.UniformsLib.fog,{scale:{type:"f",value:1},dashSize:{type:"f",value:1},totalSize:{type:"f",value:2}}]),vertexShader:["uniform float scale;","attribute float lineDistance;","varying float vLineDistance;",p.ShaderChunk.color_pars_vertex,"void main() {",p.ShaderChunk.color_vertex,"vLineDistance = scale * lineDistance;","vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );","gl_Position = projectionMatrix * mvPosition;","}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform float opacity;","uniform float dashSize;","uniform float totalSize;","varying float vLineDistance;",p.ShaderChunk.color_pars_fragment,p.ShaderChunk.fog_pars_fragment,"void main() {","if ( mod( vLineDistance, totalSize ) > dashSize ) {","discard;","}","gl_FragColor = vec4( diffuse, opacity );",p.ShaderChunk.color_fragment,p.ShaderChunk.fog_fragment,"}"].join("\n")},depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2e3},opacity:{type:"f",value:1}},vertexShader:["void main() {","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform float mNear;","uniform float mFar;","uniform float opacity;","void main() {","float depth = gl_FragCoord.z / gl_FragCoord.w;","float color = 1.0 - smoothstep( mNear, mFar, depth );","gl_FragColor = vec4( vec3( color ), opacity );","}"].join("\n")},normal:{uniforms:{opacity:{type:"f",value:1}},vertexShader:["varying vec3 vNormal;","void main() {","vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );","vNormal = normalize( normalMatrix * normal );","gl_Position = projectionMatrix * mvPosition;","}"].join("\n"),fragmentShader:["uniform float opacity;","varying vec3 vNormal;","void main() {","gl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );","}"].join("\n")},normalmap:{uniforms:p.UniformsUtils.merge([p.UniformsLib.fog,p.UniformsLib.lights,p.UniformsLib.shadowmap,{enableAO:{type:"i",value:0},enableDiffuse:{type:"i",value:0},enableSpecular:{type:"i",value:0},enableReflection:{type:"i",value:0},enableDisplacement:{type:"i",value:0},tDisplacement:{type:"t",value:null},tDiffuse:{type:"t",value:null},tCube:{type:"t",value:null},tNormal:{type:"t",value:null},tSpecular:{type:"t",value:null},tAO:{type:"t",value:null},uNormalScale:{type:"v2",value:new p.Vector2(1,1)},uDisplacementBias:{type:"f",value:0},uDisplacementScale:{type:"f",value:1},uDiffuseColor:{type:"c",value:new p.Color(16777215)},uSpecularColor:{type:"c",value:new p.Color(1118481)},uAmbientColor:{type:"c",value:new p.Color(16777215)},uShininess:{type:"f",value:30},uOpacity:{type:"f",value:1},useRefract:{type:"i",value:0},uRefractionRatio:{type:"f",value:.98},uReflectivity:{type:"f",value:.5},uOffset:{type:"v2",value:new p.Vector2(0,0)},uRepeat:{type:"v2",value:new p.Vector2(1,1)},wrapRGB:{type:"v3",value:new p.Vector3(1,1,1)}}]),fragmentShader:["uniform vec3 uAmbientColor;","uniform vec3 uDiffuseColor;","uniform vec3 uSpecularColor;","uniform float uShininess;","uniform float uOpacity;","uniform bool enableDiffuse;","uniform bool enableSpecular;","uniform bool enableAO;","uniform bool enableReflection;","uniform sampler2D tDiffuse;","uniform sampler2D tNormal;","uniform sampler2D tSpecular;","uniform sampler2D tAO;","uniform samplerCube tCube;","uniform vec2 uNormalScale;","uniform bool useRefract;","uniform float uRefractionRatio;","uniform float uReflectivity;","varying vec3 vTangent;","varying vec3 vBinormal;","varying vec3 vNormal;","varying vec2 vUv;","uniform vec3 ambientLightColor;","#if MAX_DIR_LIGHTS > 0","uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];","uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];","#endif","#if MAX_HEMI_LIGHTS > 0","uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];","#endif","#if MAX_POINT_LIGHTS > 0","uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];","uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];","uniform float pointLightDistance[ MAX_POINT_LIGHTS ];","#endif","#if MAX_SPOT_LIGHTS > 0","uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];","uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];","uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];","uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];","#endif","#ifdef WRAP_AROUND","uniform vec3 wrapRGB;","#endif","varying vec3 vWorldPosition;","varying vec3 vViewPosition;",p.ShaderChunk.shadowmap_pars_fragment,p.ShaderChunk.fog_pars_fragment,"void main() {","gl_FragColor = vec4( vec3( 1.0 ), uOpacity );","vec3 specularTex = vec3( 1.0 );","vec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;","normalTex.xy *= uNormalScale;","normalTex = normalize( normalTex );","if( enableDiffuse ) {","#ifdef GAMMA_INPUT","vec4 texelColor = texture2D( tDiffuse, vUv );","texelColor.xyz *= texelColor.xyz;","gl_FragColor = gl_FragColor * texelColor;","#else","gl_FragColor = gl_FragColor * texture2D( tDiffuse, vUv );","#endif","}","if( enableAO ) {","#ifdef GAMMA_INPUT","vec4 aoColor = texture2D( tAO, vUv );","aoColor.xyz *= aoColor.xyz;","gl_FragColor.xyz = gl_FragColor.xyz * aoColor.xyz;","#else","gl_FragColor.xyz = gl_FragColor.xyz * texture2D( tAO, vUv ).xyz;","#endif","}","if( enableSpecular )","specularTex = texture2D( tSpecular, vUv ).xyz;","mat3 tsb = mat3( normalize( vTangent ), normalize( vBinormal ), normalize( vNormal ) );","vec3 finalNormal = tsb * normalTex;","#ifdef FLIP_SIDED","finalNormal = -finalNormal;","#endif","vec3 normal = normalize( finalNormal );","vec3 viewPosition = normalize( vViewPosition );","#if MAX_POINT_LIGHTS > 0","vec3 pointDiffuse = vec3( 0.0 );","vec3 pointSpecular = vec3( 0.0 );","for ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );","vec3 pointVector = lPosition.xyz + vViewPosition.xyz;","float pointDistance = 1.0;","if ( pointLightDistance[ i ] > 0.0 )","pointDistance = 1.0 - min( ( length( pointVector ) / pointLightDistance[ i ] ), 1.0 );","pointVector = normalize( pointVector );","#ifdef WRAP_AROUND","float pointDiffuseWeightFull = max( dot( normal, pointVector ), 0.0 );","float pointDiffuseWeightHalf = max( 0.5 * dot( normal, pointVector ) + 0.5, 0.0 );","vec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );","#else","float pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );","#endif","pointDiffuse += pointDistance * pointLightColor[ i ] * uDiffuseColor * pointDiffuseWeight;","vec3 pointHalfVector = normalize( pointVector + viewPosition );","float pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );","float pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, uShininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float specularNormalization = ( uShininess + 2.0001 ) / 8.0;","vec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( pointVector, pointHalfVector ), 5.0 );","pointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance * specularNormalization;","#else","pointSpecular += pointDistance * pointLightColor[ i ] * uSpecularColor * pointSpecularWeight * pointDiffuseWeight;","#endif","}","#endif","#if MAX_SPOT_LIGHTS > 0","vec3 spotDiffuse = vec3( 0.0 );","vec3 spotSpecular = vec3( 0.0 );","for ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );","vec3 spotVector = lPosition.xyz + vViewPosition.xyz;","float spotDistance = 1.0;","if ( spotLightDistance[ i ] > 0.0 )","spotDistance = 1.0 - min( ( length( spotVector ) / spotLightDistance[ i ] ), 1.0 );","spotVector = normalize( spotVector );","float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );","if ( spotEffect > spotLightAngleCos[ i ] ) {","spotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );","#ifdef WRAP_AROUND","float spotDiffuseWeightFull = max( dot( normal, spotVector ), 0.0 );","float spotDiffuseWeightHalf = max( 0.5 * dot( normal, spotVector ) + 0.5, 0.0 );","vec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );","#else","float spotDiffuseWeight = max( dot( normal, spotVector ), 0.0 );","#endif","spotDiffuse += spotDistance * spotLightColor[ i ] * uDiffuseColor * spotDiffuseWeight * spotEffect;","vec3 spotHalfVector = normalize( spotVector + viewPosition );","float spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );","float spotSpecularWeight = specularTex.r * max( pow( spotDotNormalHalf, uShininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float specularNormalization = ( uShininess + 2.0001 ) / 8.0;","vec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( spotVector, spotHalfVector ), 5.0 );","spotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * spotDistance * specularNormalization * spotEffect;","#else","spotSpecular += spotDistance * spotLightColor[ i ] * uSpecularColor * spotSpecularWeight * spotDiffuseWeight * spotEffect;","#endif","}","}","#endif","#if MAX_DIR_LIGHTS > 0","vec3 dirDiffuse = vec3( 0.0 );","vec3 dirSpecular = vec3( 0.0 );","for( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {","vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );","vec3 dirVector = normalize( lDirection.xyz );","#ifdef WRAP_AROUND","float directionalLightWeightingFull = max( dot( normal, dirVector ), 0.0 );","float directionalLightWeightingHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );","vec3 dirDiffuseWeight = mix( vec3( directionalLightWeightingFull ), vec3( directionalLightWeightingHalf ), wrapRGB );","#else","float dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );","#endif","dirDiffuse += directionalLightColor[ i ] * uDiffuseColor * dirDiffuseWeight;","vec3 dirHalfVector = normalize( dirVector + viewPosition );","float dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );","float dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, uShininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float specularNormalization = ( uShininess + 2.0001 ) / 8.0;","vec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );","dirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;","#else","dirSpecular += directionalLightColor[ i ] * uSpecularColor * dirSpecularWeight * dirDiffuseWeight;","#endif","}","#endif","#if MAX_HEMI_LIGHTS > 0","vec3 hemiDiffuse  = vec3( 0.0 );","vec3 hemiSpecular = vec3( 0.0 );","for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {","vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );","vec3 lVector = normalize( lDirection.xyz );","float dotProduct = dot( normal, lVector );","float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;","vec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );","hemiDiffuse += uDiffuseColor * hemiColor;","vec3 hemiHalfVectorSky = normalize( lVector + viewPosition );","float hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;","float hemiSpecularWeightSky = specularTex.r * max( pow( hemiDotNormalHalfSky, uShininess ), 0.0 );","vec3 lVectorGround = -lVector;","vec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );","float hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;","float hemiSpecularWeightGround = specularTex.r * max( pow( hemiDotNormalHalfGround, uShininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float dotProductGround = dot( normal, lVectorGround );","float specularNormalization = ( uShininess + 2.0001 ) / 8.0;","vec3 schlickSky = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );","vec3 schlickGround = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );","hemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );","#else","hemiSpecular += uSpecularColor * hemiColor * ( hemiSpecularWeightSky + hemiSpecularWeightGround ) * hemiDiffuseWeight;","#endif","}","#endif","vec3 totalDiffuse = vec3( 0.0 );","vec3 totalSpecular = vec3( 0.0 );","#if MAX_DIR_LIGHTS > 0","totalDiffuse += dirDiffuse;","totalSpecular += dirSpecular;","#endif","#if MAX_HEMI_LIGHTS > 0","totalDiffuse += hemiDiffuse;","totalSpecular += hemiSpecular;","#endif","#if MAX_POINT_LIGHTS > 0","totalDiffuse += pointDiffuse;","totalSpecular += pointSpecular;","#endif","#if MAX_SPOT_LIGHTS > 0","totalDiffuse += spotDiffuse;","totalSpecular += spotSpecular;","#endif","#ifdef METAL","gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor + totalSpecular );","#else","gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor ) + totalSpecular;","#endif","if ( enableReflection ) {","vec3 vReflect;","vec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );","if ( useRefract ) {","vReflect = refract( cameraToVertex, normal, uRefractionRatio );","} else {","vReflect = reflect( cameraToVertex, normal );","}","vec4 cubeColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );","#ifdef GAMMA_INPUT","cubeColor.xyz *= cubeColor.xyz;","#endif","gl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularTex.r * uReflectivity );","}",p.ShaderChunk.shadowmap_fragment,p.ShaderChunk.linear_to_gamma_fragment,p.ShaderChunk.fog_fragment,"}"].join("\n"),vertexShader:["attribute vec4 tangent;","uniform vec2 uOffset;","uniform vec2 uRepeat;","uniform bool enableDisplacement;","#ifdef VERTEX_TEXTURES","uniform sampler2D tDisplacement;","uniform float uDisplacementScale;","uniform float uDisplacementBias;","#endif","varying vec3 vTangent;","varying vec3 vBinormal;","varying vec3 vNormal;","varying vec2 vUv;","varying vec3 vWorldPosition;","varying vec3 vViewPosition;",p.ShaderChunk.skinning_pars_vertex,p.ShaderChunk.shadowmap_pars_vertex,"void main() {",p.ShaderChunk.skinbase_vertex,p.ShaderChunk.skinnormal_vertex,"#ifdef USE_SKINNING","vNormal = normalize( normalMatrix * skinnedNormal.xyz );","vec4 skinnedTangent = skinMatrix * vec4( tangent.xyz, 0.0 );","vTangent = normalize( normalMatrix * skinnedTangent.xyz );","#else","vNormal = normalize( normalMatrix * normal );","vTangent = normalize( normalMatrix * tangent.xyz );","#endif","vBinormal = normalize( cross( vNormal, vTangent ) * tangent.w );","vUv = uv * uRepeat + uOffset;","vec3 displacedPosition;","#ifdef VERTEX_TEXTURES","if ( enableDisplacement ) {","vec3 dv = texture2D( tDisplacement, uv ).xyz;","float df = uDisplacementScale * dv.x + uDisplacementBias;","displacedPosition = position + normalize( normal ) * df;","} else {","#ifdef USE_SKINNING","vec4 skinVertex = vec4( position, 1.0 );","vec4 skinned  = boneMatX * skinVertex * skinWeight.x;","skinned \t  += boneMatY * skinVertex * skinWeight.y;","displacedPosition  = skinned.xyz;","#else","displacedPosition = position;","#endif","}","#else","#ifdef USE_SKINNING","vec4 skinVertex = vec4( position, 1.0 );","vec4 skinned  = boneMatX * skinVertex * skinWeight.x;","skinned \t  += boneMatY * skinVertex * skinWeight.y;","displacedPosition  = skinned.xyz;","#else","displacedPosition = position;","#endif","#endif","vec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );","vec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );","gl_Position = projectionMatrix * mvPosition;","vWorldPosition = worldPosition.xyz;","vViewPosition = -mvPosition.xyz;","#ifdef USE_SHADOWMAP","for( int i = 0; i < MAX_SHADOWS; i ++ ) {","vShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;","}","#endif","}"].join("\n")},cube:{uniforms:{tCube:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:["varying vec3 vWorldPosition;","void main() {","vec4 worldPosition = modelMatrix * vec4( position, 1.0 );","vWorldPosition = worldPosition.xyz;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform samplerCube tCube;","uniform float tFlip;","varying vec3 vWorldPosition;","void main() {","gl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );","}"].join("\n")},depthRGBA:{uniforms:{},vertexShader:[p.ShaderChunk.morphtarget_pars_vertex,p.ShaderChunk.skinning_pars_vertex,"void main() {",p.ShaderChunk.skinbase_vertex,p.ShaderChunk.morphtarget_vertex,p.ShaderChunk.skinning_vertex,p.ShaderChunk.default_vertex,"}"].join("\n"),fragmentShader:["vec4 pack_depth( const in float depth ) {","const vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );","const vec4 bit_mask  = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );","vec4 res = fract( depth * bit_shift );","res -= res.xxyz * bit_mask;","return res;","}","void main() {","gl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );","}"].join("\n")}},p.WebGLRenderer=function(e){console.log("THREE.WebGLRenderer",p.REVISION);var t=void 0!==(e=e||{}).canvas?e.canvas:document.createElement("canvas"),i=void 0!==e.precision?e.precision:"highp",r=void 0===e.alpha||e.alpha,n=void 0===e.premultipliedAlpha||e.premultipliedAlpha,a=void 0!==e.antialias&&e.antialias,o=void 0===e.stencil||e.stencil,s=void 0!==e.preserveDrawingBuffer&&e.preserveDrawingBuffer,l=void 0!==e.clearColor?new p.Color(e.clearColor):new p.Color(0),h=void 0!==e.clearAlpha?e.clearAlpha:0;this.domElement=t,this.context=null,this.devicePixelRatio=void 0!==e.devicePixelRatio?e.devicePixelRatio:void 0!==u.devicePixelRatio?u.devicePixelRatio:1,this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.autoUpdateObjects=!0,this.autoUpdateScene=!0,this.gammaInput=!1,this.gammaOutput=!1,this.physicallyBasedShading=!1,this.shadowMapEnabled=!1,this.shadowMapAutoUpdate=!0,this.shadowMapType=p.PCFShadowMap,this.shadowMapCullFace=p.CullFaceFront,this.shadowMapDebug=!1,this.shadowMapCascade=!1,this.maxMorphTargets=8,this.maxMorphNormals=4,this.autoScaleCubemaps=!0,this.renderPluginsPre=[],this.renderPluginsPost=[],this.info={memory:{programs:0,geometries:0,textures:0},render:{calls:0,vertices:0,faces:0,points:0}};var c,d,f,m,g,v=this,y=[],x=0,_=null,w=null,b=-1,M=null,S=null,T=0,E=0,A=-1,C=-1,L=-1,R=-1,P=-1,D=-1,F=-1,z=-1,I=null,N=null,U=null,B=null,O=0,V=0,H=0,G=0,k=0,W=0,j={},X=new p.Frustum,q=new p.Matrix4,Y=new p.Matrix4,K=new p.Vector3,Z=new p.Vector3,J=!0,Q={ambient:[0,0,0],directional:{length:0,colors:new Array,positions:new Array},point:{length:0,colors:new Array,positions:new Array,distances:new Array},spot:{length:0,colors:new Array,positions:new Array,distances:new Array,directions:new Array,anglesCos:new Array,exponents:new Array},hemi:{length:0,skyColors:new Array,groundColors:new Array,positions:new Array}};!function(){try{if(!(c=t.getContext("experimental-webgl",{alpha:r,premultipliedAlpha:n,antialias:a,stencil:o,preserveDrawingBuffer:s})))throw"Error creating WebGL context."}catch(e){console.error(e)}d=c.getExtension("OES_texture_float"),f=c.getExtension("OES_standard_derivatives"),m=c.getExtension("EXT_texture_filter_anisotropic")||c.getExtension("MOZ_EXT_texture_filter_anisotropic")||c.getExtension("WEBKIT_EXT_texture_filter_anisotropic"),g=c.getExtension("WEBGL_compressed_texture_s3tc")||c.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||c.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc"),d||console.log("THREE.WebGLRenderer: Float textures not supported.");f||console.log("THREE.WebGLRenderer: Standard derivatives not supported.");m||console.log("THREE.WebGLRenderer: Anisotropic texture filtering not supported.");g||console.log("THREE.WebGLRenderer: S3TC compressed textures not supported.")}(),c.clearColor(0,0,0,1),c.clearDepth(1),c.clearStencil(0),c.enable(c.DEPTH_TEST),c.depthFunc(c.LEQUAL),c.frontFace(c.CCW),c.cullFace(c.BACK),c.enable(c.CULL_FACE),c.enable(c.BLEND),c.blendEquation(c.FUNC_ADD),c.blendFunc(c.SRC_ALPHA,c.ONE_MINUS_SRC_ALPHA),c.clearColor(l.r,l.g,l.b,h),this.context=c;var $=c.getParameter(c.MAX_TEXTURE_IMAGE_UNITS),ee=c.getParameter(c.MAX_VERTEX_TEXTURE_IMAGE_UNITS),te=(c.getParameter(c.MAX_TEXTURE_SIZE),c.getParameter(c.MAX_CUBE_MAP_TEXTURE_SIZE)),ie=m?c.getParameter(m.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0,re=ee>0,ne=re&&d,ae=(g&&c.getParameter(c.COMPRESSED_TEXTURE_FORMATS),c.getShaderPrecisionFormat(c.VERTEX_SHADER,c.HIGH_FLOAT)),oe=c.getShaderPrecisionFormat(c.VERTEX_SHADER,c.MEDIUM_FLOAT),se=(c.getShaderPrecisionFormat(c.VERTEX_SHADER,c.LOW_FLOAT),c.getShaderPrecisionFormat(c.FRAGMENT_SHADER,c.HIGH_FLOAT)),le=c.getShaderPrecisionFormat(c.FRAGMENT_SHADER,c.MEDIUM_FLOAT),he=(c.getShaderPrecisionFormat(c.FRAGMENT_SHADER,c.LOW_FLOAT),c.getShaderPrecisionFormat(c.VERTEX_SHADER,c.HIGH_INT),c.getShaderPrecisionFormat(c.VERTEX_SHADER,c.MEDIUM_INT),c.getShaderPrecisionFormat(c.VERTEX_SHADER,c.LOW_INT),c.getShaderPrecisionFormat(c.FRAGMENT_SHADER,c.HIGH_INT),c.getShaderPrecisionFormat(c.FRAGMENT_SHADER,c.MEDIUM_INT),c.getShaderPrecisionFormat(c.FRAGMENT_SHADER,c.LOW_INT),ae.precision>0&&se.precision>0),ce=oe.precision>0&&le.precision>0;function ue(e){var t,i;if(e.__webglVertexBuffer=c.createBuffer(),e.__webglNormalBuffer=c.createBuffer(),e.__webglTangentBuffer=c.createBuffer(),e.__webglColorBuffer=c.createBuffer(),e.__webglUVBuffer=c.createBuffer(),e.__webglUV2Buffer=c.createBuffer(),e.__webglSkinIndicesBuffer=c.createBuffer(),e.__webglSkinWeightsBuffer=c.createBuffer(),e.__webglFaceBuffer=c.createBuffer(),e.__webglLineBuffer=c.createBuffer(),e.numMorphTargets)for(e.__webglMorphTargetsBuffers=[],t=0,i=e.numMorphTargets;t<i;t++)e.__webglMorphTargetsBuffers.push(c.createBuffer());if(e.numMorphNormals)for(e.__webglMorphNormalsBuffers=[],t=0,i=e.numMorphNormals;t<i;t++)e.__webglMorphNormalsBuffers.push(c.createBuffer());v.info.memory.geometries++}"highp"!==i||he||(ce?(i="mediump",console.warn("WebGLRenderer: highp not supported, using mediump")):(i="lowp",console.warn("WebGLRenderer: highp and mediump not supported, using lowp"))),"mediump"!==i||ce||(i="lowp",console.warn("WebGLRenderer: mediump not supported, using lowp")),this.getContext=function(){return c},this.supportsVertexTextures=function(){return re},this.supportsFloatTextures=function(){return d},this.supportsStandardDerivatives=function(){return f},this.supportsCompressedTextureS3TC=function(){return g},this.getMaxAnisotropy=function(){return ie},this.getPrecision=function(){return i},this.setSize=function(e,i){t.width=e*this.devicePixelRatio,t.height=i*this.devicePixelRatio,t.style.width=e+"px",t.style.height=i+"px",this.setViewport(0,0,t.width,t.height)},this.setViewport=function(e,i,r,n){O=void 0!==e?e:0,V=void 0!==i?i:0,H=void 0!==r?r:t.width,G=void 0!==n?n:t.height,c.viewport(O,V,H,G)},this.setScissor=function(e,t,i,r){c.scissor(e,t,i,r)},this.enableScissorTest=function(e){e?c.enable(c.SCISSOR_TEST):c.disable(c.SCISSOR_TEST)},this.setClearColorHex=function(e,t){l.setHex(e),h=t,c.clearColor(l.r,l.g,l.b,h)},this.setClearColor=function(e,t){l.copy(e),h=t,c.clearColor(l.r,l.g,l.b,h)},this.getClearColor=function(){return l},this.getClearAlpha=function(){return h},this.clear=function(e,t,i){var r=0;(void 0===e||e)&&(r|=c.COLOR_BUFFER_BIT),(void 0===t||t)&&(r|=c.DEPTH_BUFFER_BIT),(void 0===i||i)&&(r|=c.STENCIL_BUFFER_BIT),c.clear(r)},this.clearTarget=function(e,t,i,r){this.setRenderTarget(e),this.clear(t,i,r)},this.addPostPlugin=function(e){e.init(this),this.renderPluginsPost.push(e)},this.addPrePlugin=function(e){e.init(this),this.renderPluginsPre.push(e)},this.updateShadowMap=function(e,t){_=null,L=-1,F=-1,z=-1,M=-1,b=-1,J=!0,A=-1,C=-1,this.shadowMapPlugin.update(e,t)};var de=function(e){var t=e.target;t.removeEventListener("dispose",de),ge(t),v.info.memory.geometries--},pe=function(e){var t=e.target;t.removeEventListener("dispose",pe),ve(t),v.info.memory.textures--},fe=function(e){var t=e.target;t.removeEventListener("dispose",fe),ye(t),v.info.memory.textures--},me=function(e){var t=e.target;t.removeEventListener("dispose",me),xe(t)},ge=function(e){if(e.__webglInit=void 0,void 0!==e.__webglVertexBuffer&&c.deleteBuffer(e.__webglVertexBuffer),void 0!==e.__webglNormalBuffer&&c.deleteBuffer(e.__webglNormalBuffer),void 0!==e.__webglTangentBuffer&&c.deleteBuffer(e.__webglTangentBuffer),void 0!==e.__webglColorBuffer&&c.deleteBuffer(e.__webglColorBuffer),void 0!==e.__webglUVBuffer&&c.deleteBuffer(e.__webglUVBuffer),void 0!==e.__webglUV2Buffer&&c.deleteBuffer(e.__webglUV2Buffer),void 0!==e.__webglSkinIndicesBuffer&&c.deleteBuffer(e.__webglSkinIndicesBuffer),void 0!==e.__webglSkinWeightsBuffer&&c.deleteBuffer(e.__webglSkinWeightsBuffer),void 0!==e.__webglFaceBuffer&&c.deleteBuffer(e.__webglFaceBuffer),void 0!==e.__webglLineBuffer&&c.deleteBuffer(e.__webglLineBuffer),void 0!==e.__webglLineDistanceBuffer&&c.deleteBuffer(e.__webglLineDistanceBuffer),void 0!==e.geometryGroups)for(var t in e.geometryGroups){var i=e.geometryGroups[t];if(void 0!==i.numMorphTargets)for(var r=0,n=i.numMorphTargets;r<n;r++)c.deleteBuffer(i.__webglMorphTargetsBuffers[r]);if(void 0!==i.numMorphNormals)for(r=0,n=i.numMorphNormals;r<n;r++)c.deleteBuffer(i.__webglMorphNormalsBuffers[r]);_e(i)}_e(e)},ve=function(e){if(e.image&&e.image.__webglTextureCube)c.deleteTexture(e.image.__webglTextureCube);else{if(!e.__webglInit)return;e.__webglInit=!1,c.deleteTexture(e.__webglTexture)}},ye=function(e){if(e&&e.__webglTexture)if(c.deleteTexture(e.__webglTexture),e instanceof p.WebGLRenderTargetCube)for(var t=0;t<6;t++)c.deleteFramebuffer(e.__webglFramebuffer[t]),c.deleteRenderbuffer(e.__webglRenderbuffer[t]);else c.deleteFramebuffer(e.__webglFramebuffer),c.deleteRenderbuffer(e.__webglRenderbuffer)},xe=function(e){var t=e.program;if(void 0!==t){var i,r,n;e.program=void 0;var a=!1;for(i=0,r=y.length;i<r;i++)if((n=y[i]).program===t){n.usedTimes--,0===n.usedTimes&&(a=!0);break}if(!0===a){var o=[];for(i=0,r=y.length;i<r;i++)(n=y[i]).program!==t&&o.push(n);y=o,c.deleteProgram(t),v.info.memory.programs--}}};function _e(e){if(e.__webglCustomAttributesList)for(var t in e.__webglCustomAttributesList)c.deleteBuffer(e.__webglCustomAttributesList[t].buffer)}function we(e,t){var i=e.vertices.length,r=t.material;if(r.attributes)for(var n in void 0===e.__webglCustomAttributesList&&(e.__webglCustomAttributesList=[]),r.attributes){var a=r.attributes[n];if(!a.__webglInitialized||a.createUniqueBuffers){a.__webglInitialized=!0;var o=1;"v2"===a.type?o=2:"v3"===a.type?o=3:"v4"===a.type?o=4:"c"===a.type&&(o=3),a.size=o,a.array=new Float32Array(i*o),a.buffer=c.createBuffer(),a.buffer.belongsToAttribute=n,a.needsUpdate=!0}e.__webglCustomAttributesList.push(a)}}function be(e,t){var i,r,n=t.geometry,a=e.faces3,o=e.faces4,s=3*a.length+4*o.length,l=1*a.length+2*o.length,h=3*a.length+4*o.length,u=Me(t,e),d=Ee(u),p=Se(u),f=Te(u);if(e.__vertexArray=new Float32Array(3*s),p&&(e.__normalArray=new Float32Array(3*s)),n.hasTangents&&(e.__tangentArray=new Float32Array(4*s)),f&&(e.__colorArray=new Float32Array(3*s)),d&&((n.faceUvs.length>0||n.faceVertexUvs.length>0)&&(e.__uvArray=new Float32Array(2*s)),(n.faceUvs.length>1||n.faceVertexUvs.length>1)&&(e.__uv2Array=new Float32Array(2*s))),t.geometry.skinWeights.length&&t.geometry.skinIndices.length&&(e.__skinIndexArray=new Float32Array(4*s),e.__skinWeightArray=new Float32Array(4*s)),e.__faceArray=new Uint16Array(3*l),e.__lineArray=new Uint16Array(2*h),e.numMorphTargets)for(e.__morphTargetsArrays=[],i=0,r=e.numMorphTargets;i<r;i++)e.__morphTargetsArrays.push(new Float32Array(3*s));if(e.numMorphNormals)for(e.__morphNormalsArrays=[],i=0,r=e.numMorphNormals;i<r;i++)e.__morphNormalsArrays.push(new Float32Array(3*s));if(e.__webglFaceCount=3*l,e.__webglLineCount=2*h,u.attributes)for(var m in void 0===e.__webglCustomAttributesList&&(e.__webglCustomAttributesList=[]),u.attributes){var g=u.attributes[m],v={};for(var y in g)v[y]=g[y];if(!v.__webglInitialized||v.createUniqueBuffers){v.__webglInitialized=!0;var x=1;"v2"===v.type?x=2:"v3"===v.type?x=3:"v4"===v.type?x=4:"c"===v.type&&(x=3),v.size=x,v.array=new Float32Array(s*x),v.buffer=c.createBuffer(),v.buffer.belongsToAttribute=m,g.needsUpdate=!0,v.__original=g}e.__webglCustomAttributesList.push(v)}e.__inittedArrays=!0}function Me(e,t){return e.material instanceof p.MeshFaceMaterial?e.material.materials[t.materialIndex]:e.material}function Se(e){return!(e instanceof p.MeshBasicMaterial&&!e.envMap||e instanceof p.MeshDepthMaterial)&&(function(e){return e&&void 0!==e.shading&&e.shading===p.SmoothShading}(e)?p.SmoothShading:p.FlatShading)}function Te(e){return!!e.vertexColors&&e.vertexColors}function Ee(e){return!!(e.map||e.lightMap||e.bumpMap||e.normalMap||e.specularMap||e instanceof p.ShaderMaterial)}function Ae(e){var t,i,r;for(t in e.attributes)r="index"===t?c.ELEMENT_ARRAY_BUFFER:c.ARRAY_BUFFER,(i=e.attributes[t]).buffer=c.createBuffer(),c.bindBuffer(r,i.buffer),c.bufferData(r,i.array,c.STATIC_DRAW)}function Ce(e,t,i,r,n){if(e.__inittedArrays){var a,o,s,l,h,u,d,f,m,g,v,y,x,_,w,b,M,S,T,E,A,C,L,R,P,D,F,z,I,N,U,B,O,V,H,G,k,W,j,X,q,Y,K,Z,J,Q,$,ee=Se(n),te=Te(n),ie=Ee(n),re=ee===p.SmoothShading,ne=0,ae=0,oe=0,se=0,le=0,he=0,ce=0,ue=0,de=0,pe=0,fe=0,me=0,ge=e.__vertexArray,ve=e.__uvArray,ye=e.__uv2Array,xe=e.__normalArray,_e=e.__tangentArray,we=e.__colorArray,be=e.__skinIndexArray,Me=e.__skinWeightArray,Ae=e.__morphTargetsArrays,Ce=e.__morphNormalsArrays,Le=e.__webglCustomAttributesList,Re=e.__faceArray,Pe=e.__lineArray,De=t.geometry,Fe=De.verticesNeedUpdate,ze=De.elementsNeedUpdate,Ie=De.uvsNeedUpdate,Ne=De.normalsNeedUpdate,Ue=De.tangentsNeedUpdate,Be=De.colorsNeedUpdate,Oe=De.morphTargetsNeedUpdate,Ve=De.vertices,He=e.faces3,Ge=e.faces4,ke=De.faces,We=De.faceVertexUvs[0],je=De.faceVertexUvs[1],Xe=(De.colors,De.skinIndices),qe=De.skinWeights,Ye=De.morphTargets,Ke=De.morphNormals;if(Fe){for(a=0,o=He.length;a<o;a++)v=Ve[(s=ke[He[a]]).a],y=Ve[s.b],x=Ve[s.c],ge[ae]=v.x,ge[ae+1]=v.y,ge[ae+2]=v.z,ge[ae+3]=y.x,ge[ae+4]=y.y,ge[ae+5]=y.z,ge[ae+6]=x.x,ge[ae+7]=x.y,ge[ae+8]=x.z,ae+=9;for(a=0,o=Ge.length;a<o;a++)v=Ve[(s=ke[Ge[a]]).a],y=Ve[s.b],x=Ve[s.c],_=Ve[s.d],ge[ae]=v.x,ge[ae+1]=v.y,ge[ae+2]=v.z,ge[ae+3]=y.x,ge[ae+4]=y.y,ge[ae+5]=y.z,ge[ae+6]=x.x,ge[ae+7]=x.y,ge[ae+8]=x.z,ge[ae+9]=_.x,ge[ae+10]=_.y,ge[ae+11]=_.z,ae+=12;c.bindBuffer(c.ARRAY_BUFFER,e.__webglVertexBuffer),c.bufferData(c.ARRAY_BUFFER,ge,i)}if(Oe)for(X=0,q=Ye.length;X<q;X++){for(fe=0,a=0,o=He.length;a<o;a++)s=ke[Z=He[a]],v=Ye[X].vertices[s.a],y=Ye[X].vertices[s.b],x=Ye[X].vertices[s.c],(Y=Ae[X])[fe]=v.x,Y[fe+1]=v.y,Y[fe+2]=v.z,Y[fe+3]=y.x,Y[fe+4]=y.y,Y[fe+5]=y.z,Y[fe+6]=x.x,Y[fe+7]=x.y,Y[fe+8]=x.z,n.morphNormals&&(re?(T=(J=Ke[X].vertexNormals[Z]).a,E=J.b,A=J.c):(E=T=Ke[X].faceNormals[Z],A=T),(K=Ce[X])[fe]=T.x,K[fe+1]=T.y,K[fe+2]=T.z,K[fe+3]=E.x,K[fe+4]=E.y,K[fe+5]=E.z,K[fe+6]=A.x,K[fe+7]=A.y,K[fe+8]=A.z),fe+=9;for(a=0,o=Ge.length;a<o;a++)s=ke[Z=Ge[a]],v=Ye[X].vertices[s.a],y=Ye[X].vertices[s.b],x=Ye[X].vertices[s.c],_=Ye[X].vertices[s.d],(Y=Ae[X])[fe]=v.x,Y[fe+1]=v.y,Y[fe+2]=v.z,Y[fe+3]=y.x,Y[fe+4]=y.y,Y[fe+5]=y.z,Y[fe+6]=x.x,Y[fe+7]=x.y,Y[fe+8]=x.z,Y[fe+9]=_.x,Y[fe+10]=_.y,Y[fe+11]=_.z,n.morphNormals&&(re?(T=(J=Ke[X].vertexNormals[Z]).a,E=J.b,A=J.c,C=J.d):(E=T=Ke[X].faceNormals[Z],A=T,C=T),(K=Ce[X])[fe]=T.x,K[fe+1]=T.y,K[fe+2]=T.z,K[fe+3]=E.x,K[fe+4]=E.y,K[fe+5]=E.z,K[fe+6]=A.x,K[fe+7]=A.y,K[fe+8]=A.z,K[fe+9]=C.x,K[fe+10]=C.y,K[fe+11]=C.z),fe+=12;c.bindBuffer(c.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[X]),c.bufferData(c.ARRAY_BUFFER,Ae[X],i),n.morphNormals&&(c.bindBuffer(c.ARRAY_BUFFER,e.__webglMorphNormalsBuffers[X]),c.bufferData(c.ARRAY_BUFFER,Ce[X],i))}if(qe.length){for(a=0,o=He.length;a<o;a++)F=qe[(s=ke[He[a]]).a],z=qe[s.b],I=qe[s.c],Me[pe]=F.x,Me[pe+1]=F.y,Me[pe+2]=F.z,Me[pe+3]=F.w,Me[pe+4]=z.x,Me[pe+5]=z.y,Me[pe+6]=z.z,Me[pe+7]=z.w,Me[pe+8]=I.x,Me[pe+9]=I.y,Me[pe+10]=I.z,Me[pe+11]=I.w,U=Xe[s.a],B=Xe[s.b],O=Xe[s.c],be[pe]=U.x,be[pe+1]=U.y,be[pe+2]=U.z,be[pe+3]=U.w,be[pe+4]=B.x,be[pe+5]=B.y,be[pe+6]=B.z,be[pe+7]=B.w,be[pe+8]=O.x,be[pe+9]=O.y,be[pe+10]=O.z,be[pe+11]=O.w,pe+=12;for(a=0,o=Ge.length;a<o;a++)F=qe[(s=ke[Ge[a]]).a],z=qe[s.b],I=qe[s.c],N=qe[s.d],Me[pe]=F.x,Me[pe+1]=F.y,Me[pe+2]=F.z,Me[pe+3]=F.w,Me[pe+4]=z.x,Me[pe+5]=z.y,Me[pe+6]=z.z,Me[pe+7]=z.w,Me[pe+8]=I.x,Me[pe+9]=I.y,Me[pe+10]=I.z,Me[pe+11]=I.w,Me[pe+12]=N.x,Me[pe+13]=N.y,Me[pe+14]=N.z,Me[pe+15]=N.w,U=Xe[s.a],B=Xe[s.b],O=Xe[s.c],V=Xe[s.d],be[pe]=U.x,be[pe+1]=U.y,be[pe+2]=U.z,be[pe+3]=U.w,be[pe+4]=B.x,be[pe+5]=B.y,be[pe+6]=B.z,be[pe+7]=B.w,be[pe+8]=O.x,be[pe+9]=O.y,be[pe+10]=O.z,be[pe+11]=O.w,be[pe+12]=V.x,be[pe+13]=V.y,be[pe+14]=V.z,be[pe+15]=V.w,pe+=16;pe>0&&(c.bindBuffer(c.ARRAY_BUFFER,e.__webglSkinIndicesBuffer),c.bufferData(c.ARRAY_BUFFER,be,i),c.bindBuffer(c.ARRAY_BUFFER,e.__webglSkinWeightsBuffer),c.bufferData(c.ARRAY_BUFFER,Me,i))}if(Be&&te){for(a=0,o=He.length;a<o;a++)u=(s=ke[He[a]]).vertexColors,d=s.color,3===u.length&&te===p.VertexColors?(L=u[0],R=u[1],P=u[2]):(L=d,R=d,P=d),we[de]=L.r,we[de+1]=L.g,we[de+2]=L.b,we[de+3]=R.r,we[de+4]=R.g,we[de+5]=R.b,we[de+6]=P.r,we[de+7]=P.g,we[de+8]=P.b,de+=9;for(a=0,o=Ge.length;a<o;a++)u=(s=ke[Ge[a]]).vertexColors,d=s.color,4===u.length&&te===p.VertexColors?(L=u[0],R=u[1],P=u[2],D=u[3]):(L=d,R=d,P=d,D=d),we[de]=L.r,we[de+1]=L.g,we[de+2]=L.b,we[de+3]=R.r,we[de+4]=R.g,we[de+5]=R.b,we[de+6]=P.r,we[de+7]=P.g,we[de+8]=P.b,we[de+9]=D.r,we[de+10]=D.g,we[de+11]=D.b,de+=12;de>0&&(c.bindBuffer(c.ARRAY_BUFFER,e.__webglColorBuffer),c.bufferData(c.ARRAY_BUFFER,we,i))}if(Ue&&De.hasTangents){for(a=0,o=He.length;a<o;a++)w=(f=(s=ke[He[a]]).vertexTangents)[0],b=f[1],M=f[2],_e[ce]=w.x,_e[ce+1]=w.y,_e[ce+2]=w.z,_e[ce+3]=w.w,_e[ce+4]=b.x,_e[ce+5]=b.y,_e[ce+6]=b.z,_e[ce+7]=b.w,_e[ce+8]=M.x,_e[ce+9]=M.y,_e[ce+10]=M.z,_e[ce+11]=M.w,ce+=12;for(a=0,o=Ge.length;a<o;a++)w=(f=(s=ke[Ge[a]]).vertexTangents)[0],b=f[1],M=f[2],S=f[3],_e[ce]=w.x,_e[ce+1]=w.y,_e[ce+2]=w.z,_e[ce+3]=w.w,_e[ce+4]=b.x,_e[ce+5]=b.y,_e[ce+6]=b.z,_e[ce+7]=b.w,_e[ce+8]=M.x,_e[ce+9]=M.y,_e[ce+10]=M.z,_e[ce+11]=M.w,_e[ce+12]=S.x,_e[ce+13]=S.y,_e[ce+14]=S.z,_e[ce+15]=S.w,ce+=16;c.bindBuffer(c.ARRAY_BUFFER,e.__webglTangentBuffer),c.bufferData(c.ARRAY_BUFFER,_e,i)}if(Ne&&ee){for(a=0,o=He.length;a<o;a++)if(l=(s=ke[He[a]]).vertexNormals,h=s.normal,3===l.length&&re)for(H=0;H<3;H++)k=l[H],xe[he]=k.x,xe[he+1]=k.y,xe[he+2]=k.z,he+=3;else for(H=0;H<3;H++)xe[he]=h.x,xe[he+1]=h.y,xe[he+2]=h.z,he+=3;for(a=0,o=Ge.length;a<o;a++)if(l=(s=ke[Ge[a]]).vertexNormals,h=s.normal,4===l.length&&re)for(H=0;H<4;H++)k=l[H],xe[he]=k.x,xe[he+1]=k.y,xe[he+2]=k.z,he+=3;else for(H=0;H<4;H++)xe[he]=h.x,xe[he+1]=h.y,xe[he+2]=h.z,he+=3;c.bindBuffer(c.ARRAY_BUFFER,e.__webglNormalBuffer),c.bufferData(c.ARRAY_BUFFER,xe,i)}if(Ie&&We&&ie){for(a=0,o=He.length;a<o;a++)if(void 0!==(m=We[He[a]]))for(H=0;H<3;H++)W=m[H],ve[oe]=W.x,ve[oe+1]=W.y,oe+=2;for(a=0,o=Ge.length;a<o;a++)if(void 0!==(m=We[Ge[a]]))for(H=0;H<4;H++)W=m[H],ve[oe]=W.x,ve[oe+1]=W.y,oe+=2;oe>0&&(c.bindBuffer(c.ARRAY_BUFFER,e.__webglUVBuffer),c.bufferData(c.ARRAY_BUFFER,ve,i))}if(Ie&&je&&ie){for(a=0,o=He.length;a<o;a++)if(void 0!==(g=je[He[a]]))for(H=0;H<3;H++)j=g[H],ye[se]=j.x,ye[se+1]=j.y,se+=2;for(a=0,o=Ge.length;a<o;a++)if(void 0!==(g=je[Ge[a]]))for(H=0;H<4;H++)j=g[H],ye[se]=j.x,ye[se+1]=j.y,se+=2;se>0&&(c.bindBuffer(c.ARRAY_BUFFER,e.__webglUV2Buffer),c.bufferData(c.ARRAY_BUFFER,ye,i))}if(ze){for(a=0,o=He.length;a<o;a++)Re[le]=ne,Re[le+1]=ne+1,Re[le+2]=ne+2,le+=3,Pe[ue]=ne,Pe[ue+1]=ne+1,Pe[ue+2]=ne,Pe[ue+3]=ne+2,Pe[ue+4]=ne+1,Pe[ue+5]=ne+2,ue+=6,ne+=3;for(a=0,o=Ge.length;a<o;a++)Re[le]=ne,Re[le+1]=ne+1,Re[le+2]=ne+3,Re[le+3]=ne+1,Re[le+4]=ne+2,Re[le+5]=ne+3,le+=6,Pe[ue]=ne,Pe[ue+1]=ne+1,Pe[ue+2]=ne,Pe[ue+3]=ne+3,Pe[ue+4]=ne+1,Pe[ue+5]=ne+2,Pe[ue+6]=ne+2,Pe[ue+7]=ne+3,ue+=8,ne+=4;c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,e.__webglFaceBuffer),c.bufferData(c.ELEMENT_ARRAY_BUFFER,Re,i),c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,e.__webglLineBuffer),c.bufferData(c.ELEMENT_ARRAY_BUFFER,Pe,i)}if(Le)for(H=0,G=Le.length;H<G;H++)if(($=Le[H]).__original.needsUpdate){if(me=0,0,1===$.size){if(void 0===$.boundTo||"vertices"===$.boundTo){for(a=0,o=He.length;a<o;a++)s=ke[He[a]],$.array[me]=$.value[s.a],$.array[me+1]=$.value[s.b],$.array[me+2]=$.value[s.c],me+=3;for(a=0,o=Ge.length;a<o;a++)s=ke[Ge[a]],$.array[me]=$.value[s.a],$.array[me+1]=$.value[s.b],$.array[me+2]=$.value[s.c],$.array[me+3]=$.value[s.d],me+=4}else if("faces"===$.boundTo){for(a=0,o=He.length;a<o;a++)Q=$.value[He[a]],$.array[me]=Q,$.array[me+1]=Q,$.array[me+2]=Q,me+=3;for(a=0,o=Ge.length;a<o;a++)Q=$.value[Ge[a]],$.array[me]=Q,$.array[me+1]=Q,$.array[me+2]=Q,$.array[me+3]=Q,me+=4}}else if(2===$.size){if(void 0===$.boundTo||"vertices"===$.boundTo){for(a=0,o=He.length;a<o;a++)s=ke[He[a]],v=$.value[s.a],y=$.value[s.b],x=$.value[s.c],$.array[me]=v.x,$.array[me+1]=v.y,$.array[me+2]=y.x,$.array[me+3]=y.y,$.array[me+4]=x.x,$.array[me+5]=x.y,me+=6;for(a=0,o=Ge.length;a<o;a++)s=ke[Ge[a]],v=$.value[s.a],y=$.value[s.b],x=$.value[s.c],_=$.value[s.d],$.array[me]=v.x,$.array[me+1]=v.y,$.array[me+2]=y.x,$.array[me+3]=y.y,$.array[me+4]=x.x,$.array[me+5]=x.y,$.array[me+6]=_.x,$.array[me+7]=_.y,me+=8}else if("faces"===$.boundTo){for(a=0,o=He.length;a<o;a++)v=Q=$.value[He[a]],y=Q,x=Q,$.array[me]=v.x,$.array[me+1]=v.y,$.array[me+2]=y.x,$.array[me+3]=y.y,$.array[me+4]=x.x,$.array[me+5]=x.y,me+=6;for(a=0,o=Ge.length;a<o;a++)v=Q=$.value[Ge[a]],y=Q,x=Q,_=Q,$.array[me]=v.x,$.array[me+1]=v.y,$.array[me+2]=y.x,$.array[me+3]=y.y,$.array[me+4]=x.x,$.array[me+5]=x.y,$.array[me+6]=_.x,$.array[me+7]=_.y,me+=8}}else if(3===$.size){var Ze;if(Ze="c"===$.type?["r","g","b"]:["x","y","z"],void 0===$.boundTo||"vertices"===$.boundTo){for(a=0,o=He.length;a<o;a++)s=ke[He[a]],v=$.value[s.a],y=$.value[s.b],x=$.value[s.c],$.array[me]=v[Ze[0]],$.array[me+1]=v[Ze[1]],$.array[me+2]=v[Ze[2]],$.array[me+3]=y[Ze[0]],$.array[me+4]=y[Ze[1]],$.array[me+5]=y[Ze[2]],$.array[me+6]=x[Ze[0]],$.array[me+7]=x[Ze[1]],$.array[me+8]=x[Ze[2]],me+=9;for(a=0,o=Ge.length;a<o;a++)s=ke[Ge[a]],v=$.value[s.a],y=$.value[s.b],x=$.value[s.c],_=$.value[s.d],$.array[me]=v[Ze[0]],$.array[me+1]=v[Ze[1]],$.array[me+2]=v[Ze[2]],$.array[me+3]=y[Ze[0]],$.array[me+4]=y[Ze[1]],$.array[me+5]=y[Ze[2]],$.array[me+6]=x[Ze[0]],$.array[me+7]=x[Ze[1]],$.array[me+8]=x[Ze[2]],$.array[me+9]=_[Ze[0]],$.array[me+10]=_[Ze[1]],$.array[me+11]=_[Ze[2]],me+=12}else if("faces"===$.boundTo){for(a=0,o=He.length;a<o;a++)v=Q=$.value[He[a]],y=Q,x=Q,$.array[me]=v[Ze[0]],$.array[me+1]=v[Ze[1]],$.array[me+2]=v[Ze[2]],$.array[me+3]=y[Ze[0]],$.array[me+4]=y[Ze[1]],$.array[me+5]=y[Ze[2]],$.array[me+6]=x[Ze[0]],$.array[me+7]=x[Ze[1]],$.array[me+8]=x[Ze[2]],me+=9;for(a=0,o=Ge.length;a<o;a++)v=Q=$.value[Ge[a]],y=Q,x=Q,_=Q,$.array[me]=v[Ze[0]],$.array[me+1]=v[Ze[1]],$.array[me+2]=v[Ze[2]],$.array[me+3]=y[Ze[0]],$.array[me+4]=y[Ze[1]],$.array[me+5]=y[Ze[2]],$.array[me+6]=x[Ze[0]],$.array[me+7]=x[Ze[1]],$.array[me+8]=x[Ze[2]],$.array[me+9]=_[Ze[0]],$.array[me+10]=_[Ze[1]],$.array[me+11]=_[Ze[2]],me+=12}else if("faceVertices"===$.boundTo){for(a=0,o=He.length;a<o;a++)v=(Q=$.value[He[a]])[0],y=Q[1],x=Q[2],$.array[me]=v[Ze[0]],$.array[me+1]=v[Ze[1]],$.array[me+2]=v[Ze[2]],$.array[me+3]=y[Ze[0]],$.array[me+4]=y[Ze[1]],$.array[me+5]=y[Ze[2]],$.array[me+6]=x[Ze[0]],$.array[me+7]=x[Ze[1]],$.array[me+8]=x[Ze[2]],me+=9;for(a=0,o=Ge.length;a<o;a++)v=(Q=$.value[Ge[a]])[0],y=Q[1],x=Q[2],_=Q[3],$.array[me]=v[Ze[0]],$.array[me+1]=v[Ze[1]],$.array[me+2]=v[Ze[2]],$.array[me+3]=y[Ze[0]],$.array[me+4]=y[Ze[1]],$.array[me+5]=y[Ze[2]],$.array[me+6]=x[Ze[0]],$.array[me+7]=x[Ze[1]],$.array[me+8]=x[Ze[2]],$.array[me+9]=_[Ze[0]],$.array[me+10]=_[Ze[1]],$.array[me+11]=_[Ze[2]],me+=12}}else if(4===$.size)if(void 0===$.boundTo||"vertices"===$.boundTo){for(a=0,o=He.length;a<o;a++)s=ke[He[a]],v=$.value[s.a],y=$.value[s.b],x=$.value[s.c],$.array[me]=v.x,$.array[me+1]=v.y,$.array[me+2]=v.z,$.array[me+3]=v.w,$.array[me+4]=y.x,$.array[me+5]=y.y,$.array[me+6]=y.z,$.array[me+7]=y.w,$.array[me+8]=x.x,$.array[me+9]=x.y,$.array[me+10]=x.z,$.array[me+11]=x.w,me+=12;for(a=0,o=Ge.length;a<o;a++)s=ke[Ge[a]],v=$.value[s.a],y=$.value[s.b],x=$.value[s.c],_=$.value[s.d],$.array[me]=v.x,$.array[me+1]=v.y,$.array[me+2]=v.z,$.array[me+3]=v.w,$.array[me+4]=y.x,$.array[me+5]=y.y,$.array[me+6]=y.z,$.array[me+7]=y.w,$.array[me+8]=x.x,$.array[me+9]=x.y,$.array[me+10]=x.z,$.array[me+11]=x.w,$.array[me+12]=_.x,$.array[me+13]=_.y,$.array[me+14]=_.z,$.array[me+15]=_.w,me+=16}else if("faces"===$.boundTo){for(a=0,o=He.length;a<o;a++)v=Q=$.value[He[a]],y=Q,x=Q,$.array[me]=v.x,$.array[me+1]=v.y,$.array[me+2]=v.z,$.array[me+3]=v.w,$.array[me+4]=y.x,$.array[me+5]=y.y,$.array[me+6]=y.z,$.array[me+7]=y.w,$.array[me+8]=x.x,$.array[me+9]=x.y,$.array[me+10]=x.z,$.array[me+11]=x.w,me+=12;for(a=0,o=Ge.length;a<o;a++)v=Q=$.value[Ge[a]],y=Q,x=Q,_=Q,$.array[me]=v.x,$.array[me+1]=v.y,$.array[me+2]=v.z,$.array[me+3]=v.w,$.array[me+4]=y.x,$.array[me+5]=y.y,$.array[me+6]=y.z,$.array[me+7]=y.w,$.array[me+8]=x.x,$.array[me+9]=x.y,$.array[me+10]=x.z,$.array[me+11]=x.w,$.array[me+12]=_.x,$.array[me+13]=_.y,$.array[me+14]=_.z,$.array[me+15]=_.w,me+=16}else if("faceVertices"===$.boundTo){for(a=0,o=He.length;a<o;a++)v=(Q=$.value[He[a]])[0],y=Q[1],x=Q[2],$.array[me]=v.x,$.array[me+1]=v.y,$.array[me+2]=v.z,$.array[me+3]=v.w,$.array[me+4]=y.x,$.array[me+5]=y.y,$.array[me+6]=y.z,$.array[me+7]=y.w,$.array[me+8]=x.x,$.array[me+9]=x.y,$.array[me+10]=x.z,$.array[me+11]=x.w,me+=12;for(a=0,o=Ge.length;a<o;a++)v=(Q=$.value[Ge[a]])[0],y=Q[1],x=Q[2],_=Q[3],$.array[me]=v.x,$.array[me+1]=v.y,$.array[me+2]=v.z,$.array[me+3]=v.w,$.array[me+4]=y.x,$.array[me+5]=y.y,$.array[me+6]=y.z,$.array[me+7]=y.w,$.array[me+8]=x.x,$.array[me+9]=x.y,$.array[me+10]=x.z,$.array[me+11]=x.w,$.array[me+12]=_.x,$.array[me+13]=_.y,$.array[me+14]=_.z,$.array[me+15]=_.w,me+=16}c.bindBuffer(c.ARRAY_BUFFER,$.buffer),c.bufferData(c.ARRAY_BUFFER,$.array,i)}r&&(delete e.__inittedArrays,delete e.__colorArray,delete e.__normalArray,delete e.__tangentArray,delete e.__uvArray,delete e.__uv2Array,delete e.__faceArray,delete e.__vertexArray,delete e.__lineArray,delete e.__skinIndexArray,delete e.__skinWeightArray)}}function Le(e,t,i){var r=e.attributes,n=r.index,a=r.position,o=r.normal,s=r.uv,l=r.color,h=r.tangent;if(e.elementsNeedUpdate&&void 0!==n&&(c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,n.buffer),c.bufferData(c.ELEMENT_ARRAY_BUFFER,n.array,t)),e.verticesNeedUpdate&&void 0!==a&&(c.bindBuffer(c.ARRAY_BUFFER,a.buffer),c.bufferData(c.ARRAY_BUFFER,a.array,t)),e.normalsNeedUpdate&&void 0!==o&&(c.bindBuffer(c.ARRAY_BUFFER,o.buffer),c.bufferData(c.ARRAY_BUFFER,o.array,t)),e.uvsNeedUpdate&&void 0!==s&&(c.bindBuffer(c.ARRAY_BUFFER,s.buffer),c.bufferData(c.ARRAY_BUFFER,s.array,t)),e.colorsNeedUpdate&&void 0!==l&&(c.bindBuffer(c.ARRAY_BUFFER,l.buffer),c.bufferData(c.ARRAY_BUFFER,l.array,t)),e.tangentsNeedUpdate&&void 0!==h&&(c.bindBuffer(c.ARRAY_BUFFER,h.buffer),c.bufferData(c.ARRAY_BUFFER,h.array,t)),i)for(var u in e.attributes)delete e.attributes[u].array}function Re(e){j[e]||(c.enableVertexAttribArray(e),j[e]=!0)}function Pe(){for(var e in j)j[e]&&(c.disableVertexAttribArray(e),j[e]=!1)}function De(e,t){return e.z!==t.z?t.z-e.z:t.id-e.id}function Fe(e,t){return t[0]-e[0]}function ze(e,t,i){if(e.length)for(var r=0,n=e.length;r<n;r++)_=null,S=null,L=-1,F=-1,z=-1,A=-1,C=-1,M=-1,b=-1,J=!0,e[r].render(t,i,k,W),_=null,S=null,L=-1,F=-1,z=-1,A=-1,C=-1,M=-1,b=-1,J=!0}function Ie(e,t,i,r,n,a,o,s){var l,h,c,u,d,f,m;t?(d=e.length-1,f=-1,m=-1):(d=0,f=e.length,m=1);for(var g=d;g!==f;g+=m)if((l=e[g]).render){if(h=l.object,c=l.buffer,s)u=s;else{if(!(u=l[i]))continue;o&&v.setBlending(u.blending,u.blendEquation,u.blendSrc,u.blendDst),v.setDepthTest(u.depthTest),v.setDepthWrite(u.depthWrite),et(u.polygonOffset,u.polygonOffsetFactor,u.polygonOffsetUnits)}v.setMaterialFaces(u),c instanceof p.BufferGeometry?v.renderBufferDirect(r,n,a,u,c,h):v.renderBuffer(r,n,a,u,c,h)}}function Ne(e,t,i,r,n,a,o){for(var s,l,h,c=0,u=e.length;c<u;c++)if((l=(s=e[c]).object).visible){if(o)h=o;else{if(!(h=s[t]))continue;a&&v.setBlending(h.blending,h.blendEquation,h.blendSrc,h.blendDst),v.setDepthTest(h.depthTest),v.setDepthWrite(h.depthWrite),et(h.polygonOffset,h.polygonOffsetFactor,h.polygonOffsetUnits)}v.renderImmediateObject(i,r,n,h,l)}}function Ue(e){var t=e.object.material;t.transparent?(e.transparent=t,e.opaque=null):(e.opaque=t,e.transparent=null)}function Be(e){var t,i,r,n=e.object,a=e.buffer;(r=n.material)instanceof p.MeshFaceMaterial?(i=a.materialIndex,(t=r.materials[i]).transparent?(e.transparent=t,e.opaque=null):(e.opaque=t,e.transparent=null)):(t=r)&&(t.transparent?(e.transparent=t,e.opaque=null):(e.opaque=t,e.transparent=null))}function Oe(e,t){var i,r,n,a;if(!e.__webglInit)if(e.__webglInit=!0,e._modelViewMatrix=new p.Matrix4,e._normalMatrix=new p.Matrix3,void 0!==e.geometry&&void 0===e.geometry.__webglInit&&(e.geometry.__webglInit=!0,e.geometry.addEventListener("dispose",de)),e instanceof p.Mesh)if(r=e.geometry,n=e.material,r instanceof p.Geometry)for(i in void 0===r.geometryGroups&&function(e,t){var i,r,n,a,o,s,l={},h=e.morphTargets.length,c=e.morphNormals.length,u=t instanceof p.MeshFaceMaterial;for(e.geometryGroups={},i=0,r=e.faces.length;i<r;i++)n=e.faces[i],void 0===l[a=u?n.materialIndex:0]&&(l[a]={hash:a,counter:0}),s=l[a].hash+"_"+l[a].counter,void 0===e.geometryGroups[s]&&(e.geometryGroups[s]={faces3:[],faces4:[],materialIndex:a,vertices:0,numMorphTargets:h,numMorphNormals:c}),o=n instanceof p.Face3?3:4,e.geometryGroups[s].vertices+o>65535&&(l[a].counter+=1,s=l[a].hash+"_"+l[a].counter,void 0===e.geometryGroups[s]&&(e.geometryGroups[s]={faces3:[],faces4:[],materialIndex:a,vertices:0,numMorphTargets:h,numMorphNormals:c})),n instanceof p.Face3?e.geometryGroups[s].faces3.push(i):e.geometryGroups[s].faces4.push(i),e.geometryGroups[s].vertices+=o;for(var d in e.geometryGroupsList=[],e.geometryGroups)e.geometryGroups[d].id=T++,e.geometryGroupsList.push(e.geometryGroups[d])}(r,n),r.geometryGroups)(a=r.geometryGroups[i]).__webglVertexBuffer||(ue(a),be(a,e),r.verticesNeedUpdate=!0,r.morphTargetsNeedUpdate=!0,r.elementsNeedUpdate=!0,r.uvsNeedUpdate=!0,r.normalsNeedUpdate=!0,r.tangentsNeedUpdate=!0,r.colorsNeedUpdate=!0);else r instanceof p.BufferGeometry&&Ae(r);else e instanceof p.Ribbon?(r=e.geometry).__webglVertexBuffer||(!function(e){e.__webglVertexBuffer=c.createBuffer(),e.__webglColorBuffer=c.createBuffer(),e.__webglNormalBuffer=c.createBuffer(),v.info.memory.geometries++}(r),function(e,t){var i=e.vertices.length;e.__vertexArray=new Float32Array(3*i),e.__colorArray=new Float32Array(3*i),e.__normalArray=new Float32Array(3*i),e.__webglVertexCount=i,we(e,t)}(r,e),r.verticesNeedUpdate=!0,r.colorsNeedUpdate=!0,r.normalsNeedUpdate=!0):e instanceof p.Line?(r=e.geometry).__webglVertexBuffer||(r instanceof p.Geometry?(!function(e){e.__webglVertexBuffer=c.createBuffer(),e.__webglColorBuffer=c.createBuffer(),e.__webglLineDistanceBuffer=c.createBuffer(),v.info.memory.geometries++}(r),function(e,t){var i=e.vertices.length;e.__vertexArray=new Float32Array(3*i),e.__colorArray=new Float32Array(3*i),e.__lineDistanceArray=new Float32Array(1*i),e.__webglLineCount=i,we(e,t)}(r,e),r.verticesNeedUpdate=!0,r.colorsNeedUpdate=!0,r.lineDistancesNeedUpdate=!0):r instanceof p.BufferGeometry&&Ae(r)):e instanceof p.ParticleSystem&&((r=e.geometry).__webglVertexBuffer||(r instanceof p.Geometry?(!function(e){e.__webglVertexBuffer=c.createBuffer(),e.__webglColorBuffer=c.createBuffer(),v.info.memory.geometries++}(r),function(e,t){var i=e.vertices.length;e.__vertexArray=new Float32Array(3*i),e.__colorArray=new Float32Array(3*i),e.__sortArray=[],e.__webglParticleCount=i,we(e,t)}(r,e),r.verticesNeedUpdate=!0,r.colorsNeedUpdate=!0):r instanceof p.BufferGeometry&&Ae(r)));if(!e.__webglActive){if(e instanceof p.Mesh){if((r=e.geometry)instanceof p.BufferGeometry)Ve(t.__webglObjects,r,e);else if(r instanceof p.Geometry)for(i in r.geometryGroups)a=r.geometryGroups[i],Ve(t.__webglObjects,a,e)}else e instanceof p.Ribbon||e instanceof p.Line||e instanceof p.ParticleSystem?(r=e.geometry,Ve(t.__webglObjects,r,e)):e instanceof p.ImmediateRenderObject||e.immediateRenderCallback?function(e,t){e.push({object:t,opaque:null,transparent:null})}(t.__webglObjectsImmediate,e):e instanceof p.Sprite?t.__webglSprites.push(e):e instanceof p.LensFlare&&t.__webglFlares.push(e);e.__webglActive=!0}}function Ve(e,t,i){e.push({buffer:t,object:i,opaque:null,transparent:null})}function He(e){var t,i,r,n=e.geometry;if(e instanceof p.Mesh)if(n instanceof p.BufferGeometry)(n.verticesNeedUpdate||n.elementsNeedUpdate||n.uvsNeedUpdate||n.normalsNeedUpdate||n.colorsNeedUpdate||n.tangentsNeedUpdate)&&Le(n,c.DYNAMIC_DRAW,!n.dynamic),n.verticesNeedUpdate=!1,n.elementsNeedUpdate=!1,n.uvsNeedUpdate=!1,n.normalsNeedUpdate=!1,n.colorsNeedUpdate=!1,n.tangentsNeedUpdate=!1;else{for(var a=0,o=n.geometryGroupsList.length;a<o;a++)r=Me(e,t=n.geometryGroupsList[a]),n.buffersNeedUpdate&&be(t,e),i=r.attributes&&Ge(r),(n.verticesNeedUpdate||n.morphTargetsNeedUpdate||n.elementsNeedUpdate||n.uvsNeedUpdate||n.normalsNeedUpdate||n.colorsNeedUpdate||n.tangentsNeedUpdate||i)&&Ce(t,e,c.DYNAMIC_DRAW,!n.dynamic,r);n.verticesNeedUpdate=!1,n.morphTargetsNeedUpdate=!1,n.elementsNeedUpdate=!1,n.uvsNeedUpdate=!1,n.normalsNeedUpdate=!1,n.colorsNeedUpdate=!1,n.tangentsNeedUpdate=!1,n.buffersNeedUpdate=!1,r.attributes&&ke(r)}else e instanceof p.Ribbon?(i=(r=Me(e,n)).attributes&&Ge(r),(n.verticesNeedUpdate||n.colorsNeedUpdate||n.normalsNeedUpdate||i)&&function(e,t){var i,r,n,a,o,s,l,h,u,d,p,f,m,g=e.vertices,v=e.colors,y=e.normals,x=g.length,_=v.length,w=y.length,b=e.__vertexArray,M=e.__colorArray,S=e.__normalArray,T=e.verticesNeedUpdate,E=e.colorsNeedUpdate,A=e.normalsNeedUpdate,C=e.__webglCustomAttributesList;if(T){for(i=0;i<x;i++)a=g[i],b[o=3*i]=a.x,b[o+1]=a.y,b[o+2]=a.z;c.bindBuffer(c.ARRAY_BUFFER,e.__webglVertexBuffer),c.bufferData(c.ARRAY_BUFFER,b,t)}if(E){for(r=0;r<_;r++)s=v[r],M[o=3*r]=s.r,M[o+1]=s.g,M[o+2]=s.b;c.bindBuffer(c.ARRAY_BUFFER,e.__webglColorBuffer),c.bufferData(c.ARRAY_BUFFER,M,t)}if(A){for(n=0;n<w;n++)l=y[n],S[o=3*n]=l.x,S[o+1]=l.y,S[o+2]=l.z;c.bindBuffer(c.ARRAY_BUFFER,e.__webglNormalBuffer),c.bufferData(c.ARRAY_BUFFER,S,t)}if(C)for(h=0,u=C.length;h<u;h++)if((f=C[h]).needsUpdate&&(void 0===f.boundTo||"vertices"===f.boundTo)){if(o=0,p=f.value.length,1===f.size)for(d=0;d<p;d++)f.array[d]=f.value[d];else if(2===f.size)for(d=0;d<p;d++)m=f.value[d],f.array[o]=m.x,f.array[o+1]=m.y,o+=2;else if(3===f.size)if("c"===f.type)for(d=0;d<p;d++)m=f.value[d],f.array[o]=m.r,f.array[o+1]=m.g,f.array[o+2]=m.b,o+=3;else for(d=0;d<p;d++)m=f.value[d],f.array[o]=m.x,f.array[o+1]=m.y,f.array[o+2]=m.z,o+=3;else if(4===f.size)for(d=0;d<p;d++)m=f.value[d],f.array[o]=m.x,f.array[o+1]=m.y,f.array[o+2]=m.z,f.array[o+3]=m.w,o+=4;c.bindBuffer(c.ARRAY_BUFFER,f.buffer),c.bufferData(c.ARRAY_BUFFER,f.array,t)}}(n,c.DYNAMIC_DRAW),n.verticesNeedUpdate=!1,n.colorsNeedUpdate=!1,n.normalsNeedUpdate=!1,r.attributes&&ke(r)):e instanceof p.Line?n instanceof p.BufferGeometry?((n.verticesNeedUpdate||n.colorsNeedUpdate)&&Le(n,c.DYNAMIC_DRAW,!n.dynamic),n.verticesNeedUpdate=!1,n.colorsNeedUpdate=!1):(i=(r=Me(e,n)).attributes&&Ge(r),(n.verticesNeedUpdate||n.colorsNeedUpdate||n.lineDistancesNeedUpdate||i)&&function(e,t){var i,r,n,a,o,s,l,h,u,d,p,f,m=e.vertices,g=e.colors,v=e.lineDistances,y=m.length,x=g.length,_=v.length,w=e.__vertexArray,b=e.__colorArray,M=e.__lineDistanceArray,S=e.verticesNeedUpdate,T=e.colorsNeedUpdate,E=e.lineDistancesNeedUpdate,A=e.__webglCustomAttributesList;if(S){for(i=0;i<y;i++)a=m[i],w[o=3*i]=a.x,w[o+1]=a.y,w[o+2]=a.z;c.bindBuffer(c.ARRAY_BUFFER,e.__webglVertexBuffer),c.bufferData(c.ARRAY_BUFFER,w,t)}if(T){for(r=0;r<x;r++)s=g[r],b[o=3*r]=s.r,b[o+1]=s.g,b[o+2]=s.b;c.bindBuffer(c.ARRAY_BUFFER,e.__webglColorBuffer),c.bufferData(c.ARRAY_BUFFER,b,t)}if(E){for(n=0;n<_;n++)M[n]=v[n];c.bindBuffer(c.ARRAY_BUFFER,e.__webglLineDistanceBuffer),c.bufferData(c.ARRAY_BUFFER,M,t)}if(A)for(l=0,h=A.length;l<h;l++)if((f=A[l]).needsUpdate&&(void 0===f.boundTo||"vertices"===f.boundTo)){if(o=0,d=f.value.length,1===f.size)for(u=0;u<d;u++)f.array[u]=f.value[u];else if(2===f.size)for(u=0;u<d;u++)p=f.value[u],f.array[o]=p.x,f.array[o+1]=p.y,o+=2;else if(3===f.size)if("c"===f.type)for(u=0;u<d;u++)p=f.value[u],f.array[o]=p.r,f.array[o+1]=p.g,f.array[o+2]=p.b,o+=3;else for(u=0;u<d;u++)p=f.value[u],f.array[o]=p.x,f.array[o+1]=p.y,f.array[o+2]=p.z,o+=3;else if(4===f.size)for(u=0;u<d;u++)p=f.value[u],f.array[o]=p.x,f.array[o+1]=p.y,f.array[o+2]=p.z,f.array[o+3]=p.w,o+=4;c.bindBuffer(c.ARRAY_BUFFER,f.buffer),c.bufferData(c.ARRAY_BUFFER,f.array,t)}}(n,c.DYNAMIC_DRAW),n.verticesNeedUpdate=!1,n.colorsNeedUpdate=!1,n.lineDistancesNeedUpdate=!1,r.attributes&&ke(r)):e instanceof p.ParticleSystem&&(n instanceof p.BufferGeometry?((n.verticesNeedUpdate||n.colorsNeedUpdate)&&Le(n,c.DYNAMIC_DRAW,!n.dynamic),n.verticesNeedUpdate=!1,n.colorsNeedUpdate=!1):(i=(r=Me(e,n)).attributes&&Ge(r),(n.verticesNeedUpdate||n.colorsNeedUpdate||e.sortParticles||i)&&function(e,t,i){var r,n,a,o,s,l,h,u,d,p,f,m,g=e.vertices,v=g.length,y=e.colors,x=y.length,_=e.__vertexArray,w=e.__colorArray,b=e.__sortArray,M=e.verticesNeedUpdate,S=(e.elementsNeedUpdate,e.colorsNeedUpdate),T=e.__webglCustomAttributesList;if(i.sortParticles){for(Y.copy(q),Y.multiply(i.matrixWorld),r=0;r<v;r++)a=g[r],K.copy(a),K.applyProjection(Y),b[r]=[K.z,r];for(b.sort(Fe),r=0;r<v;r++)a=g[b[r][1]],_[o=3*r]=a.x,_[o+1]=a.y,_[o+2]=a.z;for(n=0;n<x;n++)o=3*n,l=y[b[n][1]],w[o]=l.r,w[o+1]=l.g,w[o+2]=l.b;if(T)for(h=0,u=T.length;h<u;h++)if(void 0===(m=T[h]).boundTo||"vertices"===m.boundTo)if(o=0,p=m.value.length,1===m.size)for(d=0;d<p;d++)s=b[d][1],m.array[d]=m.value[s];else if(2===m.size)for(d=0;d<p;d++)s=b[d][1],f=m.value[s],m.array[o]=f.x,m.array[o+1]=f.y,o+=2;else if(3===m.size)if("c"===m.type)for(d=0;d<p;d++)s=b[d][1],f=m.value[s],m.array[o]=f.r,m.array[o+1]=f.g,m.array[o+2]=f.b,o+=3;else for(d=0;d<p;d++)s=b[d][1],f=m.value[s],m.array[o]=f.x,m.array[o+1]=f.y,m.array[o+2]=f.z,o+=3;else if(4===m.size)for(d=0;d<p;d++)s=b[d][1],f=m.value[s],m.array[o]=f.x,m.array[o+1]=f.y,m.array[o+2]=f.z,m.array[o+3]=f.w,o+=4}else{if(M)for(r=0;r<v;r++)a=g[r],_[o=3*r]=a.x,_[o+1]=a.y,_[o+2]=a.z;if(S)for(n=0;n<x;n++)l=y[n],w[o=3*n]=l.r,w[o+1]=l.g,w[o+2]=l.b;if(T)for(h=0,u=T.length;h<u;h++)if((m=T[h]).needsUpdate&&(void 0===m.boundTo||"vertices"===m.boundTo))if(p=m.value.length,o=0,1===m.size)for(d=0;d<p;d++)m.array[d]=m.value[d];else if(2===m.size)for(d=0;d<p;d++)f=m.value[d],m.array[o]=f.x,m.array[o+1]=f.y,o+=2;else if(3===m.size)if("c"===m.type)for(d=0;d<p;d++)f=m.value[d],m.array[o]=f.r,m.array[o+1]=f.g,m.array[o+2]=f.b,o+=3;else for(d=0;d<p;d++)f=m.value[d],m.array[o]=f.x,m.array[o+1]=f.y,m.array[o+2]=f.z,o+=3;else if(4===m.size)for(d=0;d<p;d++)f=m.value[d],m.array[o]=f.x,m.array[o+1]=f.y,m.array[o+2]=f.z,m.array[o+3]=f.w,o+=4}if((M||i.sortParticles)&&(c.bindBuffer(c.ARRAY_BUFFER,e.__webglVertexBuffer),c.bufferData(c.ARRAY_BUFFER,_,t)),(S||i.sortParticles)&&(c.bindBuffer(c.ARRAY_BUFFER,e.__webglColorBuffer),c.bufferData(c.ARRAY_BUFFER,w,t)),T)for(h=0,u=T.length;h<u;h++)((m=T[h]).needsUpdate||i.sortParticles)&&(c.bindBuffer(c.ARRAY_BUFFER,m.buffer),c.bufferData(c.ARRAY_BUFFER,m.array,t))}(n,c.DYNAMIC_DRAW,e),n.verticesNeedUpdate=!1,n.colorsNeedUpdate=!1,r.attributes&&ke(r)))}function Ge(e){for(var t in e.attributes)if(e.attributes[t].needsUpdate)return!0;return!1}function ke(e){for(var t in e.attributes)e.attributes[t].needsUpdate=!1}function We(e,t){e instanceof p.Mesh||e instanceof p.ParticleSystem||e instanceof p.Ribbon||e instanceof p.Line?je(t.__webglObjects,e):e instanceof p.Sprite?Xe(t.__webglSprites,e):e instanceof p.LensFlare?Xe(t.__webglFlares,e):(e instanceof p.ImmediateRenderObject||e.immediateRenderCallback)&&je(t.__webglObjectsImmediate,e),e.__webglActive=!1}function je(e,t){for(var i=e.length-1;i>=0;i--)e[i].object===t&&e.splice(i,1)}function Xe(e,t){for(var i=e.length-1;i>=0;i--)e[i]===t&&e.splice(i,1)}function qe(e,i,r,n,a){E=0,n.needsUpdate&&(n.program&&xe(n),v.initMaterial(n,i,r,a),n.needsUpdate=!1),n.morphTargets&&(a.__webglMorphTargetInfluences||(a.__webglMorphTargetInfluences=new Float32Array(v.maxMorphTargets)));var o=!1,s=n.program,l=s.uniforms,h=n.uniforms;if(s!==_&&(c.useProgram(s),_=s,o=!0),n.id!==b&&(b=n.id,o=!0),(o||e!==S)&&(c.uniformMatrix4fv(l.projectionMatrix,!1,e.projectionMatrix.elements),e!==S&&(S=e)),n.skinning)if(ne&&a.useVertexTexture){if(null!==l.boneTexture){var u=Ke();c.uniform1i(l.boneTexture,u),v.setTexture(a.boneTexture,u)}}else null!==l.boneGlobalMatrices&&c.uniformMatrix4fv(l.boneGlobalMatrices,!1,a.boneMatrices);if(o){if(r&&n.fog&&function(e,t){e.fogColor.value=t.color,t instanceof p.Fog?(e.fogNear.value=t.near,e.fogFar.value=t.far):t instanceof p.FogExp2&&(e.fogDensity.value=t.density)}(h,r),(n instanceof p.MeshPhongMaterial||n instanceof p.MeshLambertMaterial||n.lights)&&(J&&(!function(e,t){var i,r,n,a,o,s,l,h,c,u,d=0,f=0,m=0,g=Q,y=g.directional.colors,x=g.directional.positions,_=g.point.colors,w=g.point.positions,b=g.point.distances,M=g.spot.colors,S=g.spot.positions,T=g.spot.distances,E=g.spot.directions,A=g.spot.anglesCos,C=g.spot.exponents,L=g.hemi.skyColors,R=g.hemi.groundColors,P=g.hemi.positions,D=0,F=0,z=0,I=0,N=0,U=0,B=0,O=0,V=0,H=0,G=0,k=0;for(i=0,r=t.length;i<r;i++)if(!(n=t[i]).onlyShadow)if(a=n.color,l=n.intensity,u=n.distance,n instanceof p.AmbientLight){if(!n.visible)continue;v.gammaInput?(d+=a.r*a.r,f+=a.g*a.g,m+=a.b*a.b):(d+=a.r,f+=a.g,m+=a.b)}else if(n instanceof p.DirectionalLight){if(N+=1,!n.visible)continue;if(Z.copy(n.matrixWorld.getPosition()),Z.sub(n.target.matrixWorld.getPosition()),Z.normalize(),0===Z.x&&0===Z.y&&0===Z.z)continue;x[V=3*D]=Z.x,x[V+1]=Z.y,x[V+2]=Z.z,v.gammaInput?Je(y,V,a,l*l):Qe(y,V,a,l),D+=1}else if(n instanceof p.PointLight){if(U+=1,!n.visible)continue;H=3*F,v.gammaInput?Je(_,H,a,l*l):Qe(_,H,a,l),c=n.matrixWorld.getPosition(),w[H]=c.x,w[H+1]=c.y,w[H+2]=c.z,b[F]=u,F+=1}else if(n instanceof p.SpotLight){if(B+=1,!n.visible)continue;G=3*z,v.gammaInput?Je(M,G,a,l*l):Qe(M,G,a,l),c=n.matrixWorld.getPosition(),S[G]=c.x,S[G+1]=c.y,S[G+2]=c.z,T[z]=u,Z.copy(c),Z.sub(n.target.matrixWorld.getPosition()),Z.normalize(),E[G]=Z.x,E[G+1]=Z.y,E[G+2]=Z.z,A[z]=Math.cos(n.angle),C[z]=n.exponent,z+=1}else if(n instanceof p.HemisphereLight){if(O+=1,!n.visible)continue;if(Z.copy(n.matrixWorld.getPosition()),Z.normalize(),0===Z.x&&0===Z.y&&0===Z.z)continue;P[k=3*I]=Z.x,P[k+1]=Z.y,P[k+2]=Z.z,o=n.color,s=n.groundColor,v.gammaInput?(Je(L,k,o,h=l*l),Je(R,k,s,h)):(Qe(L,k,o,l),Qe(R,k,s,l)),I+=1}for(i=3*D,r=Math.max(y.length,3*N);i<r;i++)y[i]=0;for(i=3*F,r=Math.max(_.length,3*U);i<r;i++)_[i]=0;for(i=3*z,r=Math.max(M.length,3*B);i<r;i++)M[i]=0;for(i=3*I,r=Math.max(L.length,3*O);i<r;i++)L[i]=0;for(i=3*I,r=Math.max(R.length,3*O);i<r;i++)R[i]=0;g.directional.length=D,g.point.length=F,g.spot.length=z,g.hemi.length=I,g.ambient[0]=d,g.ambient[1]=f,g.ambient[2]=m}(0,i),J=!1),function(e,t){e.ambientLightColor.value=t.ambient,e.directionalLightColor.value=t.directional.colors,e.directionalLightDirection.value=t.directional.positions,e.pointLightColor.value=t.point.colors,e.pointLightPosition.value=t.point.positions,e.pointLightDistance.value=t.point.distances,e.spotLightColor.value=t.spot.colors,e.spotLightPosition.value=t.spot.positions,e.spotLightDistance.value=t.spot.distances,e.spotLightDirection.value=t.spot.directions,e.spotLightAngleCos.value=t.spot.anglesCos,e.spotLightExponent.value=t.spot.exponents,e.hemisphereLightSkyColor.value=t.hemi.skyColors,e.hemisphereLightGroundColor.value=t.hemi.groundColors,e.hemisphereLightDirection.value=t.hemi.positions}(h,Q)),(n instanceof p.MeshBasicMaterial||n instanceof p.MeshLambertMaterial||n instanceof p.MeshPhongMaterial)&&function(e,t){e.opacity.value=t.opacity,v.gammaInput?e.diffuse.value.copyGammaToLinear(t.color):e.diffuse.value=t.color;e.map.value=t.map,e.lightMap.value=t.lightMap,e.specularMap.value=t.specularMap,t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale);t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale));var i;t.map?i=t.map:t.specularMap?i=t.specularMap:t.normalMap?i=t.normalMap:t.bumpMap&&(i=t.bumpMap);if(void 0!==i){var r=i.offset,n=i.repeat;e.offsetRepeat.value.set(r.x,r.y,n.x,n.y)}e.envMap.value=t.envMap,e.flipEnvMap.value=t.envMap instanceof p.WebGLRenderTargetCube?1:-1,v.gammaInput,e.reflectivity.value=t.reflectivity;e.refractionRatio.value=t.refractionRatio,e.combine.value=t.combine,e.useRefract.value=t.envMap&&t.envMap.mapping instanceof p.CubeRefractionMapping}(h,n),n instanceof p.LineBasicMaterial?Ye(h,n):n instanceof p.LineDashedMaterial?(Ye(h,n),function(e,t){e.dashSize.value=t.dashSize,e.totalSize.value=t.dashSize+t.gapSize,e.scale.value=t.scale}(h,n)):n instanceof p.ParticleBasicMaterial?function(e,i){e.psColor.value=i.color,e.opacity.value=i.opacity,e.size.value=i.size,e.scale.value=t.height/2,e.map.value=i.map}(h,n):n instanceof p.MeshPhongMaterial?function(e,t){e.shininess.value=t.shininess,v.gammaInput?(e.ambient.value.copyGammaToLinear(t.ambient),e.emissive.value.copyGammaToLinear(t.emissive),e.specular.value.copyGammaToLinear(t.specular)):(e.ambient.value=t.ambient,e.emissive.value=t.emissive,e.specular.value=t.specular);t.wrapAround&&e.wrapRGB.value.copy(t.wrapRGB)}(h,n):n instanceof p.MeshLambertMaterial?function(e,t){v.gammaInput?(e.ambient.value.copyGammaToLinear(t.ambient),e.emissive.value.copyGammaToLinear(t.emissive)):(e.ambient.value=t.ambient,e.emissive.value=t.emissive);t.wrapAround&&e.wrapRGB.value.copy(t.wrapRGB)}(h,n):n instanceof p.MeshDepthMaterial?(h.mNear.value=e.near,h.mFar.value=e.far,h.opacity.value=n.opacity):n instanceof p.MeshNormalMaterial&&(h.opacity.value=n.opacity),a.receiveShadow&&!n._shadowPass&&function(e,t){if(e.shadowMatrix)for(var i=0,r=0,n=t.length;r<n;r++){var a=t[r];a.castShadow&&((a instanceof p.SpotLight||a instanceof p.DirectionalLight&&!a.shadowCascade)&&(e.shadowMap.value[i]=a.shadowMap,e.shadowMapSize.value[i]=a.shadowMapSize,e.shadowMatrix.value[i]=a.shadowMatrix,e.shadowDarkness.value[i]=a.shadowDarkness,e.shadowBias.value[i]=a.shadowBias,i++))}}(h,i),function(e,t){var i,r,n,a,o,s,l,h,u,d,f;for(u=0,d=t.length;u<d;u++)if(a=e.uniforms[t[u][1]])if(i=t[u][0],n=i.type,r=i.value,"i"===n)c.uniform1i(a,r);else if("f"===n)c.uniform1f(a,r);else if("v2"===n)c.uniform2f(a,r.x,r.y);else if("v3"===n)c.uniform3f(a,r.x,r.y,r.z);else if("v4"===n)c.uniform4f(a,r.x,r.y,r.z,r.w);else if("c"===n)c.uniform3f(a,r.r,r.g,r.b);else if("iv1"===n)c.uniform1iv(a,r);else if("iv"===n)c.uniform3iv(a,r);else if("fv1"===n)c.uniform1fv(a,r);else if("fv"===n)c.uniform3fv(a,r);else if("v2v"===n){for(void 0===i._array&&(i._array=new Float32Array(2*r.length)),l=0,h=r.length;l<h;l++)f=2*l,i._array[f]=r[l].x,i._array[f+1]=r[l].y;c.uniform2fv(a,i._array)}else if("v3v"===n){for(void 0===i._array&&(i._array=new Float32Array(3*r.length)),l=0,h=r.length;l<h;l++)f=3*l,i._array[f]=r[l].x,i._array[f+1]=r[l].y,i._array[f+2]=r[l].z;c.uniform3fv(a,i._array)}else if("v4v"===n){for(void 0===i._array&&(i._array=new Float32Array(4*r.length)),l=0,h=r.length;l<h;l++)f=4*l,i._array[f]=r[l].x,i._array[f+1]=r[l].y,i._array[f+2]=r[l].z,i._array[f+3]=r[l].w;c.uniform4fv(a,i._array)}else if("m4"===n)void 0===i._array&&(i._array=new Float32Array(16)),r.flattenToArray(i._array),c.uniformMatrix4fv(a,!1,i._array);else if("m4v"===n){for(void 0===i._array&&(i._array=new Float32Array(16*r.length)),l=0,h=r.length;l<h;l++)r[l].flattenToArrayOffset(i._array,16*l);c.uniformMatrix4fv(a,!1,i._array)}else if("t"===n){if(o=r,s=Ke(),c.uniform1i(a,s),!o)continue;o.image instanceof Array&&6===o.image.length?at(o,s):o instanceof p.WebGLRenderTargetCube?ot(o,s):v.setTexture(o,s)}else if("tv"===n){for(void 0===i._array&&(i._array=[]),l=0,h=i.value.length;l<h;l++)i._array[l]=Ke();for(c.uniform1iv(a,i._array),l=0,h=i.value.length;l<h;l++)o=i.value[l],s=i._array[l],o&&v.setTexture(o,s)}}(s,n.uniformsList),(n instanceof p.ShaderMaterial||n instanceof p.MeshPhongMaterial||n.envMap)&&null!==l.cameraPosition){var d=e.matrixWorld.getPosition();c.uniform3f(l.cameraPosition,d.x,d.y,d.z)}(n instanceof p.MeshPhongMaterial||n instanceof p.MeshLambertMaterial||n instanceof p.ShaderMaterial||n.skinning)&&null!==l.viewMatrix&&c.uniformMatrix4fv(l.viewMatrix,!1,e.matrixWorldInverse.elements)}return function(e,t){c.uniformMatrix4fv(e.modelViewMatrix,!1,t._modelViewMatrix.elements),e.normalMatrix&&c.uniformMatrix3fv(e.normalMatrix,!1,t._normalMatrix.elements)}(l,a),null!==l.modelMatrix&&c.uniformMatrix4fv(l.modelMatrix,!1,a.matrixWorld.elements),s}function Ye(e,t){e.diffuse.value=t.color,e.opacity.value=t.opacity}function Ke(){var e=E;return e>=$&&console.warn("WebGLRenderer: trying to use "+e+" texture units while this GPU supports only "+$),E+=1,e}function Ze(e,t){e._modelViewMatrix.multiplyMatrices(t.matrixWorldInverse,e.matrixWorld),e._normalMatrix.getInverse(e._modelViewMatrix),e._normalMatrix.transpose()}function Je(e,t,i,r){e[t]=i.r*i.r*r,e[t+1]=i.g*i.g*r,e[t+2]=i.b*i.b*r}function Qe(e,t,i,r){e[t]=i.r*r,e[t+1]=i.g*r,e[t+2]=i.b*r}function $e(e){e!==B&&(c.lineWidth(e),B=e)}function et(e,t,i){I!==e&&(e?c.enable(c.POLYGON_OFFSET_FILL):c.disable(c.POLYGON_OFFSET_FILL),I=e),!e||N===t&&U===i||(c.polygonOffset(t,i),N=t,U=i)}function tt(e,t){var i;return"fragment"===e?i=c.createShader(c.FRAGMENT_SHADER):"vertex"===e&&(i=c.createShader(c.VERTEX_SHADER)),c.shaderSource(i,t),c.compileShader(i),c.getShaderParameter(i,c.COMPILE_STATUS)?i:(console.error(c.getShaderInfoLog(i)),console.error(function(e){for(var t=e.split("\n"),i=0,r=t.length;i<r;i++)t[i]=i+1+": "+t[i];return t.join("\n")}(t)),null)}function it(e){return 0==(e&e-1)}function rt(e,t,i){i?(c.texParameteri(e,c.TEXTURE_WRAP_S,ct(t.wrapS)),c.texParameteri(e,c.TEXTURE_WRAP_T,ct(t.wrapT)),c.texParameteri(e,c.TEXTURE_MAG_FILTER,ct(t.magFilter)),c.texParameteri(e,c.TEXTURE_MIN_FILTER,ct(t.minFilter))):(c.texParameteri(e,c.TEXTURE_WRAP_S,c.CLAMP_TO_EDGE),c.texParameteri(e,c.TEXTURE_WRAP_T,c.CLAMP_TO_EDGE),c.texParameteri(e,c.TEXTURE_MAG_FILTER,ht(t.magFilter)),c.texParameteri(e,c.TEXTURE_MIN_FILTER,ht(t.minFilter))),m&&t.type!==p.FloatType&&(t.anisotropy>1||t.__oldAnisotropy)&&(c.texParameterf(e,m.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(t.anisotropy,ie)),t.__oldAnisotropy=t.anisotropy)}function nt(e,t){if(e.width<=t&&e.height<=t)return e;var i=Math.max(e.width,e.height),r=Math.floor(e.width*t/i),n=Math.floor(e.height*t/i),a=document.createElement("canvas");return a.width=r,a.height=n,a.getContext("2d").drawImage(e,0,0,e.width,e.height,0,0,r,n),a}function at(e,t){if(6===e.image.length)if(e.needsUpdate){e.image.__webglTextureCube||(e.image.__webglTextureCube=c.createTexture(),v.info.memory.textures++),c.activeTexture(c.TEXTURE0+t),c.bindTexture(c.TEXTURE_CUBE_MAP,e.image.__webglTextureCube),c.pixelStorei(c.UNPACK_FLIP_Y_WEBGL,e.flipY);for(var i=e instanceof p.CompressedTexture,r=[],n=0;n<6;n++)v.autoScaleCubemaps&&!i?r[n]=nt(e.image[n],te):r[n]=e.image[n];var a=r[0],o=it(a.width)&&it(a.height),s=ct(e.format),l=ct(e.type);rt(c.TEXTURE_CUBE_MAP,e,o);for(n=0;n<6;n++)if(i)for(var h,u=r[n].mipmaps,d=0,f=u.length;d<f;d++)h=u[d],c.compressedTexImage2D(c.TEXTURE_CUBE_MAP_POSITIVE_X+n,d,s,h.width,h.height,0,h.data);else c.texImage2D(c.TEXTURE_CUBE_MAP_POSITIVE_X+n,0,s,s,l,r[n]);e.generateMipmaps&&o&&c.generateMipmap(c.TEXTURE_CUBE_MAP),e.needsUpdate=!1,e.onUpdate&&e.onUpdate()}else c.activeTexture(c.TEXTURE0+t),c.bindTexture(c.TEXTURE_CUBE_MAP,e.image.__webglTextureCube)}function ot(e,t){c.activeTexture(c.TEXTURE0+t),c.bindTexture(c.TEXTURE_CUBE_MAP,e.__webglTexture)}function st(e,t,i){c.bindFramebuffer(c.FRAMEBUFFER,e),c.framebufferTexture2D(c.FRAMEBUFFER,c.COLOR_ATTACHMENT0,i,t.__webglTexture,0)}function lt(e,t){c.bindRenderbuffer(c.RENDERBUFFER,e),t.depthBuffer&&!t.stencilBuffer?(c.renderbufferStorage(c.RENDERBUFFER,c.DEPTH_COMPONENT16,t.width,t.height),c.framebufferRenderbuffer(c.FRAMEBUFFER,c.DEPTH_ATTACHMENT,c.RENDERBUFFER,e)):t.depthBuffer&&t.stencilBuffer?(c.renderbufferStorage(c.RENDERBUFFER,c.DEPTH_STENCIL,t.width,t.height),c.framebufferRenderbuffer(c.FRAMEBUFFER,c.DEPTH_STENCIL_ATTACHMENT,c.RENDERBUFFER,e)):c.renderbufferStorage(c.RENDERBUFFER,c.RGBA4,t.width,t.height)}function ht(e){return e===p.NearestFilter||e===p.NearestMipMapNearestFilter||e===p.NearestMipMapLinearFilter?c.NEAREST:c.LINEAR}function ct(e){if(e===p.RepeatWrapping)return c.REPEAT;if(e===p.ClampToEdgeWrapping)return c.CLAMP_TO_EDGE;if(e===p.MirroredRepeatWrapping)return c.MIRRORED_REPEAT;if(e===p.NearestFilter)return c.NEAREST;if(e===p.NearestMipMapNearestFilter)return c.NEAREST_MIPMAP_NEAREST;if(e===p.NearestMipMapLinearFilter)return c.NEAREST_MIPMAP_LINEAR;if(e===p.LinearFilter)return c.LINEAR;if(e===p.LinearMipMapNearestFilter)return c.LINEAR_MIPMAP_NEAREST;if(e===p.LinearMipMapLinearFilter)return c.LINEAR_MIPMAP_LINEAR;if(e===p.UnsignedByteType)return c.UNSIGNED_BYTE;if(e===p.UnsignedShort4444Type)return c.UNSIGNED_SHORT_4_4_4_4;if(e===p.UnsignedShort5551Type)return c.UNSIGNED_SHORT_5_5_5_1;if(e===p.UnsignedShort565Type)return c.UNSIGNED_SHORT_5_6_5;if(e===p.ByteType)return c.BYTE;if(e===p.ShortType)return c.SHORT;if(e===p.UnsignedShortType)return c.UNSIGNED_SHORT;if(e===p.IntType)return c.INT;if(e===p.UnsignedIntType)return c.UNSIGNED_INT;if(e===p.FloatType)return c.FLOAT;if(e===p.AlphaFormat)return c.ALPHA;if(e===p.RGBFormat)return c.RGB;if(e===p.RGBAFormat)return c.RGBA;if(e===p.LuminanceFormat)return c.LUMINANCE;if(e===p.LuminanceAlphaFormat)return c.LUMINANCE_ALPHA;if(e===p.AddEquation)return c.FUNC_ADD;if(e===p.SubtractEquation)return c.FUNC_SUBTRACT;if(e===p.ReverseSubtractEquation)return c.FUNC_REVERSE_SUBTRACT;if(e===p.ZeroFactor)return c.ZERO;if(e===p.OneFactor)return c.ONE;if(e===p.SrcColorFactor)return c.SRC_COLOR;if(e===p.OneMinusSrcColorFactor)return c.ONE_MINUS_SRC_COLOR;if(e===p.SrcAlphaFactor)return c.SRC_ALPHA;if(e===p.OneMinusSrcAlphaFactor)return c.ONE_MINUS_SRC_ALPHA;if(e===p.DstAlphaFactor)return c.DST_ALPHA;if(e===p.OneMinusDstAlphaFactor)return c.ONE_MINUS_DST_ALPHA;if(e===p.DstColorFactor)return c.DST_COLOR;if(e===p.OneMinusDstColorFactor)return c.ONE_MINUS_DST_COLOR;if(e===p.SrcAlphaSaturateFactor)return c.SRC_ALPHA_SATURATE;if(void 0!==g){if(e===p.RGB_S3TC_DXT1_Format)return g.COMPRESSED_RGB_S3TC_DXT1_EXT;if(e===p.RGBA_S3TC_DXT1_Format)return g.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(e===p.RGBA_S3TC_DXT3_Format)return g.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(e===p.RGBA_S3TC_DXT5_Format)return g.COMPRESSED_RGBA_S3TC_DXT5_EXT}return 0}this.renderBufferImmediate=function(e,t,i){if(e.hasPositions&&!e.__webglVertexBuffer&&(e.__webglVertexBuffer=c.createBuffer()),e.hasNormals&&!e.__webglNormalBuffer&&(e.__webglNormalBuffer=c.createBuffer()),e.hasUvs&&!e.__webglUvBuffer&&(e.__webglUvBuffer=c.createBuffer()),e.hasColors&&!e.__webglColorBuffer&&(e.__webglColorBuffer=c.createBuffer()),e.hasPositions&&(c.bindBuffer(c.ARRAY_BUFFER,e.__webglVertexBuffer),c.bufferData(c.ARRAY_BUFFER,e.positionArray,c.DYNAMIC_DRAW),c.enableVertexAttribArray(t.attributes.position),c.vertexAttribPointer(t.attributes.position,3,c.FLOAT,!1,0,0)),e.hasNormals){if(c.bindBuffer(c.ARRAY_BUFFER,e.__webglNormalBuffer),i.shading===p.FlatShading){var r,n,a,o,s,l,h,u,d,f,m,g=3*e.count;for(m=0;m<g;m+=9)o=(f=e.normalArray)[m],l=f[m+1],u=f[m+2],s=f[m+3],h=f[m+4],d=f[m+5],r=(o+s+f[m+6])/3,n=(l+h+f[m+7])/3,a=(u+d+f[m+8])/3,f[m]=r,f[m+1]=n,f[m+2]=a,f[m+3]=r,f[m+4]=n,f[m+5]=a,f[m+6]=r,f[m+7]=n,f[m+8]=a}c.bufferData(c.ARRAY_BUFFER,e.normalArray,c.DYNAMIC_DRAW),c.enableVertexAttribArray(t.attributes.normal),c.vertexAttribPointer(t.attributes.normal,3,c.FLOAT,!1,0,0)}e.hasUvs&&i.map&&(c.bindBuffer(c.ARRAY_BUFFER,e.__webglUvBuffer),c.bufferData(c.ARRAY_BUFFER,e.uvArray,c.DYNAMIC_DRAW),c.enableVertexAttribArray(t.attributes.uv),c.vertexAttribPointer(t.attributes.uv,2,c.FLOAT,!1,0,0)),e.hasColors&&i.vertexColors!==p.NoColors&&(c.bindBuffer(c.ARRAY_BUFFER,e.__webglColorBuffer),c.bufferData(c.ARRAY_BUFFER,e.colorArray,c.DYNAMIC_DRAW),c.enableVertexAttribArray(t.attributes.color),c.vertexAttribPointer(t.attributes.color,3,c.FLOAT,!1,0,0)),c.drawArrays(c.TRIANGLES,0,e.count),e.count=0},this.renderBufferDirect=function(e,t,i,r,n,a){if(!1!==r.visible){var o,s;s=(o=qe(e,t,i,r,a)).attributes;var l=!1,h=r.wireframe?1:0,u=16777215*n.id+2*o.id+h;if(u!==M&&(M=u,l=!0),l&&Pe(),a instanceof p.Mesh){var d=n.attributes.index;if(d){var f=n.offsets;f.length>1&&(l=!0);for(var m=0,g=f.length;m<g;m++){var y=f[m].index;if(l){var x=(L=n.attributes.position).itemSize;c.bindBuffer(c.ARRAY_BUFFER,L.buffer),Re(s.position),c.vertexAttribPointer(s.position,x,c.FLOAT,!1,0,y*x*4);var _=n.attributes.normal;if(s.normal>=0&&_){var w=_.itemSize;c.bindBuffer(c.ARRAY_BUFFER,_.buffer),Re(s.normal),c.vertexAttribPointer(s.normal,w,c.FLOAT,!1,0,y*w*4)}var b=n.attributes.uv;if(s.uv>=0&&b){var S=b.itemSize;c.bindBuffer(c.ARRAY_BUFFER,b.buffer),Re(s.uv),c.vertexAttribPointer(s.uv,S,c.FLOAT,!1,0,y*S*4)}var T=n.attributes.color;if(s.color>=0&&T){var E=T.itemSize;c.bindBuffer(c.ARRAY_BUFFER,T.buffer),Re(s.color),c.vertexAttribPointer(s.color,E,c.FLOAT,!1,0,y*E*4)}var A=n.attributes.tangent;if(s.tangent>=0&&A){var C=A.itemSize;c.bindBuffer(c.ARRAY_BUFFER,A.buffer),Re(s.tangent),c.vertexAttribPointer(s.tangent,C,c.FLOAT,!1,0,y*C*4)}c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,d.buffer)}c.drawElements(c.TRIANGLES,f[m].count,c.UNSIGNED_SHORT,2*f[m].start),v.info.render.calls++,v.info.render.vertices+=f[m].count,v.info.render.faces+=f[m].count/3}}else{if(l){x=(L=n.attributes.position).itemSize;c.bindBuffer(c.ARRAY_BUFFER,L.buffer),Re(s.position),c.vertexAttribPointer(s.position,x,c.FLOAT,!1,0,0);_=n.attributes.normal;if(s.normal>=0&&_){w=_.itemSize;c.bindBuffer(c.ARRAY_BUFFER,_.buffer),Re(s.normal),c.vertexAttribPointer(s.normal,w,c.FLOAT,!1,0,0)}b=n.attributes.uv;if(s.uv>=0&&b){S=b.itemSize;c.bindBuffer(c.ARRAY_BUFFER,b.buffer),Re(s.uv),c.vertexAttribPointer(s.uv,S,c.FLOAT,!1,0,0)}T=n.attributes.color;if(s.color>=0&&T){E=T.itemSize;c.bindBuffer(c.ARRAY_BUFFER,T.buffer),Re(s.color),c.vertexAttribPointer(s.color,E,c.FLOAT,!1,0,0)}A=n.attributes.tangent;if(s.tangent>=0&&A){C=A.itemSize;c.bindBuffer(c.ARRAY_BUFFER,A.buffer),Re(s.tangent),c.vertexAttribPointer(s.tangent,C,c.FLOAT,!1,0,0)}}c.drawArrays(c.TRIANGLES,0,L.numItems/3),v.info.render.calls++,v.info.render.vertices+=L.numItems/3,v.info.render.faces+=L.numItems/3/3}}else if(a instanceof p.ParticleSystem){if(l){x=(L=n.attributes.position).itemSize;c.bindBuffer(c.ARRAY_BUFFER,L.buffer),Re(s.position),c.vertexAttribPointer(s.position,x,c.FLOAT,!1,0,0);T=n.attributes.color;if(s.color>=0&&T){E=T.itemSize;c.bindBuffer(c.ARRAY_BUFFER,T.buffer),Re(s.color),c.vertexAttribPointer(s.color,E,c.FLOAT,!1,0,0)}c.drawArrays(c.POINTS,0,L.numItems/3),v.info.render.calls++,v.info.render.points+=L.numItems/3}}else if(a instanceof p.Line&&l){var L;x=(L=n.attributes.position).itemSize;c.bindBuffer(c.ARRAY_BUFFER,L.buffer),Re(s.position),c.vertexAttribPointer(s.position,x,c.FLOAT,!1,0,0);T=n.attributes.color;if(s.color>=0&&T){E=T.itemSize;c.bindBuffer(c.ARRAY_BUFFER,T.buffer),Re(s.color),c.vertexAttribPointer(s.color,E,c.FLOAT,!1,0,0)}c.drawArrays(c.LINE_STRIP,0,L.numItems/3),v.info.render.calls++,v.info.render.points+=L.numItems}}},this.renderBuffer=function(e,t,i,r,n,a){if(!1!==r.visible){var o,s,l,h,u,d;s=(o=qe(e,t,i,r,a)).attributes;var f=!1,m=r.wireframe?1:0,g=16777215*n.id+2*o.id+m;if(g!==M&&(M=g,f=!0),f&&Pe(),!r.morphTargets&&s.position>=0?f&&(c.bindBuffer(c.ARRAY_BUFFER,n.__webglVertexBuffer),Re(s.position),c.vertexAttribPointer(s.position,3,c.FLOAT,!1,0,0)):a.morphTargetBase&&function(e,t,i){var r=e.program.attributes;-1!==i.morphTargetBase&&r.position>=0?(c.bindBuffer(c.ARRAY_BUFFER,t.__webglMorphTargetsBuffers[i.morphTargetBase]),Re(r.position),c.vertexAttribPointer(r.position,3,c.FLOAT,!1,0,0)):r.position>=0&&(c.bindBuffer(c.ARRAY_BUFFER,t.__webglVertexBuffer),Re(r.position),c.vertexAttribPointer(r.position,3,c.FLOAT,!1,0,0));if(i.morphTargetForcedOrder.length)for(var n=0,a=i.morphTargetForcedOrder,o=i.morphTargetInfluences;n<e.numSupportedMorphTargets&&n<a.length;)r["morphTarget"+n]>=0&&(c.bindBuffer(c.ARRAY_BUFFER,t.__webglMorphTargetsBuffers[a[n]]),Re(r["morphTarget"+n]),c.vertexAttribPointer(r["morphTarget"+n],3,c.FLOAT,!1,0,0)),r["morphNormal"+n]>=0&&e.morphNormals&&(c.bindBuffer(c.ARRAY_BUFFER,t.__webglMorphNormalsBuffers[a[n]]),Re(r["morphNormal"+n]),c.vertexAttribPointer(r["morphNormal"+n],3,c.FLOAT,!1,0,0)),i.__webglMorphTargetInfluences[n]=o[a[n]],n++;else{var s,l,h=[],o=i.morphTargetInfluences,u=o.length;for(l=0;l<u;l++)(s=o[l])>0&&h.push([s,l]);h.length>e.numSupportedMorphTargets?(h.sort(Fe),h.length=e.numSupportedMorphTargets):h.length>e.numSupportedMorphNormals?h.sort(Fe):0===h.length&&h.push([0,0]);for(var d,n=0;n<e.numSupportedMorphTargets;)h[n]?(d=h[n][1],r["morphTarget"+n]>=0&&(c.bindBuffer(c.ARRAY_BUFFER,t.__webglMorphTargetsBuffers[d]),Re(r["morphTarget"+n]),c.vertexAttribPointer(r["morphTarget"+n],3,c.FLOAT,!1,0,0)),r["morphNormal"+n]>=0&&e.morphNormals&&(c.bindBuffer(c.ARRAY_BUFFER,t.__webglMorphNormalsBuffers[d]),Re(r["morphNormal"+n]),c.vertexAttribPointer(r["morphNormal"+n],3,c.FLOAT,!1,0,0)),i.__webglMorphTargetInfluences[n]=o[d]):i.__webglMorphTargetInfluences[n]=0,n++}null!==e.program.uniforms.morphTargetInfluences&&c.uniform1fv(e.program.uniforms.morphTargetInfluences,i.__webglMorphTargetInfluences)}(r,n,a),f){if(n.__webglCustomAttributesList)for(u=0,d=n.__webglCustomAttributesList.length;u<d;u++)s[(h=n.__webglCustomAttributesList[u]).buffer.belongsToAttribute]>=0&&(c.bindBuffer(c.ARRAY_BUFFER,h.buffer),Re(s[h.buffer.belongsToAttribute]),c.vertexAttribPointer(s[h.buffer.belongsToAttribute],h.size,c.FLOAT,!1,0,0));s.color>=0&&(c.bindBuffer(c.ARRAY_BUFFER,n.__webglColorBuffer),Re(s.color),c.vertexAttribPointer(s.color,3,c.FLOAT,!1,0,0)),s.normal>=0&&(c.bindBuffer(c.ARRAY_BUFFER,n.__webglNormalBuffer),Re(s.normal),c.vertexAttribPointer(s.normal,3,c.FLOAT,!1,0,0)),s.tangent>=0&&(c.bindBuffer(c.ARRAY_BUFFER,n.__webglTangentBuffer),Re(s.tangent),c.vertexAttribPointer(s.tangent,4,c.FLOAT,!1,0,0)),s.uv>=0&&(c.bindBuffer(c.ARRAY_BUFFER,n.__webglUVBuffer),Re(s.uv),c.vertexAttribPointer(s.uv,2,c.FLOAT,!1,0,0)),s.uv2>=0&&(c.bindBuffer(c.ARRAY_BUFFER,n.__webglUV2Buffer),Re(s.uv2),c.vertexAttribPointer(s.uv2,2,c.FLOAT,!1,0,0)),r.skinning&&s.skinIndex>=0&&s.skinWeight>=0&&(c.bindBuffer(c.ARRAY_BUFFER,n.__webglSkinIndicesBuffer),Re(s.skinIndex),c.vertexAttribPointer(s.skinIndex,4,c.FLOAT,!1,0,0),c.bindBuffer(c.ARRAY_BUFFER,n.__webglSkinWeightsBuffer),Re(s.skinWeight),c.vertexAttribPointer(s.skinWeight,4,c.FLOAT,!1,0,0)),s.lineDistance>=0&&(c.bindBuffer(c.ARRAY_BUFFER,n.__webglLineDistanceBuffer),Re(s.lineDistance),c.vertexAttribPointer(s.lineDistance,1,c.FLOAT,!1,0,0))}a instanceof p.Mesh?(r.wireframe?($e(r.wireframeLinewidth),f&&c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,n.__webglLineBuffer),c.drawElements(c.LINES,n.__webglLineCount,c.UNSIGNED_SHORT,0)):(f&&c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,n.__webglFaceBuffer),c.drawElements(c.TRIANGLES,n.__webglFaceCount,c.UNSIGNED_SHORT,0)),v.info.render.calls++,v.info.render.vertices+=n.__webglFaceCount,v.info.render.faces+=n.__webglFaceCount/3):a instanceof p.Line?(l=a.type===p.LineStrip?c.LINE_STRIP:c.LINES,$e(r.linewidth),c.drawArrays(l,0,n.__webglLineCount),v.info.render.calls++):a instanceof p.ParticleSystem?(c.drawArrays(c.POINTS,0,n.__webglParticleCount),v.info.render.calls++,v.info.render.points+=n.__webglParticleCount):a instanceof p.Ribbon&&(c.drawArrays(c.TRIANGLE_STRIP,0,n.__webglVertexCount),v.info.render.calls++)}},this.render=function(e,t,i,r){if(t instanceof p.Camera!=!1){var n,a,o,s,l,h=e.__lights,u=e.fog;for(b=-1,J=!0,this.autoUpdateScene&&e.updateMatrixWorld(),void 0===t.parent&&t.updateMatrixWorld(),t.matrixWorldInverse.getInverse(t.matrixWorld),q.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),X.setFromMatrix(q),this.autoUpdateObjects&&this.initWebGLObjects(e),ze(this.renderPluginsPre,e,t),v.info.render.calls=0,v.info.render.vertices=0,v.info.render.faces=0,v.info.render.points=0,this.setRenderTarget(i),(this.autoClear||r)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil),n=0,a=(l=e.__webglObjects).length;n<a;n++)s=(o=l[n]).object,o.render=!1,s.visible&&((s instanceof p.Mesh||s instanceof p.ParticleSystem)&&s.frustumCulled&&!X.intersectsObject(s)||(Ze(s,t),Be(o),o.render=!0,!0===this.sortObjects&&(null!==s.renderDepth?o.z=s.renderDepth:(K.copy(s.matrixWorld.getPosition()),K.applyProjection(q),o.z=K.z),o.id=s.id)));for(this.sortObjects&&l.sort(De),n=0,a=(l=e.__webglObjectsImmediate).length;n<a;n++)(s=(o=l[n]).object).visible&&(Ze(s,t),Ue(o));if(e.overrideMaterial){var d=e.overrideMaterial;this.setBlending(d.blending,d.blendEquation,d.blendSrc,d.blendDst),this.setDepthTest(d.depthTest),this.setDepthWrite(d.depthWrite),et(d.polygonOffset,d.polygonOffsetFactor,d.polygonOffsetUnits),Ie(e.__webglObjects,!1,"",t,h,u,!0,d),Ne(e.__webglObjectsImmediate,"",t,h,u,!1,d)}else{d=null;this.setBlending(p.NoBlending),Ie(e.__webglObjects,!0,"opaque",t,h,u,!1,d),Ne(e.__webglObjectsImmediate,"opaque",t,h,u,!1,d),Ie(e.__webglObjects,!1,"transparent",t,h,u,!0,d),Ne(e.__webglObjectsImmediate,"transparent",t,h,u,!0,d)}ze(this.renderPluginsPost,e,t),i&&i.generateMipmaps&&i.minFilter!==p.NearestFilter&&i.minFilter!==p.LinearFilter&&function(e){e instanceof p.WebGLRenderTargetCube?(c.bindTexture(c.TEXTURE_CUBE_MAP,e.__webglTexture),c.generateMipmap(c.TEXTURE_CUBE_MAP),c.bindTexture(c.TEXTURE_CUBE_MAP,null)):(c.bindTexture(c.TEXTURE_2D,e.__webglTexture),c.generateMipmap(c.TEXTURE_2D),c.bindTexture(c.TEXTURE_2D,null))}(i),this.setDepthTest(!0),this.setDepthWrite(!0)}else console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.")},this.renderImmediateObject=function(e,t,i,r,n){var a=qe(e,t,i,r,n);M=-1,v.setMaterialFaces(r),n.immediateRenderCallback?n.immediateRenderCallback(a,c,X):n.render(function(e){v.renderBufferImmediate(e,a,r)})},this.initWebGLObjects=function(e){for(e.__webglObjects||(e.__webglObjects=[],e.__webglObjectsImmediate=[],e.__webglSprites=[],e.__webglFlares=[]);e.__objectsAdded.length;)Oe(e.__objectsAdded[0],e),e.__objectsAdded.splice(0,1);for(;e.__objectsRemoved.length;)We(e.__objectsRemoved[0],e),e.__objectsRemoved.splice(0,1);for(var t=0,i=e.__webglObjects.length;t<i;t++)He(e.__webglObjects[t].object)},this.initMaterial=function(e,t,r,n){var a,o,s,l,h,u,d;e.addEventListener("dispose",me),e instanceof p.MeshDepthMaterial?d="depth":e instanceof p.MeshNormalMaterial?d="normal":e instanceof p.MeshBasicMaterial?d="basic":e instanceof p.MeshLambertMaterial?d="lambert":e instanceof p.MeshPhongMaterial?d="phong":e instanceof p.LineBasicMaterial?d="basic":e instanceof p.LineDashedMaterial?d="dashed":e instanceof p.ParticleBasicMaterial&&(d="particle_basic"),d&&function(e,t){e.uniforms=p.UniformsUtils.clone(t.uniforms),e.vertexShader=t.vertexShader,e.fragmentShader=t.fragmentShader}(e,p.ShaderLib[d]),l=function(e){var t,i,r,n,a,o,s;for(n=a=o=s=0,t=0,i=e.length;t<i;t++)(r=e[t]).onlyShadow||(r instanceof p.DirectionalLight&&n++,r instanceof p.PointLight&&a++,r instanceof p.SpotLight&&o++,r instanceof p.HemisphereLight&&s++);return{directional:n,point:a,spot:o,hemi:s}}(t),u=function(e){var t,i,r,n=0;for(t=0,i=e.length;t<i;t++)(r=e[t]).castShadow&&(r instanceof p.SpotLight&&n++,r instanceof p.DirectionalLight&&!r.shadowCascade&&n++);return n}(t),h=function(e){if(ne&&e&&e.useVertexTexture)return 1024;var t=c.getParameter(c.MAX_VERTEX_UNIFORM_VECTORS),i=Math.floor((t-20)/4),r=i;return void 0!==e&&e instanceof p.SkinnedMesh&&(r=Math.min(e.bones.length,r))<e.bones.length&&console.warn("WebGLRenderer: too many bones - "+e.bones.length+", this GPU supports just "+r+" (try OpenGL instead of ANGLE)"),r}(n),s={map:!!e.map,envMap:!!e.envMap,lightMap:!!e.lightMap,bumpMap:!!e.bumpMap,normalMap:!!e.normalMap,specularMap:!!e.specularMap,vertexColors:e.vertexColors,fog:r,useFog:e.fog,fogExp:r instanceof p.FogExp2,sizeAttenuation:e.sizeAttenuation,skinning:e.skinning,maxBones:h,useVertexTexture:ne&&n&&n.useVertexTexture,boneTextureWidth:n&&n.boneTextureWidth,boneTextureHeight:n&&n.boneTextureHeight,morphTargets:e.morphTargets,morphNormals:e.morphNormals,maxMorphTargets:this.maxMorphTargets,maxMorphNormals:this.maxMorphNormals,maxDirLights:l.directional,maxPointLights:l.point,maxSpotLights:l.spot,maxHemiLights:l.hemi,maxShadows:u,shadowMapEnabled:this.shadowMapEnabled&&n.receiveShadow,shadowMapType:this.shadowMapType,shadowMapDebug:this.shadowMapDebug,shadowMapCascade:this.shadowMapCascade,alphaTest:e.alphaTest,metal:e.metal,perPixel:e.perPixel,wrapAround:e.wrapAround,doubleSided:e.side===p.DoubleSide,flipSided:e.side===p.BackSide},e.program=function(e,t,r,n,a,o,s){var l,h,u,d,f,m=[];e?m.push(e):(m.push(t),m.push(r));for(u in o)m.push(u),m.push(o[u]);for(l in s)m.push(l),m.push(s[l]);for(f=m.join(),l=0,h=y.length;l<h;l++){var g=y[l];if(g.code===f)return g.usedTimes++,g.program}var _="SHADOWMAP_TYPE_BASIC";s.shadowMapType===p.PCFShadowMap?_="SHADOWMAP_TYPE_PCF":s.shadowMapType===p.PCFSoftShadowMap&&(_="SHADOWMAP_TYPE_PCF_SOFT");var w=function(e){var t,i,r=[];for(var n in e)!1!==(t=e[n])&&(i="#define "+n+" "+t,r.push(i));return r.join("\n")}(o);d=c.createProgram();var b,M,S,T,E=["precision "+i+" float;",w,re?"#define VERTEX_TEXTURES":"",v.gammaInput?"#define GAMMA_INPUT":"",v.gammaOutput?"#define GAMMA_OUTPUT":"",v.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"","#define MAX_DIR_LIGHTS "+s.maxDirLights,"#define MAX_POINT_LIGHTS "+s.maxPointLights,"#define MAX_SPOT_LIGHTS "+s.maxSpotLights,"#define MAX_HEMI_LIGHTS "+s.maxHemiLights,"#define MAX_SHADOWS "+s.maxShadows,"#define MAX_BONES "+s.maxBones,s.map?"#define USE_MAP":"",s.envMap?"#define USE_ENVMAP":"",s.lightMap?"#define USE_LIGHTMAP":"",s.bumpMap?"#define USE_BUMPMAP":"",s.normalMap?"#define USE_NORMALMAP":"",s.specularMap?"#define USE_SPECULARMAP":"",s.vertexColors?"#define USE_COLOR":"",s.skinning?"#define USE_SKINNING":"",s.useVertexTexture?"#define BONE_TEXTURE":"",s.boneTextureWidth?"#define N_BONE_PIXEL_X "+s.boneTextureWidth.toFixed(1):"",s.boneTextureHeight?"#define N_BONE_PIXEL_Y "+s.boneTextureHeight.toFixed(1):"",s.morphTargets?"#define USE_MORPHTARGETS":"",s.morphNormals?"#define USE_MORPHNORMALS":"",s.perPixel?"#define PHONG_PER_PIXEL":"",s.wrapAround?"#define WRAP_AROUND":"",s.doubleSided?"#define DOUBLE_SIDED":"",s.flipSided?"#define FLIP_SIDED":"",s.shadowMapEnabled?"#define USE_SHADOWMAP":"",s.shadowMapEnabled?"#define "+_:"",s.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",s.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",s.sizeAttenuation?"#define USE_SIZEATTENUATION":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","attribute vec2 uv2;","#ifdef USE_COLOR","attribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","attribute vec3 morphTarget0;","attribute vec3 morphTarget1;","attribute vec3 morphTarget2;","attribute vec3 morphTarget3;","#ifdef USE_MORPHNORMALS","attribute vec3 morphNormal0;","attribute vec3 morphNormal1;","attribute vec3 morphNormal2;","attribute vec3 morphNormal3;","#else","attribute vec3 morphTarget4;","attribute vec3 morphTarget5;","attribute vec3 morphTarget6;","attribute vec3 morphTarget7;","#endif","#endif","#ifdef USE_SKINNING","attribute vec4 skinIndex;","attribute vec4 skinWeight;","#endif",""].join("\n"),A=tt("fragment",["precision "+i+" float;",s.bumpMap||s.normalMap?"#extension GL_OES_standard_derivatives : enable":"",w,"#define MAX_DIR_LIGHTS "+s.maxDirLights,"#define MAX_POINT_LIGHTS "+s.maxPointLights,"#define MAX_SPOT_LIGHTS "+s.maxSpotLights,"#define MAX_HEMI_LIGHTS "+s.maxHemiLights,"#define MAX_SHADOWS "+s.maxShadows,s.alphaTest?"#define ALPHATEST "+s.alphaTest:"",v.gammaInput?"#define GAMMA_INPUT":"",v.gammaOutput?"#define GAMMA_OUTPUT":"",v.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"",s.useFog&&s.fog?"#define USE_FOG":"",s.useFog&&s.fogExp?"#define FOG_EXP2":"",s.map?"#define USE_MAP":"",s.envMap?"#define USE_ENVMAP":"",s.lightMap?"#define USE_LIGHTMAP":"",s.bumpMap?"#define USE_BUMPMAP":"",s.normalMap?"#define USE_NORMALMAP":"",s.specularMap?"#define USE_SPECULARMAP":"",s.vertexColors?"#define USE_COLOR":"",s.metal?"#define METAL":"",s.perPixel?"#define PHONG_PER_PIXEL":"",s.wrapAround?"#define WRAP_AROUND":"",s.doubleSided?"#define DOUBLE_SIDED":"",s.flipSided?"#define FLIP_SIDED":"",s.shadowMapEnabled?"#define USE_SHADOWMAP":"",s.shadowMapEnabled?"#define "+_:"",s.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",s.shadowMapCascade?"#define SHADOWMAP_CASCADE":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;",""].join("\n")+t),C=tt("vertex",E+r);c.attachShader(d,C),c.attachShader(d,A),c.linkProgram(d),c.getProgramParameter(d,c.LINK_STATUS)||console.error("Could not initialise shader\nVALIDATE_STATUS: "+c.getProgramParameter(d,c.VALIDATE_STATUS)+", gl error ["+c.getError()+"]");c.deleteShader(A),c.deleteShader(C),d.uniforms={},d.attributes={},b=["viewMatrix","modelViewMatrix","projectionMatrix","normalMatrix","modelMatrix","cameraPosition","morphTargetInfluences"],s.useVertexTexture?b.push("boneTexture"):b.push("boneGlobalMatrices");for(M in n)b.push(M);for(function(e,t){var i,r,n;for(i=0,r=t.length;i<r;i++)n=t[i],e.uniforms[n]=c.getUniformLocation(e,n)}(d,b),b=["position","normal","uv","uv2","tangent","color","skinIndex","skinWeight","lineDistance"],T=0;T<s.maxMorphTargets;T++)b.push("morphTarget"+T);for(T=0;T<s.maxMorphNormals;T++)b.push("morphNormal"+T);for(S in a)b.push(S);return function(e,t){var i,r,n;for(i=0,r=t.length;i<r;i++)n=t[i],e.attributes[n]=c.getAttribLocation(e,n)}(d,b),d.id=x++,y.push({program:d,code:f,usedTimes:1}),v.info.memory.programs=y.length,d}(d,e.fragmentShader,e.vertexShader,e.uniforms,e.attributes,e.defines,s);var f=e.program.attributes;if(e.morphTargets){e.numSupportedMorphTargets=0;var m="morphTarget";for(o=0;o<this.maxMorphTargets;o++)f[m+o]>=0&&e.numSupportedMorphTargets++}if(e.morphNormals){e.numSupportedMorphNormals=0;m="morphNormal";for(o=0;o<this.maxMorphNormals;o++)f[m+o]>=0&&e.numSupportedMorphNormals++}for(a in e.uniformsList=[],e.uniforms)e.uniformsList.push([e.uniforms[a],a])},this.setFaceCulling=function(e,t){e===p.CullFaceNone?c.disable(c.CULL_FACE):(t===p.FrontFaceDirectionCW?c.frontFace(c.CW):c.frontFace(c.CCW),e===p.CullFaceBack?c.cullFace(c.BACK):e===p.CullFaceFront?c.cullFace(c.FRONT):c.cullFace(c.FRONT_AND_BACK),c.enable(c.CULL_FACE))},this.setMaterialFaces=function(e){var t=e.side===p.DoubleSide,i=e.side===p.BackSide;A!==t&&(t?c.disable(c.CULL_FACE):c.enable(c.CULL_FACE),A=t),C!==i&&(i?c.frontFace(c.CW):c.frontFace(c.CCW),C=i)},this.setDepthTest=function(e){F!==e&&(e?c.enable(c.DEPTH_TEST):c.disable(c.DEPTH_TEST),F=e)},this.setDepthWrite=function(e){z!==e&&(c.depthMask(e),z=e)},this.setBlending=function(e,t,i,r){e!==L&&(e===p.NoBlending?c.disable(c.BLEND):e===p.AdditiveBlending?(c.enable(c.BLEND),c.blendEquation(c.FUNC_ADD),c.blendFunc(c.SRC_ALPHA,c.ONE)):e===p.SubtractiveBlending?(c.enable(c.BLEND),c.blendEquation(c.FUNC_ADD),c.blendFunc(c.ZERO,c.ONE_MINUS_SRC_COLOR)):e===p.MultiplyBlending?(c.enable(c.BLEND),c.blendEquation(c.FUNC_ADD),c.blendFunc(c.ZERO,c.SRC_COLOR)):e===p.CustomBlending?c.enable(c.BLEND):(c.enable(c.BLEND),c.blendEquationSeparate(c.FUNC_ADD,c.FUNC_ADD),c.blendFuncSeparate(c.SRC_ALPHA,c.ONE_MINUS_SRC_ALPHA,c.ONE,c.ONE_MINUS_SRC_ALPHA)),L=e),e===p.CustomBlending?(t!==R&&(c.blendEquation(ct(t)),R=t),i===P&&r===D||(c.blendFunc(ct(i),ct(r)),P=i,D=r)):(R=null,P=null,D=null)},this.setTexture=function(e,t){if(e.needsUpdate){e.__webglInit||(e.__webglInit=!0,e.addEventListener("dispose",pe),e.__webglTexture=c.createTexture(),v.info.memory.textures++),c.activeTexture(c.TEXTURE0+t),c.bindTexture(c.TEXTURE_2D,e.__webglTexture),c.pixelStorei(c.UNPACK_FLIP_Y_WEBGL,e.flipY),c.pixelStorei(c.UNPACK_PREMULTIPLY_ALPHA_WEBGL,e.premultiplyAlpha),c.pixelStorei(c.UNPACK_ALIGNMENT,e.unpackAlignment);var i=e.image,r=it(i.width)&&it(i.height),n=ct(e.format),a=ct(e.type);rt(c.TEXTURE_2D,e,r);var o,s=e.mipmaps;if(e instanceof p.DataTexture)if(s.length>0&&r){for(var l=0,h=s.length;l<h;l++)o=s[l],c.texImage2D(c.TEXTURE_2D,l,n,o.width,o.height,0,n,a,o.data);e.generateMipmaps=!1}else c.texImage2D(c.TEXTURE_2D,0,n,i.width,i.height,0,n,a,i.data);else if(e instanceof p.CompressedTexture)for(l=0,h=s.length;l<h;l++)o=s[l],c.compressedTexImage2D(c.TEXTURE_2D,l,n,o.width,o.height,0,o.data);else if(s.length>0&&r){for(l=0,h=s.length;l<h;l++)o=s[l],c.texImage2D(c.TEXTURE_2D,l,n,n,a,o);e.generateMipmaps=!1}else c.texImage2D(c.TEXTURE_2D,0,n,n,a,e.image);e.generateMipmaps&&r&&c.generateMipmap(c.TEXTURE_2D),e.needsUpdate=!1,e.onUpdate&&e.onUpdate()}else c.activeTexture(c.TEXTURE0+t),c.bindTexture(c.TEXTURE_2D,e.__webglTexture)},this.setRenderTarget=function(e){var t,i,r,n,a,o=e instanceof p.WebGLRenderTargetCube;if(e&&!e.__webglFramebuffer){void 0===e.depthBuffer&&(e.depthBuffer=!0),void 0===e.stencilBuffer&&(e.stencilBuffer=!0),e.addEventListener("dispose",fe),e.__webglTexture=c.createTexture(),v.info.memory.textures++;var s=it(e.width)&&it(e.height),l=ct(e.format),h=ct(e.type);if(o){e.__webglFramebuffer=[],e.__webglRenderbuffer=[],c.bindTexture(c.TEXTURE_CUBE_MAP,e.__webglTexture),rt(c.TEXTURE_CUBE_MAP,e,s);for(var u=0;u<6;u++)e.__webglFramebuffer[u]=c.createFramebuffer(),e.__webglRenderbuffer[u]=c.createRenderbuffer(),c.texImage2D(c.TEXTURE_CUBE_MAP_POSITIVE_X+u,0,l,e.width,e.height,0,l,h,null),st(e.__webglFramebuffer[u],e,c.TEXTURE_CUBE_MAP_POSITIVE_X+u),lt(e.__webglRenderbuffer[u],e);s&&c.generateMipmap(c.TEXTURE_CUBE_MAP)}else e.__webglFramebuffer=c.createFramebuffer(),e.shareDepthFrom?e.__webglRenderbuffer=e.shareDepthFrom.__webglRenderbuffer:e.__webglRenderbuffer=c.createRenderbuffer(),c.bindTexture(c.TEXTURE_2D,e.__webglTexture),rt(c.TEXTURE_2D,e,s),c.texImage2D(c.TEXTURE_2D,0,l,e.width,e.height,0,l,h,null),st(e.__webglFramebuffer,e,c.TEXTURE_2D),e.shareDepthFrom?e.depthBuffer&&!e.stencilBuffer?c.framebufferRenderbuffer(c.FRAMEBUFFER,c.DEPTH_ATTACHMENT,c.RENDERBUFFER,e.__webglRenderbuffer):e.depthBuffer&&e.stencilBuffer&&c.framebufferRenderbuffer(c.FRAMEBUFFER,c.DEPTH_STENCIL_ATTACHMENT,c.RENDERBUFFER,e.__webglRenderbuffer):lt(e.__webglRenderbuffer,e),s&&c.generateMipmap(c.TEXTURE_2D);o?c.bindTexture(c.TEXTURE_CUBE_MAP,null):c.bindTexture(c.TEXTURE_2D,null),c.bindRenderbuffer(c.RENDERBUFFER,null),c.bindFramebuffer(c.FRAMEBUFFER,null)}e?(t=o?e.__webglFramebuffer[e.activeCubeFace]:e.__webglFramebuffer,i=e.width,r=e.height,n=0,a=0):(t=null,i=H,r=G,n=O,a=V),t!==w&&(c.bindFramebuffer(c.FRAMEBUFFER,t),c.viewport(n,a,i,r),w=t),k=i,W=r},this.shadowMapPlugin=new p.ShadowMapPlugin,this.addPrePlugin(this.shadowMapPlugin),this.addPostPlugin(new p.SpritePlugin),this.addPostPlugin(new p.LensFlarePlugin)},p.WebGLRenderTarget=function(e,t,i){p.EventDispatcher.call(this),this.width=e,this.height=t,i=i||{},this.wrapS=void 0!==i.wrapS?i.wrapS:p.ClampToEdgeWrapping,this.wrapT=void 0!==i.wrapT?i.wrapT:p.ClampToEdgeWrapping,this.magFilter=void 0!==i.magFilter?i.magFilter:p.LinearFilter,this.minFilter=void 0!==i.minFilter?i.minFilter:p.LinearMipMapLinearFilter,this.anisotropy=void 0!==i.anisotropy?i.anisotropy:1,this.offset=new p.Vector2(0,0),this.repeat=new p.Vector2(1,1),this.format=void 0!==i.format?i.format:p.RGBAFormat,this.type=void 0!==i.type?i.type:p.UnsignedByteType,this.depthBuffer=void 0===i.depthBuffer||i.depthBuffer,this.stencilBuffer=void 0===i.stencilBuffer||i.stencilBuffer,this.generateMipmaps=!0,this.shareDepthFrom=null},p.WebGLRenderTarget.prototype.clone=function(){var e=new p.WebGLRenderTarget(this.width,this.height);return e.wrapS=this.wrapS,e.wrapT=this.wrapT,e.magFilter=this.magFilter,e.minFilter=this.minFilter,e.anisotropy=this.anisotropy,e.offset.copy(this.offset),e.repeat.copy(this.repeat),e.format=this.format,e.type=this.type,e.depthBuffer=this.depthBuffer,e.stencilBuffer=this.stencilBuffer,e.generateMipmaps=this.generateMipmaps,e.shareDepthFrom=this.shareDepthFrom,e},p.WebGLRenderTarget.prototype.dispose=function(){this.dispatchEvent({type:"dispose"})},p.WebGLRenderTargetCube=function(e,t,i){p.WebGLRenderTarget.call(this,e,t,i),this.activeCubeFace=0},p.WebGLRenderTargetCube.prototype=Object.create(p.WebGLRenderTarget.prototype),p.RenderableVertex=function(){this.positionWorld=new p.Vector3,this.positionScreen=new p.Vector4,this.visible=!0},p.RenderableVertex.prototype.copy=function(e){this.positionWorld.copy(e.positionWorld),this.positionScreen.copy(e.positionScreen)},p.RenderableFace3=function(){this.v1=new p.RenderableVertex,this.v2=new p.RenderableVertex,this.v3=new p.RenderableVertex,this.centroidModel=new p.Vector3,this.normalModel=new p.Vector3,this.normalModelView=new p.Vector3,this.vertexNormalsLength=0,this.vertexNormalsModel=[new p.Vector3,new p.Vector3,new p.Vector3],this.vertexNormalsModelView=[new p.Vector3,new p.Vector3,new p.Vector3],this.color=null,this.material=null,this.uvs=[[]],this.z=null},p.RenderableFace4=function(){this.v1=new p.RenderableVertex,this.v2=new p.RenderableVertex,this.v3=new p.RenderableVertex,this.v4=new p.RenderableVertex,this.centroidModel=new p.Vector3,this.normalModel=new p.Vector3,this.normalModelView=new p.Vector3,this.vertexNormalsLength=0,this.vertexNormalsModel=[new p.Vector3,new p.Vector3,new p.Vector3,new p.Vector3],this.vertexNormalsModelView=[new p.Vector3,new p.Vector3,new p.Vector3,new p.Vector3],this.color=null,this.material=null,this.uvs=[[]],this.z=null},p.RenderableObject=function(){this.object=null,this.z=null},p.RenderableParticle=function(){this.object=null,this.x=null,this.y=null,this.z=null,this.rotation=null,this.scale=new p.Vector2,this.material=null},p.RenderableLine=function(){this.z=null,this.v1=new p.RenderableVertex,this.v2=new p.RenderableVertex,this.material=null},p.ColorUtils={adjustHSV:function(e,t,i,r){var n=p.ColorUtils.__hsv;e.getHSV(n),n.h=p.Math.clamp(n.h+t,0,1),n.s=p.Math.clamp(n.s+i,0,1),n.v=p.Math.clamp(n.v+r,0,1),e.setHSV(n.h,n.s,n.v)}},p.ColorUtils.__hsv={h:0,s:0,v:0},p.GeometryUtils={merge:function(e,t){var i,r,n=e.vertices.length,a=(e.faceVertexUvs[0].length,t instanceof p.Mesh?t.geometry:t),o=e.vertices,s=a.vertices,l=e.faces,h=a.faces,c=e.faceVertexUvs[0],u=a.faceVertexUvs[0];t instanceof p.Mesh&&(t.matrixAutoUpdate&&t.updateMatrix(),i=t.matrix,(r=new p.Matrix3).getInverse(i),r.transpose());for(var d=0,f=s.length;d<f;d++){var m=s[d].clone();i&&m.applyMatrix4(i),o.push(m)}for(d=0,f=h.length;d<f;d++){var g,v,y,x=h[d],_=x.vertexNormals,w=x.vertexColors;x instanceof p.Face3?g=new p.Face3(x.a+n,x.b+n,x.c+n):x instanceof p.Face4&&(g=new p.Face4(x.a+n,x.b+n,x.c+n,x.d+n)),g.normal.copy(x.normal),r&&g.normal.applyMatrix3(r).normalize();for(var b=0,M=_.length;b<M;b++)v=_[b].clone(),r&&v.applyMatrix3(r).normalize(),g.vertexNormals.push(v);g.color.copy(x.color);for(b=0,M=w.length;b<M;b++)y=w[b],g.vertexColors.push(y.clone());g.materialIndex=x.materialIndex,g.centroid.copy(x.centroid),i&&g.centroid.applyMatrix4(i),l.push(g)}for(d=0,f=u.length;d<f;d++){var S=u[d],T=[];for(b=0,M=S.length;b<M;b++)T.push(new p.Vector2(S[b].x,S[b].y));c.push(T)}},removeMaterials:function(e,t){for(var i={},r=0,n=t.length;r<n;r++)i[t[r]]=!0;var a,o=[];for(r=0,n=e.faces.length;r<n;r++)(a=e.faces[r]).materialIndex in i||o.push(a);e.faces=o},randomPointInTriangle:function(e,t,i){var r,n,a,o=new p.Vector3,s=p.GeometryUtils.__v1;return(r=p.GeometryUtils.random())+(n=p.GeometryUtils.random())>1&&(r=1-r,n=1-n),a=1-r-n,o.copy(e),o.multiplyScalar(r),s.copy(t),s.multiplyScalar(n),o.add(s),s.copy(i),s.multiplyScalar(a),o.add(s),o},randomPointInFace:function(e,t,i){var r,n,a,o,s,l;return e instanceof p.Face3?(r=t.vertices[e.a],n=t.vertices[e.b],a=t.vertices[e.c],p.GeometryUtils.randomPointInTriangle(r,n,a)):e instanceof p.Face4?(r=t.vertices[e.a],n=t.vertices[e.b],a=t.vertices[e.c],o=t.vertices[e.d],i?e._area1&&e._area2?(s=e._area1,l=e._area2):(s=p.GeometryUtils.triangleArea(r,n,o),l=p.GeometryUtils.triangleArea(n,a,o),e._area1=s,e._area2=l):(s=p.GeometryUtils.triangleArea(r,n,o),l=p.GeometryUtils.triangleArea(n,a,o)),p.GeometryUtils.random()*(s+l)<s?p.GeometryUtils.randomPointInTriangle(r,n,o):p.GeometryUtils.randomPointInTriangle(n,a,o)):void 0},randomPointsInGeometry:function(e,t){var i,r,n,a,o,s,l=e.faces,h=e.vertices,c=l.length,u=0,d=[];for(r=0;r<c;r++)(i=l[r])instanceof p.Face3?(n=h[i.a],a=h[i.b],o=h[i.c],i._area=p.GeometryUtils.triangleArea(n,a,o)):i instanceof p.Face4&&(n=h[i.a],a=h[i.b],o=h[i.c],s=h[i.d],i._area1=p.GeometryUtils.triangleArea(n,a,s),i._area2=p.GeometryUtils.triangleArea(a,o,s),i._area=i._area1+i._area2),u+=i._area,d[r]=u;function f(e){return function t(i,r){if(r<i)return i;var n=i+Math.floor((r-i)/2);return d[n]>e?t(i,n-1):d[n]<e?t(n+1,r):n}(0,d.length-1)}var m,g=[],v={};for(r=0;r<t;r++)m=f(p.GeometryUtils.random()*u),g[r]=p.GeometryUtils.randomPointInFace(l[m],e,!0),v[m]?v[m]+=1:v[m]=1;return g},triangleArea:function(e,t,i){var r=p.GeometryUtils.__v1,n=p.GeometryUtils.__v2;return r.subVectors(t,e),n.subVectors(i,e),r.cross(n),.5*r.length()},center:function(e){e.computeBoundingBox();var t=e.boundingBox,i=new p.Vector3;return i.addVectors(t.min,t.max),i.multiplyScalar(-.5),e.applyMatrix((new p.Matrix4).makeTranslation(i.x,i.y,i.z)),e.computeBoundingBox(),i},normalizeUVs:function(e){for(var t=e.faceVertexUvs[0],i=0,r=t.length;i<r;i++)for(var n=t[i],a=0,o=n.length;a<o;a++)1!==n[a].x&&(n[a].x=n[a].x-Math.floor(n[a].x)),1!==n[a].y&&(n[a].y=n[a].y-Math.floor(n[a].y))},triangulateQuads:function(e){var t,i,r,n,a=[],o=[],s=[];for(t=0,i=e.faceUvs.length;t<i;t++)o[t]=[];for(t=0,i=e.faceVertexUvs.length;t<i;t++)s[t]=[];for(t=0,i=e.faces.length;t<i;t++){var l=e.faces[t];if(l instanceof p.Face4){var h=l.a,c=l.b,u=l.c,d=l.d,f=new p.Face3,m=new p.Face3;for(f.color.copy(l.color),m.color.copy(l.color),f.materialIndex=l.materialIndex,m.materialIndex=l.materialIndex,f.a=h,f.b=c,f.c=d,m.a=c,m.b=u,m.c=d,4===l.vertexColors.length&&(f.vertexColors[0]=l.vertexColors[0].clone(),f.vertexColors[1]=l.vertexColors[1].clone(),f.vertexColors[2]=l.vertexColors[3].clone(),m.vertexColors[0]=l.vertexColors[1].clone(),m.vertexColors[1]=l.vertexColors[2].clone(),m.vertexColors[2]=l.vertexColors[3].clone()),a.push(f,m),r=0,n=e.faceVertexUvs.length;r<n;r++)if(e.faceVertexUvs[r].length){var g=e.faceVertexUvs[r][t],v=g[0],y=g[1],x=g[2],_=g[3],w=[v.clone(),y.clone(),_.clone()],b=[y.clone(),x.clone(),_.clone()];s[r].push(w,b)}for(r=0,n=e.faceUvs.length;r<n;r++)if(e.faceUvs[r].length){var M=e.faceUvs[r][t];o[r].push(M,M)}}else{for(a.push(l),r=0,n=e.faceUvs.length;r<n;r++)o[r].push(e.faceUvs[r][t]);for(r=0,n=e.faceVertexUvs.length;r<n;r++)s[r].push(e.faceVertexUvs[r][t])}}e.faces=a,e.faceUvs=o,e.faceVertexUvs=s,e.computeCentroids(),e.computeFaceNormals(),e.computeVertexNormals(),e.hasTangents&&e.computeTangents()},setMaterialIndex:function(e,t,i,r){for(var n=e.faces,a=i||0,o=r||n.length-1,s=a;s<=o;s++)n[s].materialIndex=t}},p.GeometryUtils.random=p.Math.random16,p.GeometryUtils.__v1=new p.Vector3,p.GeometryUtils.__v2=new p.Vector3,p.ImageUtils={crossOrigin:"anonymous",loadTexture:function(e,t,i,r){var n=new Image,a=new p.Texture(n,t),o=new p.ImageLoader;return o.addEventListener("load",function(e){a.image=e.content,a.needsUpdate=!0,i&&i(a)}),o.addEventListener("error",function(e){r&&r(e.message)}),o.crossOrigin=this.crossOrigin,o.load(e,n),a.sourceFile=e,a},loadCompressedTexture:function(e,t,i,r){var n=new p.CompressedTexture;n.mapping=t;var a=new XMLHttpRequest;return a.onload=function(){var e=a.response,t=p.ImageUtils.parseDDS(e,!0);n.format=t.format,n.mipmaps=t.mipmaps,n.image.width=t.width,n.image.height=t.height,n.generateMipmaps=!1,n.needsUpdate=!0,i&&i(n)},a.onerror=r,a.open("GET",e,!0),a.responseType="arraybuffer",a.send(null),n},loadTextureCube:function(e,t,i,r){var n=[];n.loadCount=0;var a=new p.Texture;a.image=n,void 0!==t&&(a.mapping=t),a.flipY=!1;for(var o=0,s=e.length;o<s;++o){var l=new Image;n[o]=l,l.onload=function(){n.loadCount+=1,6===n.loadCount&&(a.needsUpdate=!0,i&&i(a))},l.onerror=r,l.crossOrigin=this.crossOrigin,l.src=e[o]}return a},loadCompressedTextureCube:function(e,t,i,r){var n=[];n.loadCount=0;var a=new p.CompressedTexture;a.image=n,void 0!==t&&(a.mapping=t),a.flipY=!1,a.generateMipmaps=!1;var o=function(e,t){return function(){var r=e.response,o=p.ImageUtils.parseDDS(r,!0);t.format=o.format,t.mipmaps=o.mipmaps,t.width=o.width,t.height=o.height,n.loadCount+=1,6===n.loadCount&&(a.format=o.format,a.needsUpdate=!0,i&&i(a))}};if(e instanceof Array)for(var s=0,l=e.length;s<l;++s){var h={};n[s]=h,(u=new XMLHttpRequest).onload=o(u,h),u.onerror=r;var c=e[s];u.open("GET",c,!0),u.responseType="arraybuffer",u.send(null)}else{var u;c=e;(u=new XMLHttpRequest).onload=function(){var e=u.response,t=p.ImageUtils.parseDDS(e,!0);if(t.isCubemap){for(var r=t.mipmaps.length/t.mipmapCount,o=0;o<r;o++){n[o]={mipmaps:[]};for(var s=0;s<t.mipmapCount;s++)n[o].mipmaps.push(t.mipmaps[o*t.mipmapCount+s]),n[o].format=t.format,n[o].width=t.width,n[o].height=t.height}a.format=t.format,a.needsUpdate=!0,i&&i(a)}},u.onerror=r,u.open("GET",c,!0),u.responseType="arraybuffer",u.send(null)}return a},parseDDS:function(e,t){var i={mipmaps:[],width:0,height:0,format:null,mipmapCount:1};function r(e){return e.charCodeAt(0)+(e.charCodeAt(1)<<8)+(e.charCodeAt(2)<<16)+(e.charCodeAt(3)<<24)}var n,a=r("DXT1"),o=r("DXT3"),s=r("DXT5"),l=new Int32Array(e,0,31);if(542327876!==l[0])return console.error("ImageUtils.parseDDS(): Invalid magic number in DDS header"),i;if(4&!l[20])return console.error("ImageUtils.parseDDS(): Unsupported format, must contain a FourCC code"),i;var h,c=l[21];switch(c){case a:n=8,i.format=p.RGB_S3TC_DXT1_Format;break;case o:n=16,i.format=p.RGBA_S3TC_DXT3_Format;break;case s:n=16,i.format=p.RGBA_S3TC_DXT5_Format;break;default:return console.error("ImageUtils.parseDDS(): Unsupported FourCC code: ",(h=c,String.fromCharCode(255&h,h>>8&255,h>>16&255,h>>24&255))),i}i.mipmapCount=1,131072&l[2]&&!1!==t&&(i.mipmapCount=Math.max(1,l[7])),i.isCubemap=!!(512&l[28]),i.width=l[4],i.height=l[3];for(var u=l[1]+4,d=i.width,f=i.height,m=i.isCubemap?6:1,g=0;g<m;g++){for(var v=0;v<i.mipmapCount;v++){var y=Math.max(4,d)/4*Math.max(4,f)/4*n,x={data:new Uint8Array(e,u,y),width:d,height:f};i.mipmaps.push(x),u+=y,d=Math.max(.5*d,1),f=Math.max(.5*f,1)}d=i.width,f=i.height}return i},getNormalMap:function(e,t){var i=function(e,t){return[e[0]-t[0],e[1]-t[1],e[2]-t[2]]},r=function(e){var t=Math.sqrt(e[0]*e[0]+e[1]*e[1]+e[2]*e[2]);return[e[0]/t,e[1]/t,e[2]/t]};t|=1;var n=e.width,a=e.height,o=document.createElement("canvas");o.width=n,o.height=a;var s=o.getContext("2d");s.drawImage(e,0,0);for(var l,h,c=s.getImageData(0,0,n,a).data,u=s.createImageData(n,a),d=u.data,p=0;p<n;p++)for(var f=0;f<a;f++){var m=f-1<0?0:f-1,g=f+1>a-1?a-1:f+1,v=p-1<0?0:p-1,y=p+1>n-1?n-1:p+1,x=[],_=[0,0,c[4*(f*n+p)]/255*t];x.push([-1,0,c[4*(f*n+v)]/255*t]),x.push([-1,-1,c[4*(m*n+v)]/255*t]),x.push([0,-1,c[4*(m*n+p)]/255*t]),x.push([1,-1,c[4*(m*n+y)]/255*t]),x.push([1,0,c[4*(f*n+y)]/255*t]),x.push([1,1,c[4*(g*n+y)]/255*t]),x.push([0,1,c[4*(g*n+p)]/255*t]),x.push([-1,1,c[4*(g*n+v)]/255*t]);for(var w=[],b=x.length,M=0;M<b;M++){var S=x[M],T=x[(M+1)%b];S=i(S,_),T=i(T,_),w.push(r((h=T,[(l=S)[1]*h[2]-l[2]*h[1],l[2]*h[0]-l[0]*h[2],l[0]*h[1]-l[1]*h[0]])))}var E=[0,0,0];for(M=0;M<w.length;M++)E[0]+=w[M][0],E[1]+=w[M][1],E[2]+=w[M][2];E[0]/=w.length,E[1]/=w.length,E[2]/=w.length;var A=4*(f*n+p);d[A]=(E[0]+1)/2*255|0,d[A+1]=(E[1]+1)/2*255|0,d[A+2]=255*E[2]|0,d[A+3]=255}return s.putImageData(u,0,0),o},generateDataTexture:function(e,t,i){for(var r=e*t,n=new Uint8Array(3*r),a=Math.floor(255*i.r),o=Math.floor(255*i.g),s=Math.floor(255*i.b),l=0;l<r;l++)n[3*l]=a,n[3*l+1]=o,n[3*l+2]=s;var h=new p.DataTexture(n,e,t,p.RGBFormat);return h.needsUpdate=!0,h}},p.SceneUtils={createMultiMaterialObject:function(e,t){for(var i=new p.Object3D,r=0,n=t.length;r<n;r++)i.add(new p.Mesh(e,t[r]));return i},detach:function(e,t,i){e.applyMatrix(t.matrixWorld),t.remove(e),i.add(e)},attach:function(e,t,i){var r=new p.Matrix4;r.getInverse(i.matrixWorld),e.applyMatrix(r),t.remove(e),i.add(e)}},p.FontUtils={faces:{},face:"helvetiker",weight:"normal",style:"normal",size:150,divisions:10,getFace:function(){return this.faces[this.face][this.weight][this.style]},loadFace:function(e){var t=e.familyName.toLowerCase();this.faces[t]=this.faces[t]||{},this.faces[t][e.cssFontWeight]=this.faces[t][e.cssFontWeight]||{},this.faces[t][e.cssFontWeight][e.cssFontStyle]=e;this.faces[t][e.cssFontWeight][e.cssFontStyle]=e;return e},drawText:function(e){var t,i=this.getFace(),r=this.size/i.resolution,n=0,a=String(e).split(""),o=a.length,s=[];for(t=0;t<o;t++){var l=new p.Path,h=this.extractGlyphPoints(a[t],i,r,n,l);n+=h.offset,s.push(h.path)}return{paths:s,offset:n/2}},extractGlyphPoints:function(e,t,i,r,n){var a,o,s,l,h,c,u,d,f,m,g,v,y,x,_,w,b,M,S=[],T=t.glyphs[e]||t.glyphs["?"];if(T){if(T.o)for(h=(l=T._cachedOutline||(T._cachedOutline=T.o.split(" "))).length,c=i,u=i,a=0;a<h;)switch(l[a++]){case"m":d=l[a++]*c+r,f=l[a++]*u,n.moveTo(d,f);break;case"l":d=l[a++]*c+r,f=l[a++]*u,n.lineTo(d,f);break;case"q":if(m=l[a++]*c+r,g=l[a++]*u,x=l[a++]*c+r,_=l[a++]*u,n.quadraticCurveTo(x,_,m,g),M=S[S.length-1])for(v=M.x,y=M.y,o=1,s=this.divisions;o<=s;o++){var E=o/s;p.Shape.Utils.b2(E,v,x,m),p.Shape.Utils.b2(E,y,_,g)}break;case"b":if(m=l[a++]*c+r,g=l[a++]*u,x=l[a++]*c+r,_=l[a++]*-u,w=l[a++]*c+r,b=l[a++]*-u,n.bezierCurveTo(m,g,x,_,w,b),M=S[S.length-1])for(v=M.x,y=M.y,o=1,s=this.divisions;o<=s;o++)E=o/s,p.Shape.Utils.b3(E,v,x,w,m),p.Shape.Utils.b3(E,y,_,b,g)}return{offset:T.ha*i,path:n}}}},p.FontUtils.generateShapes=function(e,t){var i=void 0!==(t=t||{}).size?t.size:100,r=void 0!==t.curveSegments?t.curveSegments:4,n=void 0!==t.font?t.font:"helvetiker",a=void 0!==t.weight?t.weight:"normal",o=void 0!==t.style?t.style:"normal";p.FontUtils.size=i,p.FontUtils.divisions=r,p.FontUtils.face=n,p.FontUtils.weight=a,p.FontUtils.style=o;for(var s=p.FontUtils.drawText(e).paths,l=[],h=0,c=s.length;h<c;h++)Array.prototype.push.apply(l,s[h].toShapes());return l},r=p.FontUtils,n=function(e){for(var t=e.length,i=0,r=t-1,n=0;n<t;r=n++)i+=e[r].x*e[n].y-e[n].x*e[r].y;return.5*i},a=function(e,t,i,r,n,a){var o,s,l,h,c,u,d,p,f,m,g,v,y,x,_;if(s=e[a[t]].x,l=e[a[t]].y,h=e[a[i]].x,c=e[a[i]].y,u=e[a[r]].x,1e-10>(h-s)*((d=e[a[r]].y)-l)-(c-l)*(u-s))return!1;for(m=u-h,g=d-c,v=s-u,y=l-d,x=h-s,_=c-l,o=0;o<n;o++)if(o!==t&&o!==i&&o!==r&&(p=e[a[o]].x,m*((f=e[a[o]].y)-c)-g*(p-h)>=0&&v*(f-d)-y*(p-u)>=0&&x*(f-l)-_*(p-s)>=0))return!1;return!0},r.Triangulate=function(e,t){var i=e.length;if(i<3)return null;var r,o,s,l=[],h=[],c=[];if(n(e)>0)for(o=0;o<i;o++)h[o]=o;else for(o=0;o<i;o++)h[o]=i-1-o;var u=i,d=2*u;for(o=u-1;u>2;){if(d--<=0)return console.log("Warning, unable to triangulate polygon!"),t?c:l;if(u<=(r=o)&&(r=0),u<=(o=r+1)&&(o=0),u<=(s=o+1)&&(s=0),a(e,r,o,s,u,h)){var p,f,m,g,v;for(p=h[r],f=h[o],m=h[s],l.push([e[p],e[f],e[m]]),c.push([h[r],h[o],h[s]]),g=o,v=o+1;v<u;g++,v++)h[g]=h[v];d=2*--u}}return t?c:l},r.Triangulate.area=n,d._typeface_js={faces:p.FontUtils.faces,loadFace:p.FontUtils.loadFace},p.Curve=function(){},p.Curve.prototype.getPoint=function(e){return console.log("Warning, getPoint() not implemented!"),null},p.Curve.prototype.getPointAt=function(e){var t=this.getUtoTmapping(e);return this.getPoint(t)},p.Curve.prototype.getPoints=function(e){e||(e=5);var t,i=[];for(t=0;t<=e;t++)i.push(this.getPoint(t/e));return i},p.Curve.prototype.getSpacedPoints=function(e){e||(e=5);var t,i=[];for(t=0;t<=e;t++)i.push(this.getPointAt(t/e));return i},p.Curve.prototype.getLength=function(){var e=this.getLengths();return e[e.length-1]},p.Curve.prototype.getLengths=function(e){if(e||(e=this.__arcLengthDivisions?this.__arcLengthDivisions:200),this.cacheArcLengths&&this.cacheArcLengths.length==e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var t,i,r=[],n=this.getPoint(0),a=0;for(r.push(0),i=1;i<=e;i++)a+=(t=this.getPoint(i/e)).distanceTo(n),r.push(a),n=t;return this.cacheArcLengths=r,r},p.Curve.prototype.updateArcLengths=function(){this.needsUpdate=!0,this.getLengths()},p.Curve.prototype.getUtoTmapping=function(e,t){var i,r=this.getLengths(),n=0,a=r.length;i=t||e*r[a-1];for(var o,s=0,l=a-1;s<=l;)if((o=r[n=Math.floor(s+(l-s)/2)]-i)<0)s=n+1;else{if(!(o>0)){l=n;break}l=n-1}if(r[n=l]==i)return n/(a-1);var h=r[n];return(n+(i-h)/(r[n+1]-h))/(a-1)},p.Curve.prototype.getTangent=function(e){var t=e-1e-4,i=e+1e-4;t<0&&(t=0),i>1&&(i=1);var r=this.getPoint(t);return this.getPoint(i).clone().sub(r).normalize()},p.Curve.prototype.getTangentAt=function(e){var t=this.getUtoTmapping(e);return this.getTangent(t)},p.LineCurve=function(e,t){this.v1=e,this.v2=t},p.LineCurve.prototype=Object.create(p.Curve.prototype),p.LineCurve.prototype.getPoint=function(e){var t=this.v2.clone().sub(this.v1);return t.multiplyScalar(e).add(this.v1),t},p.LineCurve.prototype.getPointAt=function(e){return this.getPoint(e)},p.LineCurve.prototype.getTangent=function(e){return this.v2.clone().sub(this.v1).normalize()},p.QuadraticBezierCurve=function(e,t,i){this.v0=e,this.v1=t,this.v2=i},p.QuadraticBezierCurve.prototype=Object.create(p.Curve.prototype),p.QuadraticBezierCurve.prototype.getPoint=function(e){var t,i;return t=p.Shape.Utils.b2(e,this.v0.x,this.v1.x,this.v2.x),i=p.Shape.Utils.b2(e,this.v0.y,this.v1.y,this.v2.y),new p.Vector2(t,i)},p.QuadraticBezierCurve.prototype.getTangent=function(e){var t,i;t=p.Curve.Utils.tangentQuadraticBezier(e,this.v0.x,this.v1.x,this.v2.x),i=p.Curve.Utils.tangentQuadraticBezier(e,this.v0.y,this.v1.y,this.v2.y);var r=new p.Vector2(t,i);return r.normalize(),r},p.CubicBezierCurve=function(e,t,i,r){this.v0=e,this.v1=t,this.v2=i,this.v3=r},p.CubicBezierCurve.prototype=Object.create(p.Curve.prototype),p.CubicBezierCurve.prototype.getPoint=function(e){var t,i;return t=p.Shape.Utils.b3(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x),i=p.Shape.Utils.b3(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y),new p.Vector2(t,i)},p.CubicBezierCurve.prototype.getTangent=function(e){var t,i;t=p.Curve.Utils.tangentCubicBezier(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x),i=p.Curve.Utils.tangentCubicBezier(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y);var r=new p.Vector2(t,i);return r.normalize(),r},p.SplineCurve=function(e){this.points=void 0==e?[]:e},p.SplineCurve.prototype=Object.create(p.Curve.prototype),p.SplineCurve.prototype.getPoint=function(e){var t,i,r,n=new p.Vector2,a=[],o=this.points;return r=(t=(o.length-1)*e)-(i=Math.floor(t)),a[0]=0==i?i:i-1,a[1]=i,a[2]=i>o.length-2?o.length-1:i+1,a[3]=i>o.length-3?o.length-1:i+2,n.x=p.Curve.Utils.interpolate(o[a[0]].x,o[a[1]].x,o[a[2]].x,o[a[3]].x,r),n.y=p.Curve.Utils.interpolate(o[a[0]].y,o[a[1]].y,o[a[2]].y,o[a[3]].y,r),n},p.EllipseCurve=function(e,t,i,r,n,a,o){this.aX=e,this.aY=t,this.xRadius=i,this.yRadius=r,this.aStartAngle=n,this.aEndAngle=a,this.aClockwise=o},p.EllipseCurve.prototype=Object.create(p.Curve.prototype),p.EllipseCurve.prototype.getPoint=function(e){var t=this.aEndAngle-this.aStartAngle;this.aClockwise||(e=1-e);var i=this.aStartAngle+e*t,r=this.aX+this.xRadius*Math.cos(i),n=this.aY+this.yRadius*Math.sin(i);return new p.Vector2(r,n)},p.ArcCurve=function(e,t,i,r,n,a){p.EllipseCurve.call(this,e,t,i,i,r,n,a)},p.ArcCurve.prototype=Object.create(p.EllipseCurve.prototype),p.Curve.Utils={tangentQuadraticBezier:function(e,t,i,r){return 2*(1-e)*(i-t)+2*e*(r-i)},tangentCubicBezier:function(e,t,i,r,n){return-3*t*(1-e)*(1-e)+3*i*(1-e)*(1-e)-6*e*i*(1-e)+6*e*r*(1-e)-3*e*e*r+3*e*e*n},tangentSpline:function(e,t,i,r,n){return 6*e*e-6*e+(3*e*e-4*e+1)+(-6*e*e+6*e)+(3*e*e-2*e)},interpolate:function(e,t,i,r,n){var a=.5*(i-e),o=.5*(r-t),s=n*n;return(2*t-2*i+a+o)*(n*s)+(-3*t+3*i-2*a-o)*s+a*n+t}},p.Curve.create=function(e,t){return e.prototype=Object.create(p.Curve.prototype),e.prototype.getPoint=t,e},p.LineCurve3=p.Curve.create(function(e,t){this.v1=e,this.v2=t},function(e){var t=new p.Vector3;return t.subVectors(this.v2,this.v1),t.multiplyScalar(e),t.add(this.v1),t}),p.QuadraticBezierCurve3=p.Curve.create(function(e,t,i){this.v0=e,this.v1=t,this.v2=i},function(e){var t,i,r;return t=p.Shape.Utils.b2(e,this.v0.x,this.v1.x,this.v2.x),i=p.Shape.Utils.b2(e,this.v0.y,this.v1.y,this.v2.y),r=p.Shape.Utils.b2(e,this.v0.z,this.v1.z,this.v2.z),new p.Vector3(t,i,r)}),p.CubicBezierCurve3=p.Curve.create(function(e,t,i,r){this.v0=e,this.v1=t,this.v2=i,this.v3=r},function(e){var t,i,r;return t=p.Shape.Utils.b3(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x),i=p.Shape.Utils.b3(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y),r=p.Shape.Utils.b3(e,this.v0.z,this.v1.z,this.v2.z,this.v3.z),new p.Vector3(t,i,r)}),p.SplineCurve3=p.Curve.create(function(e){this.points=void 0==e?[]:e},function(e){var t,i,r,n=new p.Vector3,a=[],o=this.points;r=(t=(o.length-1)*e)-(i=Math.floor(t)),a[0]=0==i?i:i-1,a[1]=i,a[2]=i>o.length-2?o.length-1:i+1,a[3]=i>o.length-3?o.length-1:i+2;var s=o[a[0]],l=o[a[1]],h=o[a[2]],c=o[a[3]];return n.x=p.Curve.Utils.interpolate(s.x,l.x,h.x,c.x,r),n.y=p.Curve.Utils.interpolate(s.y,l.y,h.y,c.y,r),n.z=p.Curve.Utils.interpolate(s.z,l.z,h.z,c.z,r),n}),p.ClosedSplineCurve3=p.Curve.create(function(e){this.points=void 0==e?[]:e},function(e){var t,i,r,n=new p.Vector3,a=[],o=this.points;return r=(t=(o.length-0)*e)-(i=Math.floor(t)),i+=i>0?0:(Math.floor(Math.abs(i)/o.length)+1)*o.length,a[0]=(i-1)%o.length,a[1]=i%o.length,a[2]=(i+1)%o.length,a[3]=(i+2)%o.length,n.x=p.Curve.Utils.interpolate(o[a[0]].x,o[a[1]].x,o[a[2]].x,o[a[3]].x,r),n.y=p.Curve.Utils.interpolate(o[a[0]].y,o[a[1]].y,o[a[2]].y,o[a[3]].y,r),n.z=p.Curve.Utils.interpolate(o[a[0]].z,o[a[1]].z,o[a[2]].z,o[a[3]].z,r),n}),p.CurvePath=function(){this.curves=[],this.bends=[],this.autoClose=!1},p.CurvePath.prototype=Object.create(p.Curve.prototype),p.CurvePath.prototype.add=function(e){this.curves.push(e)},p.CurvePath.prototype.checkConnection=function(){},p.CurvePath.prototype.closePath=function(){var e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new p.LineCurve(t,e))},p.CurvePath.prototype.getPoint=function(e){for(var t,i=e*this.getLength(),r=this.getCurveLengths(),n=0;n<r.length;){if(r[n]>=i){var a=1-(r[n]-i)/(t=this.curves[n]).getLength();return t.getPointAt(a)}n++}return null},p.CurvePath.prototype.getLength=function(){var e=this.getCurveLengths();return e[e.length-1]},p.CurvePath.prototype.getCurveLengths=function(){if(this.cacheLengths&&this.cacheLengths.length==this.curves.length)return this.cacheLengths;var e,t=[],i=0,r=this.curves.length;for(e=0;e<r;e++)i+=this.curves[e].getLength(),t.push(i);return this.cacheLengths=t,t},p.CurvePath.prototype.getBoundingBox=function(){var e,t,i,r,n,a,o,s,l,h,c=this.getPoints();e=t=Number.NEGATIVE_INFINITY,r=n=Number.POSITIVE_INFINITY;var u=c[0]instanceof p.Vector3;for(h=u?new p.Vector3:new p.Vector2,s=0,l=c.length;s<l;s++)(o=c[s]).x>e?e=o.x:o.x<r&&(r=o.x),o.y>t?t=o.y:o.y<n&&(n=o.y),u&&(o.z>i?i=o.z:o.z<a&&(a=o.z)),h.add(o);var d={minX:r,minY:n,maxX:e,maxY:t,centroid:h.divideScalar(l)};return u&&(d.maxZ=i,d.minZ=a),d},p.CurvePath.prototype.createPointsGeometry=function(e){var t=this.getPoints(e,!0);return this.createGeometry(t)},p.CurvePath.prototype.createSpacedPointsGeometry=function(e){var t=this.getSpacedPoints(e,!0);return this.createGeometry(t)},p.CurvePath.prototype.createGeometry=function(e){for(var t=new p.Geometry,i=0;i<e.length;i++)t.vertices.push(new p.Vector3(e[i].x,e[i].y,e[i].z||0));return t},p.CurvePath.prototype.addWrapPath=function(e){this.bends.push(e)},p.CurvePath.prototype.getTransformedPoints=function(e,t){var i,r,n=this.getPoints(e);for(t||(t=this.bends),i=0,r=t.length;i<r;i++)n=this.getWrapPoints(n,t[i]);return n},p.CurvePath.prototype.getTransformedSpacedPoints=function(e,t){var i,r,n=this.getSpacedPoints(e);for(t||(t=this.bends),i=0,r=t.length;i<r;i++)n=this.getWrapPoints(n,t[i]);return n},p.CurvePath.prototype.getWrapPoints=function(e,t){var i,r,n,a,o,s,l=this.getBoundingBox();for(i=0,r=e.length;i<r;i++){a=(n=e[i]).x,o=n.y,s=a/l.maxX,s=t.getUtoTmapping(s,a);var h=t.getPoint(s),c=t.getNormalVector(s).multiplyScalar(o);n.x=h.x+c.x,n.y=h.y+c.y}return e},p.Gyroscope=function(){p.Object3D.call(this)},p.Gyroscope.prototype=Object.create(p.Object3D.prototype),p.Gyroscope.prototype.updateMatrixWorld=function(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent?(this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorld.decompose(this.translationWorld,this.rotationWorld,this.scaleWorld),this.matrix.decompose(this.translationObject,this.rotationObject,this.scaleObject),this.matrixWorld.compose(this.translationWorld,this.rotationObject,this.scaleWorld)):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);for(var t=0,i=this.children.length;t<i;t++)this.children[t].updateMatrixWorld(e)},p.Gyroscope.prototype.translationWorld=new p.Vector3,p.Gyroscope.prototype.translationObject=new p.Vector3,p.Gyroscope.prototype.rotationWorld=new p.Quaternion,p.Gyroscope.prototype.rotationObject=new p.Quaternion,p.Gyroscope.prototype.scaleWorld=new p.Vector3,p.Gyroscope.prototype.scaleObject=new p.Vector3,p.Path=function(e){p.CurvePath.call(this),this.actions=[],e&&this.fromPoints(e)},p.Path.prototype=Object.create(p.CurvePath.prototype),p.PathActions={MOVE_TO:"moveTo",LINE_TO:"lineTo",QUADRATIC_CURVE_TO:"quadraticCurveTo",BEZIER_CURVE_TO:"bezierCurveTo",CSPLINE_THRU:"splineThru",ARC:"arc",ELLIPSE:"ellipse"},p.Path.prototype.fromPoints=function(e){this.moveTo(e[0].x,e[0].y);for(var t=1,i=e.length;t<i;t++)this.lineTo(e[t].x,e[t].y)},p.Path.prototype.moveTo=function(e,t){var i=Array.prototype.slice.call(arguments);this.actions.push({action:p.PathActions.MOVE_TO,args:i})},p.Path.prototype.lineTo=function(e,t){var i=Array.prototype.slice.call(arguments),r=this.actions[this.actions.length-1].args,n=r[r.length-2],a=r[r.length-1],o=new p.LineCurve(new p.Vector2(n,a),new p.Vector2(e,t));this.curves.push(o),this.actions.push({action:p.PathActions.LINE_TO,args:i})},p.Path.prototype.quadraticCurveTo=function(e,t,i,r){var n=Array.prototype.slice.call(arguments),a=this.actions[this.actions.length-1].args,o=a[a.length-2],s=a[a.length-1],l=new p.QuadraticBezierCurve(new p.Vector2(o,s),new p.Vector2(e,t),new p.Vector2(i,r));this.curves.push(l),this.actions.push({action:p.PathActions.QUADRATIC_CURVE_TO,args:n})},p.Path.prototype.bezierCurveTo=function(e,t,i,r,n,a){var o=Array.prototype.slice.call(arguments),s=this.actions[this.actions.length-1].args,l=s[s.length-2],h=s[s.length-1],c=new p.CubicBezierCurve(new p.Vector2(l,h),new p.Vector2(e,t),new p.Vector2(i,r),new p.Vector2(n,a));this.curves.push(c),this.actions.push({action:p.PathActions.BEZIER_CURVE_TO,args:o})},p.Path.prototype.splineThru=function(e){var t=Array.prototype.slice.call(arguments),i=this.actions[this.actions.length-1].args,r=i[i.length-2],n=i[i.length-1],a=[new p.Vector2(r,n)];Array.prototype.push.apply(a,e);var o=new p.SplineCurve(a);this.curves.push(o),this.actions.push({action:p.PathActions.CSPLINE_THRU,args:t})},p.Path.prototype.arc=function(e,t,i,r,n,a){var o=this.actions[this.actions.length-1].args,s=o[o.length-2],l=o[o.length-1];this.absarc(e+s,t+l,i,r,n,a)},p.Path.prototype.absarc=function(e,t,i,r,n,a){this.absellipse(e,t,i,i,r,n,a)},p.Path.prototype.ellipse=function(e,t,i,r,n,a,o){var s=this.actions[this.actions.length-1].args,l=s[s.length-2],h=s[s.length-1];this.absellipse(e+l,t+h,i,r,n,a,o)},p.Path.prototype.absellipse=function(e,t,i,r,n,a,o){var s=Array.prototype.slice.call(arguments),l=new p.EllipseCurve(e,t,i,r,n,a,o);this.curves.push(l);var h=l.getPoint(o?1:0);s.push(h.x),s.push(h.y),this.actions.push({action:p.PathActions.ELLIPSE,args:s})},p.Path.prototype.getSpacedPoints=function(e,t){e||(e=40);for(var i=[],r=0;r<e;r++)i.push(this.getPoint(r/e));return i},p.Path.prototype.getPoints=function(e,t){if(this.useSpacedPoints)return console.log("tata"),this.getSpacedPoints(e,t);e=e||12;var i,r,n,a,o,s,l,h,c,u,d,f,m,g,v,y,x,_,w=[];for(i=0,r=this.actions.length;i<r;i++)switch(a=(n=this.actions[i]).action,o=n.args,a){case p.PathActions.MOVE_TO:case p.PathActions.LINE_TO:w.push(new p.Vector2(o[0],o[1]));break;case p.PathActions.QUADRATIC_CURVE_TO:for(s=o[2],l=o[3],u=o[0],d=o[1],w.length>0?(f=(g=w[w.length-1]).x,m=g.y):(f=(g=this.actions[i-1].args)[g.length-2],m=g[g.length-1]),v=1;v<=e;v++)y=v/e,x=p.Shape.Utils.b2(y,f,u,s),_=p.Shape.Utils.b2(y,m,d,l),w.push(new p.Vector2(x,_));break;case p.PathActions.BEZIER_CURVE_TO:for(s=o[4],l=o[5],u=o[0],d=o[1],h=o[2],c=o[3],w.length>0?(f=(g=w[w.length-1]).x,m=g.y):(f=(g=this.actions[i-1].args)[g.length-2],m=g[g.length-1]),v=1;v<=e;v++)y=v/e,x=p.Shape.Utils.b3(y,f,u,h,s),_=p.Shape.Utils.b3(y,m,d,c,l),w.push(new p.Vector2(x,_));break;case p.PathActions.CSPLINE_THRU:g=this.actions[i-1].args;var b=[new p.Vector2(g[g.length-2],g[g.length-1])],M=e*o[0].length;b=b.concat(o[0]);var S=new p.SplineCurve(b);for(v=1;v<=M;v++)w.push(S.getPointAt(v/M));break;case p.PathActions.ARC:var T=o[0],E=o[1],A=o[2],C=o[3],L=o[4],R=!!o[5],P=L-C,D=2*e;for(v=1;v<=D;v++)y=v/D,R||(y=1-y),F=C+y*P,x=T+A*Math.cos(F),_=E+A*Math.sin(F),w.push(new p.Vector2(x,_));break;case p.PathActions.ELLIPSE:T=o[0],E=o[1];var F,z=o[2],I=o[3];C=o[4],L=o[5],R=!!o[6],P=L-C,D=2*e;for(v=1;v<=D;v++)y=v/D,R||(y=1-y),F=C+y*P,x=T+z*Math.cos(F),_=E+I*Math.sin(F),w.push(new p.Vector2(x,_))}var N=w[w.length-1];return Math.abs(N.x-w[0].x)<1e-10&&Math.abs(N.y-w[0].y)<1e-10&&w.splice(w.length-1,1),t&&w.push(w[0]),w},p.Path.prototype.toShapes=function(){var e,t,i,r,n,a=[],o=new p.Path;for(e=0,t=this.actions.length;e<t;e++)n=(i=this.actions[e]).args,(r=i.action)==p.PathActions.MOVE_TO&&0!=o.actions.length&&(a.push(o),o=new p.Path),o[r].apply(o,n);if(0!=o.actions.length&&a.push(o),0==a.length)return[];var s,l,h=[],c=!p.Shape.Utils.isClockWise(a[0].getPoints());if(1==a.length)return s=a[0],(l=new p.Shape).actions=s.actions,l.curves=s.curves,h.push(l),h;if(c)for(l=new p.Shape,e=0,t=a.length;e<t;e++)s=a[e],p.Shape.Utils.isClockWise(s.getPoints())?(l.actions=s.actions,l.curves=s.curves,h.push(l),l=new p.Shape):l.holes.push(s);else{for(e=0,t=a.length;e<t;e++)s=a[e],p.Shape.Utils.isClockWise(s.getPoints())?(l&&h.push(l),(l=new p.Shape).actions=s.actions,l.curves=s.curves):l.holes.push(s);h.push(l)}return h},p.Shape=function(){p.Path.apply(this,arguments),this.holes=[]},p.Shape.prototype=Object.create(p.Path.prototype),p.Shape.prototype.extrude=function(e){return new p.ExtrudeGeometry(this,e)},p.Shape.prototype.makeGeometry=function(e){return new p.ShapeGeometry(this,e)},p.Shape.prototype.getPointsHoles=function(e){var t,i=this.holes.length,r=[];for(t=0;t<i;t++)r[t]=this.holes[t].getTransformedPoints(e,this.bends);return r},p.Shape.prototype.getSpacedPointsHoles=function(e){var t,i=this.holes.length,r=[];for(t=0;t<i;t++)r[t]=this.holes[t].getTransformedSpacedPoints(e,this.bends);return r},p.Shape.prototype.extractAllPoints=function(e){return{shape:this.getTransformedPoints(e),holes:this.getPointsHoles(e)}},p.Shape.prototype.extractPoints=function(e){return this.useSpacedPoints?this.extractAllSpacedPoints(e):this.extractAllPoints(e)},p.Shape.prototype.extractAllSpacedPoints=function(e){return{shape:this.getTransformedSpacedPoints(e),holes:this.getSpacedPointsHoles(e)}},p.Shape.Utils={removeHoles:function(e,t){var i,r,n,a,o,s,l,h,c,u,d,f,m,g,v,y,x=e.concat(),_=x.concat(),w=[];for(o=0;o<t.length;o++){for(l=t[o],Array.prototype.push.apply(_,l),h=Number.POSITIVE_INFINITY,s=0;s<l.length;s++){d=l[s];var b=[];for(u=0;u<x.length;u++)f=x[u],c=d.distanceToSquared(f),b.push(c),c<h&&(h=c,n=s,a=u)}i=a-1>=0?a-1:x.length-1,r=n-1>=0?n-1:l.length-1;var M=[l[n],x[a],x[i]],S=p.FontUtils.Triangulate.area(M),T=[l[n],l[r],x[a]],E=p.FontUtils.Triangulate.area(T),A=a,C=n;n+=-1,(a+=1)<0&&(a+=x.length),a%=x.length,n<0&&(n+=l.length),n%=l.length,i=a-1>=0?a-1:x.length-1,r=n-1>=0?n-1:l.length-1,M=[l[n],x[a],x[i]];var L=p.FontUtils.Triangulate.area(M);T=[l[n],l[r],x[a]],S+E>L+p.FontUtils.Triangulate.area(T)&&(n=C,(a=A)<0&&(a+=x.length),a%=x.length,n<0&&(n+=l.length),n%=l.length,i=a-1>=0?a-1:x.length-1,r=n-1>=0?n-1:l.length-1),m=x.slice(0,a),g=x.slice(a),v=l.slice(n),y=l.slice(0,n);var R=[l[n],x[a],x[i]],P=[l[n],l[r],x[a]];w.push(R),w.push(P),x=m.concat(v).concat(y).concat(g)}return{shape:x,isolatedPts:w,allpoints:_}},triangulateShape:function(e,t){var i,r,n,a,o,s,l=p.Shape.Utils.removeHoles(e,t),h=l.shape,c=l.allpoints,u=l.isolatedPts,d=p.FontUtils.Triangulate(h,!1),f={};for(i=0,r=c.length;i<r;i++)void 0!==f[o=c[i].x+":"+c[i].y]&&console.log("Duplicate point",o),f[o]=i;for(i=0,r=d.length;i<r;i++)for(a=d[i],n=0;n<3;n++)void 0!==(s=f[o=a[n].x+":"+a[n].y])&&(a[n]=s);for(i=0,r=u.length;i<r;i++)for(a=u[i],n=0;n<3;n++)void 0!==(s=f[o=a[n].x+":"+a[n].y])&&(a[n]=s);return d.concat(u)},isClockWise:function(e){return p.FontUtils.Triangulate.area(e)<0},b2p0:function(e,t){var i=1-e;return i*i*t},b2p1:function(e,t){return 2*(1-e)*e*t},b2p2:function(e,t){return e*e*t},b2:function(e,t,i,r){return this.b2p0(e,t)+this.b2p1(e,i)+this.b2p2(e,r)},b3p0:function(e,t){var i=1-e;return i*i*i*t},b3p1:function(e,t){var i=1-e;return 3*i*i*e*t},b3p2:function(e,t){return 3*(1-e)*e*e*t},b3p3:function(e,t){return e*e*e*t},b3:function(e,t,i,r,n){return this.b3p0(e,t)+this.b3p1(e,i)+this.b3p2(e,r)+this.b3p3(e,n)}},p.AnimationHandler=(o=[],s={},l={update:function(e){for(var t=0;t<o.length;t++)o[t].update(e)},addToUpdate:function(e){-1===o.indexOf(e)&&o.push(e)},removeFromUpdate:function(e){var t=o.indexOf(e);-1!==t&&o.splice(t,1)},add:function(e){void 0!==s[e.name]&&console.log("THREE.AnimationHandler.add: Warning! "+e.name+" already exists in library. Overwriting."),s[e.name]=e,c(e)},get:function(e){if("string"==typeof e)return s[e]?s[e]:(console.log("THREE.AnimationHandler.get: Couldn't find animation "+e),null)},parse:function(e){var t=[];if(e instanceof p.SkinnedMesh)for(var i=0;i<e.bones.length;i++)t.push(e.bones[i]);else h(e,t);return t}},h=function(e,t){t.push(e);for(var i=0;i<e.children.length;i++)h(e.children[i],t)},c=function(e){if(!0!==e.initialized){for(var t=0;t<e.hierarchy.length;t++){for(var i=0;i<e.hierarchy[t].keys.length;i++)if(e.hierarchy[t].keys[i].time<0&&(e.hierarchy[t].keys[i].time=0),void 0!==e.hierarchy[t].keys[i].rot&&!(e.hierarchy[t].keys[i].rot instanceof p.Quaternion)){var r=e.hierarchy[t].keys[i].rot;e.hierarchy[t].keys[i].rot=new p.Quaternion(r[0],r[1],r[2],r[3])}if(e.hierarchy[t].keys.length&&void 0!==e.hierarchy[t].keys[0].morphTargets){var n={};for(i=0;i<e.hierarchy[t].keys.length;i++)for(var a=0;a<e.hierarchy[t].keys[i].morphTargets.length;a++){n[s=e.hierarchy[t].keys[i].morphTargets[a]]=-1}e.hierarchy[t].usedMorphTargets=n;for(i=0;i<e.hierarchy[t].keys.length;i++){var o={};for(var s in n){for(a=0;a<e.hierarchy[t].keys[i].morphTargets.length;a++)if(e.hierarchy[t].keys[i].morphTargets[a]===s){o[s]=e.hierarchy[t].keys[i].morphTargetsInfluences[a];break}a===e.hierarchy[t].keys[i].morphTargets.length&&(o[s]=0)}e.hierarchy[t].keys[i].morphTargetsInfluences=o}}for(i=1;i<e.hierarchy[t].keys.length;i++)e.hierarchy[t].keys[i].time===e.hierarchy[t].keys[i-1].time&&(e.hierarchy[t].keys.splice(i,1),i--);for(i=0;i<e.hierarchy[t].keys.length;i++)e.hierarchy[t].keys[i].index=i}var l=parseInt(e.length*e.fps,10);e.JIT={},e.JIT.hierarchy=[];for(t=0;t<e.hierarchy.length;t++)e.JIT.hierarchy.push(new Array(l));e.initialized=!0}},l.LINEAR=0,l.CATMULLROM=1,l.CATMULLROM_FORWARD=2,l),p.Animation=function(e,t,i){this.root=e,this.data=p.AnimationHandler.get(t),this.hierarchy=p.AnimationHandler.parse(e),this.currentTime=0,this.timeScale=1,this.isPlaying=!1,this.isPaused=!0,this.loop=!0,this.interpolationType=void 0!==i?i:p.AnimationHandler.LINEAR,this.points=[],this.target=new p.Vector3},p.Animation.prototype.play=function(e,t){if(!1===this.isPlaying){this.isPlaying=!0,this.loop=void 0===e||e,this.currentTime=void 0!==t?t:0;var i,r,n=this.hierarchy.length;for(i=0;i<n;i++){r=this.hierarchy[i],this.interpolationType!==p.AnimationHandler.CATMULLROM_FORWARD&&(r.useQuaternion=!0),r.matrixAutoUpdate=!0,void 0===r.animationCache&&(r.animationCache={},r.animationCache.prevKey={pos:0,rot:0,scl:0},r.animationCache.nextKey={pos:0,rot:0,scl:0},r.animationCache.originalMatrix=r instanceof p.Bone?r.skinMatrix:r.matrix);var a=r.animationCache.prevKey,o=r.animationCache.nextKey;a.pos=this.data.hierarchy[i].keys[0],a.rot=this.data.hierarchy[i].keys[0],a.scl=this.data.hierarchy[i].keys[0],o.pos=this.getNextKeyWith("pos",i,1),o.rot=this.getNextKeyWith("rot",i,1),o.scl=this.getNextKeyWith("scl",i,1)}this.update(0)}this.isPaused=!1,p.AnimationHandler.addToUpdate(this)},p.Animation.prototype.pause=function(){!0===this.isPaused?p.AnimationHandler.addToUpdate(this):p.AnimationHandler.removeFromUpdate(this),this.isPaused=!this.isPaused},p.Animation.prototype.stop=function(){this.isPlaying=!1,this.isPaused=!1,p.AnimationHandler.removeFromUpdate(this)},p.Animation.prototype.update=function(e){if(!1!==this.isPlaying){var t,i,r,n,a,o,s,l,h,c,u,d,f,m,g=["pos","rot","scl"];this.data.JIT.hierarchy;this.currentTime+=e*this.timeScale,u=this.currentTime,c=this.currentTime=this.currentTime%this.data.length,parseInt(Math.min(c*this.data.fps,this.data.length*this.data.fps),10);for(var v=0,y=this.hierarchy.length;v<y;v++){h=(l=this.hierarchy[v]).animationCache;for(var x=0;x<3;x++){if(t=g[x],o=h.prevKey[t],(s=h.nextKey[t]).time<=u){if(c<u){if(!this.loop)return void this.stop();for(o=this.data.hierarchy[v].keys[0],s=this.getNextKeyWith(t,v,1);s.time<c;)o=s,s=this.getNextKeyWith(t,v,s.index+1)}else do{o=s,s=this.getNextKeyWith(t,v,s.index+1)}while(s.time<c);h.prevKey[t]=o,h.nextKey[t]=s}l.matrixAutoUpdate=!0,l.matrixWorldNeedsUpdate=!0,i=(c-o.time)/(s.time-o.time),n=o[t],a=s[t],(i<0||i>1)&&(console.log("THREE.Animation.update: Warning! Scale out of bounds:"+i+" on bone "+v),i=i<0?0:1),"pos"===t?(r=l.position,this.interpolationType===p.AnimationHandler.LINEAR?(r.x=n[0]+(a[0]-n[0])*i,r.y=n[1]+(a[1]-n[1])*i,r.z=n[2]+(a[2]-n[2])*i):this.interpolationType!==p.AnimationHandler.CATMULLROM&&this.interpolationType!==p.AnimationHandler.CATMULLROM_FORWARD||(this.points[0]=this.getPrevKeyWith("pos",v,o.index-1).pos,this.points[1]=n,this.points[2]=a,this.points[3]=this.getNextKeyWith("pos",v,s.index+1).pos,i=.33*i+.33,d=this.interpolateCatmullRom(this.points,i),r.x=d[0],r.y=d[1],r.z=d[2],this.interpolationType===p.AnimationHandler.CATMULLROM_FORWARD&&(f=this.interpolateCatmullRom(this.points,1.01*i),this.target.set(f[0],f[1],f[2]),this.target.sub(r),this.target.y=0,this.target.normalize(),m=Math.atan2(this.target.x,this.target.z),l.rotation.set(0,m,0)))):"rot"===t?p.Quaternion.slerp(n,a,l.quaternion,i):"scl"===t&&((r=l.scale).x=n[0]+(a[0]-n[0])*i,r.y=n[1]+(a[1]-n[1])*i,r.z=n[2]+(a[2]-n[2])*i)}}}},p.Animation.prototype.interpolateCatmullRom=function(e,t){var i,r,n,a,o,s,l,h,c,u=[],d=[];return n=(i=(e.length-1)*t)-(r=Math.floor(i)),u[0]=0===r?r:r-1,u[1]=r,u[2]=r>e.length-2?r:r+1,u[3]=r>e.length-3?r:r+2,s=e[u[0]],l=e[u[1]],h=e[u[2]],c=e[u[3]],o=n*(a=n*n),d[0]=this.interpolate(s[0],l[0],h[0],c[0],n,a,o),d[1]=this.interpolate(s[1],l[1],h[1],c[1],n,a,o),d[2]=this.interpolate(s[2],l[2],h[2],c[2],n,a,o),d},p.Animation.prototype.interpolate=function(e,t,i,r,n,a,o){var s=.5*(i-e),l=.5*(r-t);return(2*(t-i)+s+l)*o+(-3*(t-i)-2*s-l)*a+s*n+t},p.Animation.prototype.getNextKeyWith=function(e,t,i){var r=this.data.hierarchy[t].keys;for(this.interpolationType===p.AnimationHandler.CATMULLROM||this.interpolationType===p.AnimationHandler.CATMULLROM_FORWARD?i=i<r.length-1?i:r.length-1:i%=r.length;i<r.length;i++)if(void 0!==r[i][e])return r[i];return this.data.hierarchy[t].keys[0]},p.Animation.prototype.getPrevKeyWith=function(e,t,i){var r=this.data.hierarchy[t].keys;for(i=this.interpolationType===p.AnimationHandler.CATMULLROM||this.interpolationType===p.AnimationHandler.CATMULLROM_FORWARD?i>0?i:0:i>=0?i:i+r.length;i>=0;i--)if(void 0!==r[i][e])return r[i];return this.data.hierarchy[t].keys[r.length-1]},p.KeyFrameAnimation=function(e,t,i){this.root=e,this.data=p.AnimationHandler.get(t),this.hierarchy=p.AnimationHandler.parse(e),this.currentTime=0,this.timeScale=.001,this.isPlaying=!1,this.isPaused=!0,this.loop=!0,this.JITCompile=void 0===i||i;for(var r=0,n=this.hierarchy.length;r<n;r++){var a=this.data.hierarchy[r].keys,o=this.data.hierarchy[r].sids,s=this.hierarchy[r];if(a.length&&o){for(var l=0;l<o.length;l++){var h=o[l],c=this.getNextKeyWith(h,r,0);c&&c.apply(h)}s.matrixAutoUpdate=!1,this.data.hierarchy[r].node.updateMatrix(),s.matrixWorldNeedsUpdate=!0}}},p.KeyFrameAnimation.prototype.play=function(e,t){if(!this.isPlaying){this.isPlaying=!0,this.loop=void 0===e||e,this.currentTime=void 0!==t?t:0,this.startTimeMs=t,this.startTime=1e7,this.endTime=-this.startTime;var i,r,n,a=this.hierarchy.length;for(i=0;i<a;i++){r=this.hierarchy[i],n=this.data.hierarchy[i],r.useQuaternion=!0,void 0===n.animationCache&&(n.animationCache={},n.animationCache.prevKey=null,n.animationCache.nextKey=null,n.animationCache.originalMatrix=r instanceof p.Bone?r.skinMatrix:r.matrix);var o=this.data.hierarchy[i].keys;o.length&&(n.animationCache.prevKey=o[0],n.animationCache.nextKey=o[1],this.startTime=Math.min(o[0].time,this.startTime),this.endTime=Math.max(o[o.length-1].time,this.endTime))}this.update(0)}this.isPaused=!1,p.AnimationHandler.addToUpdate(this)},p.KeyFrameAnimation.prototype.pause=function(){this.isPaused?p.AnimationHandler.addToUpdate(this):p.AnimationHandler.removeFromUpdate(this),this.isPaused=!this.isPaused},p.KeyFrameAnimation.prototype.stop=function(){this.isPlaying=!1,this.isPaused=!1,p.AnimationHandler.removeFromUpdate(this);for(var e=0;e<this.data.hierarchy.length;e++){var t=this.hierarchy[e],i=this.data.hierarchy[e];if(void 0!==i.animationCache){var r=i.animationCache.originalMatrix;t instanceof p.Bone?(r.copy(t.skinMatrix),t.skinMatrix=r):(r.copy(t.matrix),t.matrix=r),delete i.animationCache}}},p.KeyFrameAnimation.prototype.update=function(e){if(this.isPlaying){var t,i,r,n,a,o,s,l,h=this.data.JIT.hierarchy;if(this.currentTime+=e*this.timeScale,s=this.currentTime,(o=this.currentTime=this.currentTime%this.data.length)<this.startTimeMs&&(o=this.currentTime=this.startTimeMs+o),a=parseInt(Math.min(o*this.data.fps,this.data.length*this.data.fps),10),!(l=o<s)||this.loop){if(!(o<this.startTime)){for(d=0,f=this.hierarchy.length;d<f;d++){r=this.hierarchy[d];m=(n=this.data.hierarchy[d]).keys;var c=n.animationCache;if(this.JITCompile&&void 0!==h[d][a])r instanceof p.Bone?(r.skinMatrix=h[d][a],r.matrixWorldNeedsUpdate=!1):(r.matrix=h[d][a],r.matrixWorldNeedsUpdate=!0);else if(m.length){if(this.JITCompile&&c&&(r instanceof p.Bone?r.skinMatrix=c.originalMatrix:r.matrix=c.originalMatrix),t=c.prevKey,i=c.nextKey,t&&i){if(i.time<=s){if(l&&this.loop)for(t=m[0],i=m[1];i.time<o;)i=m[(t=i).index+1];else if(!l)for(var u=m.length-1;i.time<o&&i.index!==u;)i=m[(t=i).index+1];c.prevKey=t,c.nextKey=i}i.time>=o?t.interpolate(i,o):t.interpolate(i,i.time)}this.data.hierarchy[d].node.updateMatrix(),r.matrixWorldNeedsUpdate=!0}}if(this.JITCompile&&void 0===h[0][a]){this.hierarchy[0].updateMatrixWorld(!0);for(d=0;d<this.hierarchy.length;d++)this.hierarchy[d]instanceof p.Bone?h[d][a]=this.hierarchy[d].skinMatrix.clone():h[d][a]=this.hierarchy[d].matrix.clone()}}}else{for(var d=0,f=this.hierarchy.length;d<f;d++){var m=this.data.hierarchy[d].keys,g=this.data.hierarchy[d].sids,v=m.length-1,y=this.hierarchy[d];if(m.length){for(var x=0;x<g.length;x++){var _=g[x],w=this.getPrevKeyWith(_,d,v);w&&w.apply(_)}this.data.hierarchy[d].node.updateMatrix(),y.matrixWorldNeedsUpdate=!0}}this.stop()}}},p.KeyFrameAnimation.prototype.getNextKeyWith=function(e,t,i){var r=this.data.hierarchy[t].keys;for(i%=r.length;i<r.length;i++)if(r[i].hasTarget(e))return r[i];return r[0]},p.KeyFrameAnimation.prototype.getPrevKeyWith=function(e,t,i){var r=this.data.hierarchy[t].keys;for(i=i>=0?i:i+r.length;i>=0;i--)if(r[i].hasTarget(e))return r[i];return r[r.length-1]},p.CubeCamera=function(e,t,i){p.Object3D.call(this);var r=new p.PerspectiveCamera(90,1,e,t);r.up.set(0,-1,0),r.lookAt(new p.Vector3(1,0,0)),this.add(r);var n=new p.PerspectiveCamera(90,1,e,t);n.up.set(0,-1,0),n.lookAt(new p.Vector3(-1,0,0)),this.add(n);var a=new p.PerspectiveCamera(90,1,e,t);a.up.set(0,0,1),a.lookAt(new p.Vector3(0,1,0)),this.add(a);var o=new p.PerspectiveCamera(90,1,e,t);o.up.set(0,0,-1),o.lookAt(new p.Vector3(0,-1,0)),this.add(o);var s=new p.PerspectiveCamera(90,1,e,t);s.up.set(0,-1,0),s.lookAt(new p.Vector3(0,0,1)),this.add(s);var l=new p.PerspectiveCamera(90,1,e,t);l.up.set(0,-1,0),l.lookAt(new p.Vector3(0,0,-1)),this.add(l),this.renderTarget=new p.WebGLRenderTargetCube(i,i,{format:p.RGBFormat,magFilter:p.LinearFilter,minFilter:p.LinearFilter}),this.updateCubeMap=function(e,t){var i=this.renderTarget,h=i.generateMipmaps;i.generateMipmaps=!1,i.activeCubeFace=0,e.render(t,r,i),i.activeCubeFace=1,e.render(t,n,i),i.activeCubeFace=2,e.render(t,a,i),i.activeCubeFace=3,e.render(t,o,i),i.activeCubeFace=4,e.render(t,s,i),i.generateMipmaps=h,i.activeCubeFace=5,e.render(t,l,i)}},p.CubeCamera.prototype=Object.create(p.Object3D.prototype),p.CombinedCamera=function(e,t,i,r,n,a,o){p.Camera.call(this),this.fov=i,this.left=-e/2,this.right=e/2,this.top=t/2,this.bottom=-t/2,this.cameraO=new p.OrthographicCamera(e/-2,e/2,t/2,t/-2,a,o),this.cameraP=new p.PerspectiveCamera(i,e/t,r,n),this.zoom=1,this.toPerspective()},p.CombinedCamera.prototype=Object.create(p.Camera.prototype),p.CombinedCamera.prototype.toPerspective=function(){this.near=this.cameraP.near,this.far=this.cameraP.far,this.cameraP.fov=this.fov/this.zoom,this.cameraP.updateProjectionMatrix(),this.projectionMatrix=this.cameraP.projectionMatrix,this.inPerspectiveMode=!0,this.inOrthographicMode=!1},p.CombinedCamera.prototype.toOrthographic=function(){var e=this.fov,t=this.cameraP.aspect,i=(this.cameraP.near+this.cameraP.far)/2,r=Math.tan(e/2)*i,n=2*r*t/2;r/=this.zoom,n/=this.zoom,this.cameraO.left=-n,this.cameraO.right=n,this.cameraO.top=r,this.cameraO.bottom=-r,this.cameraO.updateProjectionMatrix(),this.near=this.cameraO.near,this.far=this.cameraO.far,this.projectionMatrix=this.cameraO.projectionMatrix,this.inPerspectiveMode=!1,this.inOrthographicMode=!0},p.CombinedCamera.prototype.setSize=function(e,t){this.cameraP.aspect=e/t,this.left=-e/2,this.right=e/2,this.top=t/2,this.bottom=-t/2},p.CombinedCamera.prototype.setFov=function(e){this.fov=e,this.inPerspectiveMode?this.toPerspective():this.toOrthographic()},p.CombinedCamera.prototype.updateProjectionMatrix=function(){this.inPerspectiveMode?this.toPerspective():(this.toPerspective(),this.toOrthographic())},p.CombinedCamera.prototype.setLens=function(e,t){void 0===t&&(t=24);var i=2*p.Math.radToDeg(Math.atan(t/(2*e)));return this.setFov(i),i},p.CombinedCamera.prototype.setZoom=function(e){this.zoom=e,this.inPerspectiveMode?this.toPerspective():this.toOrthographic()},p.CombinedCamera.prototype.toFrontView=function(){this.rotation.x=0,this.rotation.y=0,this.rotation.z=0,this.rotationAutoUpdate=!1},p.CombinedCamera.prototype.toBackView=function(){this.rotation.x=0,this.rotation.y=Math.PI,this.rotation.z=0,this.rotationAutoUpdate=!1},p.CombinedCamera.prototype.toLeftView=function(){this.rotation.x=0,this.rotation.y=-Math.PI/2,this.rotation.z=0,this.rotationAutoUpdate=!1},p.CombinedCamera.prototype.toRightView=function(){this.rotation.x=0,this.rotation.y=Math.PI/2,this.rotation.z=0,this.rotationAutoUpdate=!1},p.CombinedCamera.prototype.toTopView=function(){this.rotation.x=-Math.PI/2,this.rotation.y=0,this.rotation.z=0,this.rotationAutoUpdate=!1},p.CombinedCamera.prototype.toBottomView=function(){this.rotation.x=Math.PI/2,this.rotation.y=0,this.rotation.z=0,this.rotationAutoUpdate=!1},p.AsteriskGeometry=function(e,t){p.Geometry.call(this);for(var i=.707*e,r=.707*t,n=[[e,0,0],[t,0,0],[-e,0,0],[-t,0,0],[0,e,0],[0,t,0],[0,-e,0],[0,-t,0],[0,0,e],[0,0,t],[0,0,-e],[0,0,-t],[i,i,0],[r,r,0],[-i,-i,0],[-r,-r,0],[i,-i,0],[r,-r,0],[-i,i,0],[-r,r,0],[i,0,i],[r,0,r],[-i,0,-i],[-r,0,-r],[i,0,-i],[r,0,-r],[-i,0,i],[-r,0,r],[0,i,i],[0,r,r],[0,-i,-i],[0,-r,-r],[0,i,-i],[0,r,-r],[0,-i,i],[0,-r,r]],a=0,o=n.length;a<o;a++){var s=n[a][0],l=n[a][1],h=n[a][2];this.vertices.push(new p.Vector3(s,l,h))}},p.AsteriskGeometry.prototype=Object.create(p.Geometry.prototype),p.CircleGeometry=function(e,t,i,r){p.Geometry.call(this),e=e||50,i=void 0!==i?i:0,r=void 0!==r?r:2*Math.PI,t=void 0!==t?Math.max(3,t):8;var n,a=[],o=new p.Vector3,s=new p.Vector2(.5,.5);for(this.vertices.push(o),a.push(s),n=0;n<=t;n++){var l=new p.Vector3;l.x=e*Math.cos(i+n/t*r),l.y=e*Math.sin(i+n/t*r),this.vertices.push(l),a.push(new p.Vector2((l.x/e+1)/2,-(l.y/e+1)/2+1))}var h=new p.Vector3(0,0,-1);for(n=1;n<=t;n++){var c=n,u=n+1;this.faces.push(new p.Face3(c,u,0,[h,h,h])),this.faceVertexUvs[0].push([a[n],a[n+1],s])}this.computeCentroids(),this.computeFaceNormals(),this.boundingSphere=new p.Sphere(new p.Vector3,e)},p.CircleGeometry.prototype=Object.create(p.Geometry.prototype),p.CubeGeometry=function(e,t,i,r,n,a){p.Geometry.call(this);var o=this;this.width=e,this.height=t,this.depth=i,this.widthSegments=r||1,this.heightSegments=n||1,this.depthSegments=a||1;var s=this.width/2,l=this.height/2,h=this.depth/2;function c(e,t,i,r,n,a,s,l){var h,c,u,d=o.widthSegments,f=o.heightSegments,m=n/2,g=a/2,v=o.vertices.length;"x"===e&&"y"===t||"y"===e&&"x"===t?h="z":"x"===e&&"z"===t||"z"===e&&"x"===t?(h="y",f=o.depthSegments):("z"===e&&"y"===t||"y"===e&&"z"===t)&&(h="x",d=o.depthSegments);var y=d+1,x=f+1,_=n/d,w=a/f,b=new p.Vector3;for(b[h]=s>0?1:-1,u=0;u<x;u++)for(c=0;c<y;c++){var M=new p.Vector3;M[e]=(c*_-m)*i,M[t]=(u*w-g)*r,M[h]=s,o.vertices.push(M)}for(u=0;u<f;u++)for(c=0;c<d;c++){var S=c+y*u,T=c+y*(u+1),E=c+1+y*(u+1),A=c+1+y*u,C=new p.Face4(S+v,T+v,E+v,A+v);C.normal.copy(b),C.vertexNormals.push(b.clone(),b.clone(),b.clone(),b.clone()),C.materialIndex=l,o.faces.push(C),o.faceVertexUvs[0].push([new p.Vector2(c/d,1-u/f),new p.Vector2(c/d,1-(u+1)/f),new p.Vector2((c+1)/d,1-(u+1)/f),new p.Vector2((c+1)/d,1-u/f)])}}c("z","y",-1,-1,this.depth,this.height,s,0),c("z","y",1,-1,this.depth,this.height,-s,1),c("x","z",1,1,this.width,this.depth,l,2),c("x","z",1,-1,this.width,this.depth,-l,3),c("x","y",1,-1,this.width,this.height,h,4),c("x","y",-1,-1,this.width,this.height,-h,5),this.computeCentroids(),this.mergeVertices()},p.CubeGeometry.prototype=Object.create(p.Geometry.prototype),p.CylinderGeometry=function(e,t,i,r,n,a){p.Geometry.call(this),e=void 0!==e?e:20,t=void 0!==t?t:20;var o,s,l=(i=void 0!==i?i:100)/2,h=r||8,c=n||1,u=[],d=[];for(s=0;s<=c;s++){var f=[],m=[],g=s/c,v=g*(t-e)+e;for(o=0;o<=h;o++){var y=o/h,x=new p.Vector3;x.x=v*Math.sin(y*Math.PI*2),x.y=-g*i+l,x.z=v*Math.cos(y*Math.PI*2),this.vertices.push(x),f.push(this.vertices.length-1),m.push(new p.Vector2(y,1-g))}u.push(f),d.push(m)}var _,w,b=(t-e)/i;for(o=0;o<h;o++)for(0!==e?(_=this.vertices[u[0][o]].clone(),w=this.vertices[u[0][o+1]].clone()):(_=this.vertices[u[1][o]].clone(),w=this.vertices[u[1][o+1]].clone()),_.setY(Math.sqrt(_.x*_.x+_.z*_.z)*b).normalize(),w.setY(Math.sqrt(w.x*w.x+w.z*w.z)*b).normalize(),s=0;s<c;s++){var M=u[s][o],S=u[s+1][o],T=u[s+1][o+1],E=u[s][o+1],A=_.clone(),C=_.clone(),L=w.clone(),R=w.clone(),P=d[s][o].clone(),D=d[s+1][o].clone(),F=d[s+1][o+1].clone(),z=d[s][o+1].clone();this.faces.push(new p.Face4(M,S,T,E,[A,C,L,R])),this.faceVertexUvs[0].push([P,D,F,z])}if(!a&&e>0)for(this.vertices.push(new p.Vector3(0,l,0)),o=0;o<h;o++){M=u[0][o],S=u[0][o+1],T=this.vertices.length-1,A=new p.Vector3(0,1,0),C=new p.Vector3(0,1,0),L=new p.Vector3(0,1,0),P=d[0][o].clone(),D=d[0][o+1].clone(),F=new p.Vector2(D.u,0);this.faces.push(new p.Face3(M,S,T,[A,C,L])),this.faceVertexUvs[0].push([P,D,F])}if(!a&&t>0)for(this.vertices.push(new p.Vector3(0,-l,0)),o=0;o<h;o++){M=u[s][o+1],S=u[s][o],T=this.vertices.length-1,A=new p.Vector3(0,-1,0),C=new p.Vector3(0,-1,0),L=new p.Vector3(0,-1,0),P=d[s][o+1].clone(),D=d[s][o].clone(),F=new p.Vector2(D.u,1);this.faces.push(new p.Face3(M,S,T,[A,C,L])),this.faceVertexUvs[0].push([P,D,F])}this.computeCentroids(),this.computeFaceNormals()},p.CylinderGeometry.prototype=Object.create(p.Geometry.prototype),p.ExtrudeGeometry=function(e,t){void 0!==e?(p.Geometry.call(this),e=e instanceof Array?e:[e],this.shapebb=e[e.length-1].getBoundingBox(),this.addShapeList(e,t),this.computeCentroids(),this.computeFaceNormals()):e=[]},p.ExtrudeGeometry.prototype=Object.create(p.Geometry.prototype),p.ExtrudeGeometry.prototype.addShapeList=function(e,t){for(var i=e.length,r=0;r<i;r++){var n=e[r];this.addShape(n,t)}},p.ExtrudeGeometry.prototype.addShape=function(e,t){var i,r,n,a,o,s,l,h,c=void 0!==t.amount?t.amount:100,u=void 0!==t.bevelThickness?t.bevelThickness:6,d=void 0!==t.bevelSize?t.bevelSize:u-2,f=void 0!==t.bevelSegments?t.bevelSegments:3,m=void 0===t.bevelEnabled||t.bevelEnabled,g=void 0!==t.curveSegments?t.curveSegments:12,v=void 0!==t.steps?t.steps:1,y=t.extrudePath,x=!1,_=t.material,w=t.extrudeMaterial,b=void 0!==t.UVGenerator?t.UVGenerator:p.ExtrudeGeometry.WorldUVGenerator;this.shapebb;y&&(i=y.getSpacedPoints(v),x=!0,m=!1,r=void 0!==t.frames?t.frames:new p.TubeGeometry.FrenetFrames(y,v,!1),n=new p.Vector3,a=new p.Vector3,o=new p.Vector3),m||(f=0,u=0,d=0);var M=this,S=this.vertices.length,T=e.extractPoints(g),E=T.shape,A=T.holes,C=!p.Shape.Utils.isClockWise(E);if(C){for(E=E.reverse(),l=0,h=A.length;l<h;l++)s=A[l],p.Shape.Utils.isClockWise(s)&&(A[l]=s.reverse());C=!1}var L=p.Shape.Utils.triangulateShape(E,A),R=E;for(l=0,h=A.length;l<h;l++)s=A[l],E=E.concat(s);function P(e,t,i){return t||console.log("die"),t.clone().multiplyScalar(i).add(e)}var D,F,z,I,N,U,B=E.length,O=L.length;R.length,Math.PI;function V(e,t,i){return function(e,t,i){var r,n,a,o,s,l=p.ExtrudeGeometry.__v1,h=p.ExtrudeGeometry.__v2,c=p.ExtrudeGeometry.__v3,u=p.ExtrudeGeometry.__v4,d=p.ExtrudeGeometry.__v5,f=p.ExtrudeGeometry.__v6;if(l.set(e.x-t.x,e.y-t.y),h.set(e.x-i.x,e.y-i.y),r=l.normalize(),n=h.normalize(),c.set(-r.y,r.x),u.set(n.y,-n.x),d.copy(e).add(c),f.copy(e).add(u),d.equals(f))return u.clone();d.copy(t).add(c),f.copy(i).add(u),a=r.dot(u),o=f.sub(d).dot(u),0===a&&(console.log("Either infinite or no solutions!"),0===o?console.log("Its finite solutions."):console.log("Too bad, no solutions."));if((s=o/a)<0)return function(e,t,i){var r=Math.atan2(t.y-e.y,t.x-e.x),n=Math.atan2(i.y-e.y,i.x-e.x);r>n&&(n+=2*Math.PI);var a=(r+n)/2,o=-Math.cos(a),s=-Math.sin(a);return new p.Vector2(o,s)}(e,t,i);return r.multiplyScalar(s).add(d).sub(e).clone()}(e,t,i)}for(var H=[],G=0,k=R.length,W=k-1,j=G+1;G<k;G++,W++,j++){W===k&&(W=0),j===k&&(j=0);R[G],R[W],R[j];H[G]=V(R[G],R[W],R[j])}var X,q,Y=[],K=H.concat();for(l=0,h=A.length;l<h;l++){for(s=A[l],X=[],G=0,W=(k=s.length)-1,j=G+1;G<k;G++,W++,j++)W===k&&(W=0),j===k&&(j=0),X[G]=V(s[G],s[W],s[j]);Y.push(X),K=K.concat(X)}for(D=0;D<f;D++){for(I=u*(1-(z=D/f)),F=d*Math.sin(z*Math.PI/2),G=0,k=R.length;G<k;G++)J((N=P(R[G],H[G],F)).x,N.y,-I);for(l=0,h=A.length;l<h;l++)for(s=A[l],X=Y[l],G=0,k=s.length;G<k;G++)J((N=P(s[G],X[G],F)).x,N.y,-I)}for(F=d,G=0;G<B;G++)N=m?P(E[G],K[G],F):E[G],x?(a.copy(r.normals[0]).multiplyScalar(N.x),n.copy(r.binormals[0]).multiplyScalar(N.y),o.copy(i[0]).add(a).add(n),J(o.x,o.y,o.z)):J(N.x,N.y,0);for(q=1;q<=v;q++)for(G=0;G<B;G++)N=m?P(E[G],K[G],F):E[G],x?(a.copy(r.normals[q]).multiplyScalar(N.x),n.copy(r.binormals[q]).multiplyScalar(N.y),o.copy(i[q]).add(a).add(n),J(o.x,o.y,o.z)):J(N.x,N.y,c/v*q);for(D=f-1;D>=0;D--){for(I=u*(1-(z=D/f)),F=d*Math.sin(z*Math.PI/2),G=0,k=R.length;G<k;G++)J((N=P(R[G],H[G],F)).x,N.y,c+I);for(l=0,h=A.length;l<h;l++)for(s=A[l],X=Y[l],G=0,k=s.length;G<k;G++)N=P(s[G],X[G],F),x?J(N.x,N.y+i[v-1].y,i[v-1].x+I):J(N.x,N.y,c+I)}function Z(e,t){var i,r;for(G=e.length;--G>=0;){i=G,(r=G-1)<0&&(r=e.length-1);var n=0,a=v+2*f;for(n=0;n<a;n++){var o=B*n,s=B*(n+1);$(t+i+o,t+r+o,t+r+s,t+i+s,e,n,a,i,r)}}}function J(e,t,i){M.vertices.push(new p.Vector3(e,t,i))}function Q(i,r,n,a){i+=S,r+=S,n+=S,M.faces.push(new p.Face3(i,r,n,null,null,_));var o=a?b.generateBottomUV(M,e,t,i,r,n):b.generateTopUV(M,e,t,i,r,n);M.faceVertexUvs[0].push(o)}function $(i,r,n,a,o,s,l,h,c){i+=S,r+=S,n+=S,a+=S,M.faces.push(new p.Face4(i,r,n,a,null,null,w));var u=b.generateSideWallUV(M,e,o,t,i,r,n,a,s,l,h,c);M.faceVertexUvs[0].push(u)}!function(){if(m){var e=0,t=B*e;for(G=0;G<O;G++)Q((U=L[G])[2]+t,U[1]+t,U[0]+t,!0);for(t=B*(e=v+2*f),G=0;G<O;G++)Q((U=L[G])[0]+t,U[1]+t,U[2]+t,!1)}else{for(G=0;G<O;G++)Q((U=L[G])[2],U[1],U[0],!0);for(G=0;G<O;G++)Q((U=L[G])[0]+B*v,U[1]+B*v,U[2]+B*v,!1)}}(),function(){var e=0;for(Z(R,e),e+=R.length,l=0,h=A.length;l<h;l++)Z(s=A[l],e),e+=s.length}()},p.ExtrudeGeometry.WorldUVGenerator={generateTopUV:function(e,t,i,r,n,a){var o=e.vertices[r].x,s=e.vertices[r].y,l=e.vertices[n].x,h=e.vertices[n].y,c=e.vertices[a].x,u=e.vertices[a].y;return[new p.Vector2(o,s),new p.Vector2(l,h),new p.Vector2(c,u)]},generateBottomUV:function(e,t,i,r,n,a){return this.generateTopUV(e,t,i,r,n,a)},generateSideWallUV:function(e,t,i,r,n,a,o,s,l,h,c,u){var d=e.vertices[n].x,f=e.vertices[n].y,m=e.vertices[n].z,g=e.vertices[a].x,v=e.vertices[a].y,y=e.vertices[a].z,x=e.vertices[o].x,_=e.vertices[o].y,w=e.vertices[o].z,b=e.vertices[s].x,M=e.vertices[s].y,S=e.vertices[s].z;return Math.abs(f-v)<.01?[new p.Vector2(d,1-m),new p.Vector2(g,1-y),new p.Vector2(x,1-w),new p.Vector2(b,1-S)]:[new p.Vector2(f,1-m),new p.Vector2(v,1-y),new p.Vector2(_,1-w),new p.Vector2(M,1-S)]}},p.ExtrudeGeometry.__v1=new p.Vector2,p.ExtrudeGeometry.__v2=new p.Vector2,p.ExtrudeGeometry.__v3=new p.Vector2,p.ExtrudeGeometry.__v4=new p.Vector2,p.ExtrudeGeometry.__v5=new p.Vector2,p.ExtrudeGeometry.__v6=new p.Vector2,p.ShapeGeometry=function(e,t){p.Geometry.call(this),e instanceof Array==!1&&(e=[e]),this.shapebb=e[e.length-1].getBoundingBox(),this.addShapeList(e,t),this.computeCentroids(),this.computeFaceNormals()},p.ShapeGeometry.prototype=Object.create(p.Geometry.prototype),p.ShapeGeometry.prototype.addShapeList=function(e,t){for(var i=0,r=e.length;i<r;i++)this.addShape(e[i],t);return this},p.ShapeGeometry.prototype.addShape=function(e,t){void 0===t&&(t={});var i,r,n,a=void 0!==t.curveSegments?t.curveSegments:12,o=t.material,s=void 0===t.UVGenerator?p.ExtrudeGeometry.WorldUVGenerator:t.UVGenerator,l=(this.shapebb,this.vertices.length),h=e.extractPoints(a),c=h.shape,u=h.holes,d=!p.Shape.Utils.isClockWise(c);if(d){for(c=c.reverse(),i=0,r=u.length;i<r;i++)n=u[i],p.Shape.Utils.isClockWise(n)&&(u[i]=n.reverse());d=!1}var f=p.Shape.Utils.triangulateShape(c,u),m=c;for(i=0,r=u.length;i<r;i++)n=u[i],c=c.concat(n);var g,v,y=c.length,x=f.length;m.length;for(i=0;i<y;i++)g=c[i],this.vertices.push(new p.Vector3(g.x,g.y,0));for(i=0;i<x;i++){var _=(v=f[i])[0]+l,w=v[1]+l,b=v[2]+l;this.faces.push(new p.Face3(_,w,b,null,null,o)),this.faceVertexUvs[0].push(s.generateBottomUV(this,e,t,_,w,b))}},p.LatheGeometry=function(e,t,i,r){p.Geometry.call(this),t=t||12,i=i||0,r=r||2*Math.PI;for(var n=1/(e.length-1),a=1/t,o=0,s=t;o<=s;o++)for(var l=i+o*a*r,h=Math.cos(l),c=Math.sin(l),u=0,d=e.length;u<d;u++){var f=e[u],m=new p.Vector3;m.x=h*f.x-c*f.y,m.y=c*f.x+h*f.y,m.z=f.z,this.vertices.push(m)}var g=e.length;for(o=0,s=t;o<s;o++)for(u=0,d=e.length-1;u<d;u++){var v=u+g*o,y=v,x=v+g,_=(h=v+1+g,v+1);this.faces.push(new p.Face4(y,x,h,_));var w=o*a,b=u*n,M=w+a,S=b+n;this.faceVertexUvs[0].push([new p.Vector2(w,b),new p.Vector2(M,b),new p.Vector2(M,S),new p.Vector2(w,S)])}this.mergeVertices(),this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals()},p.LatheGeometry.prototype=Object.create(p.Geometry.prototype),p.PlaneGeometry=function(e,t,i,r){var n,a;p.Geometry.call(this),this.width=e,this.height=t,this.widthSegments=i||1,this.heightSegments=r||1;var o=e/2,s=t/2,l=this.widthSegments,h=this.heightSegments,c=l+1,u=h+1,d=this.width/l,f=this.height/h,m=new p.Vector3(0,0,1);for(a=0;a<u;a++)for(n=0;n<c;n++){var g=n*d-o,v=a*f-s;this.vertices.push(new p.Vector3(g,-v,0))}for(a=0;a<h;a++)for(n=0;n<l;n++){var y=n+c*a,x=n+c*(a+1),_=n+1+c*(a+1),w=n+1+c*a,b=new p.Face4(y,x,_,w);b.normal.copy(m),b.vertexNormals.push(m.clone(),m.clone(),m.clone(),m.clone()),this.faces.push(b),this.faceVertexUvs[0].push([new p.Vector2(n/l,1-a/h),new p.Vector2(n/l,1-(a+1)/h),new p.Vector2((n+1)/l,1-(a+1)/h),new p.Vector2((n+1)/l,1-a/h)])}this.computeCentroids()},p.PlaneGeometry.prototype=Object.create(p.Geometry.prototype),p.SphereGeometry=function(e,t,i,r,n,a,o){p.Geometry.call(this),this.radius=e||50,this.widthSegments=Math.max(3,Math.floor(t)||8),this.heightSegments=Math.max(2,Math.floor(i)||6),r=void 0!==r?r:0,n=void 0!==n?n:2*Math.PI,a=void 0!==a?a:0,o=void 0!==o?o:Math.PI;var s,l,h=[],c=[];for(l=0;l<=this.heightSegments;l++){var u=[],d=[];for(s=0;s<=this.widthSegments;s++){var f=s/this.widthSegments,m=l/this.heightSegments,g=new p.Vector3;g.x=-this.radius*Math.cos(r+f*n)*Math.sin(a+m*o),g.y=this.radius*Math.cos(a+m*o),g.z=this.radius*Math.sin(r+f*n)*Math.sin(a+m*o),this.vertices.push(g),u.push(this.vertices.length-1),d.push(new p.Vector2(f,1-m))}h.push(u),c.push(d)}for(l=0;l<this.heightSegments;l++)for(s=0;s<this.widthSegments;s++){var v=h[l][s+1],y=h[l][s],x=h[l+1][s],_=h[l+1][s+1],w=this.vertices[v].clone().normalize(),b=this.vertices[y].clone().normalize(),M=this.vertices[x].clone().normalize(),S=this.vertices[_].clone().normalize(),T=c[l][s+1].clone(),E=c[l][s].clone(),A=c[l+1][s].clone(),C=c[l+1][s+1].clone();Math.abs(this.vertices[v].y)===this.radius?(this.faces.push(new p.Face3(v,x,_,[w,M,S])),this.faceVertexUvs[0].push([T,A,C])):Math.abs(this.vertices[x].y)===this.radius?(this.faces.push(new p.Face3(v,y,x,[w,b,M])),this.faceVertexUvs[0].push([T,E,A])):(this.faces.push(new p.Face4(v,y,x,_,[w,b,M,S])),this.faceVertexUvs[0].push([T,E,A,C]))}this.computeCentroids(),this.computeFaceNormals(),this.boundingSphere=new p.Sphere(new p.Vector3,e)},p.SphereGeometry.prototype=Object.create(p.Geometry.prototype),p.TextGeometry=function(e,t){var i=p.FontUtils.generateShapes(e,t);t.amount=void 0!==t.height?t.height:50,void 0===t.bevelThickness&&(t.bevelThickness=10),void 0===t.bevelSize&&(t.bevelSize=8),void 0===t.bevelEnabled&&(t.bevelEnabled=!1),p.ExtrudeGeometry.call(this,i,t)},p.TextGeometry.prototype=Object.create(p.ExtrudeGeometry.prototype),p.TorusGeometry=function(e,t,i,r,n){p.Geometry.call(this);this.radius=e||100,this.tube=t||40,this.radialSegments=i||8,this.tubularSegments=r||6,this.arc=n||2*Math.PI;for(var a=new p.Vector3,o=[],s=[],l=0;l<=this.radialSegments;l++)for(var h=0;h<=this.tubularSegments;h++){var c=h/this.tubularSegments*this.arc,u=l/this.radialSegments*Math.PI*2;a.x=this.radius*Math.cos(c),a.y=this.radius*Math.sin(c);var d=new p.Vector3;d.x=(this.radius+this.tube*Math.cos(u))*Math.cos(c),d.y=(this.radius+this.tube*Math.cos(u))*Math.sin(c),d.z=this.tube*Math.sin(u),this.vertices.push(d),o.push(new p.Vector2(h/this.tubularSegments,l/this.radialSegments)),s.push(d.clone().sub(a).normalize())}for(l=1;l<=this.radialSegments;l++)for(h=1;h<=this.tubularSegments;h++){var f=(this.tubularSegments+1)*l+h-1,m=(this.tubularSegments+1)*(l-1)+h-1,g=(this.tubularSegments+1)*(l-1)+h,v=(this.tubularSegments+1)*l+h,y=new p.Face4(f,m,g,v,[s[f],s[m],s[g],s[v]]);y.normal.add(s[f]),y.normal.add(s[m]),y.normal.add(s[g]),y.normal.add(s[v]),y.normal.normalize(),this.faces.push(y),this.faceVertexUvs[0].push([o[f].clone(),o[m].clone(),o[g].clone(),o[v].clone()])}this.computeCentroids()},p.TorusGeometry.prototype=Object.create(p.Geometry.prototype),p.TorusKnotGeometry=function(e,t,i,r,n,a,o){p.Geometry.call(this);var s=this;this.radius=e||100,this.tube=t||40,this.radialSegments=i||64,this.tubularSegments=r||8,this.p=n||2,this.q=a||3,this.heightScale=o||1,this.grid=new Array(this.radialSegments);for(var l,h,c,u=new p.Vector3,d=new p.Vector3,f=new p.Vector3,m=0;m<this.radialSegments;++m){this.grid[m]=new Array(this.tubularSegments);for(var g=0;g<this.tubularSegments;++g){var v,y,x=m/this.radialSegments*2*this.p*Math.PI,_=g/this.tubularSegments*2*Math.PI,w=F(x,_,this.q,this.p,this.radius,this.heightScale),b=F(x+.01,_,this.q,this.p,this.radius,this.heightScale);u.subVectors(b,w),d.addVectors(b,w),f.crossVectors(u,d),d.crossVectors(f,u),f.normalize(),d.normalize(),v=-this.tube*Math.cos(_),y=this.tube*Math.sin(_),w.x+=v*d.x+y*f.x,w.y+=v*d.y+y*f.y,w.z+=v*d.z+y*f.z,this.grid[m][g]=(l=w.x,h=w.y,c=w.z,s.vertices.push(new p.Vector3(l,h,c))-1)}}for(m=0;m<this.radialSegments;++m)for(g=0;g<this.tubularSegments;++g){var M=(m+1)%this.radialSegments,S=(g+1)%this.tubularSegments,T=this.grid[m][g],E=this.grid[M][g],A=this.grid[M][S],C=this.grid[m][S],L=new p.Vector2(m/this.radialSegments,g/this.tubularSegments),R=new p.Vector2((m+1)/this.radialSegments,g/this.tubularSegments),P=new p.Vector2((m+1)/this.radialSegments,(g+1)/this.tubularSegments),D=new p.Vector2(m/this.radialSegments,(g+1)/this.tubularSegments);this.faces.push(new p.Face4(T,E,A,C)),this.faceVertexUvs[0].push([L,R,P,D])}function F(e,t,i,r,n,a){var o=Math.cos(e),s=(Math.cos(t),Math.sin(e)),l=i/r*e,h=Math.cos(l),c=n*(2+h)*.5*o,u=n*(2+h)*s*.5,d=a*n*Math.sin(l)*.5;return new p.Vector3(c,u,d)}this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals()},p.TorusKnotGeometry.prototype=Object.create(p.Geometry.prototype),p.TubeGeometry=function(e,t,i,r,n,a){p.Geometry.call(this),this.path=e,this.segments=t||64,this.radius=i||1,this.radiusSegments=r||8,this.closed=n||!1,a&&(this.debug=new p.Object3D),this.grid=[];var o,s,l,h,c,u,d,f,m,g,v,y,x,_,w,b,M,S,T,E,A=this,C=this.segments+1,L=new p.Vector3,R=new p.TubeGeometry.FrenetFrames(this.path,this.segments,this.closed),P=R.tangents,D=R.normals,F=R.binormals;function z(e,t,i){return A.vertices.push(new p.Vector3(e,t,i))-1}for(this.tangents=P,this.normals=D,this.binormals=F,m=0;m<C;m++)for(this.grid[m]=[],h=m/(C-1),f=e.getPointAt(h),o=P[m],s=D[m],l=F[m],this.debug&&(this.debug.add(new p.ArrowHelper(o,f,i,255)),this.debug.add(new p.ArrowHelper(s,f,i,16711680)),this.debug.add(new p.ArrowHelper(l,f,i,65280))),g=0;g<this.radiusSegments;g++)c=g/this.radiusSegments*2*Math.PI,u=-this.radius*Math.cos(c),d=this.radius*Math.sin(c),L.copy(f),L.x+=u*s.x+d*l.x,L.y+=u*s.y+d*l.y,L.z+=u*s.z+d*l.z,this.grid[m][g]=z(L.x,L.y,L.z);for(m=0;m<this.segments;m++)for(g=0;g<this.radiusSegments;g++)v=this.closed?(m+1)%this.segments:m+1,y=(g+1)%this.radiusSegments,x=this.grid[m][g],_=this.grid[v][g],w=this.grid[v][y],b=this.grid[m][y],M=new p.Vector2(m/this.segments,g/this.radiusSegments),S=new p.Vector2((m+1)/this.segments,g/this.radiusSegments),T=new p.Vector2((m+1)/this.segments,(g+1)/this.radiusSegments),E=new p.Vector2(m/this.segments,(g+1)/this.radiusSegments),this.faces.push(new p.Face4(x,_,w,b)),this.faceVertexUvs[0].push([M,S,T,E]);this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals()},p.TubeGeometry.prototype=Object.create(p.Geometry.prototype),p.TubeGeometry.FrenetFrames=function(e,t,i){new p.Vector3;var r,n,a,o,s,l,h,c=new p.Vector3,u=(new p.Vector3,[]),d=[],f=[],m=new p.Vector3,g=new p.Matrix4,v=t+1,y=1e-4;for(this.tangents=u,this.normals=d,this.binormals=f,l=0;l<v;l++)h=l/(v-1),u[l]=e.getTangentAt(h),u[l].normalize();for(function(){d[0]=new p.Vector3,f[0]=new p.Vector3,n=Number.MAX_VALUE,a=Math.abs(u[0].x),o=Math.abs(u[0].y),s=Math.abs(u[0].z),a<=n&&(n=a,c.set(1,0,0));o<=n&&(n=o,c.set(0,1,0));s<=n&&c.set(0,0,1);m.crossVectors(u[0],c).normalize(),d[0].crossVectors(u[0],m),f[0].crossVectors(u[0],d[0])}(),l=1;l<v;l++)d[l]=d[l-1].clone(),f[l]=f[l-1].clone(),m.crossVectors(u[l-1],u[l]),m.length()>y&&(m.normalize(),r=Math.acos(u[l-1].dot(u[l])),d[l].applyMatrix4(g.makeRotationAxis(m,r))),f[l].crossVectors(u[l],d[l]);if(i)for(r=Math.acos(d[0].dot(d[v-1])),r/=v-1,u[0].dot(m.crossVectors(d[0],d[v-1]))>0&&(r=-r),l=1;l<v;l++)d[l].applyMatrix4(g.makeRotationAxis(u[l],r*l)),f[l].crossVectors(u[l],d[l])},p.PolyhedronGeometry=function(e,t,i,r){p.Geometry.call(this),i=i||1,r=r||0;for(var n=this,a=0,o=e.length;a<o;a++)h(new p.Vector3(e[a][0],e[a][1],e[a][2]));var s=[],l=this.vertices;for(a=0,o=t.length;a<o;a++)c(l[t[a][0]],l[t[a][1]],l[t[a][2]],r);this.mergeVertices();for(a=0,o=this.vertices.length;a<o;a++)this.vertices[a].multiplyScalar(i);function h(e){var t=e.normalize().clone();t.index=n.vertices.push(t)-1;var i=d(e)/2/Math.PI+.5,r=function(e){return Math.atan2(-e.y,Math.sqrt(e.x*e.x+e.z*e.z))}(e)/Math.PI+.5;return t.uv=new p.Vector2(i,1-r),t}function c(e,t,i,r){if(r<1){var a=new p.Face3(e.index,t.index,i.index,[e.clone(),t.clone(),i.clone()]);a.centroid.add(e).add(t).add(i).divideScalar(3),a.normal=a.centroid.clone().normalize(),n.faces.push(a);var o=d(a.centroid);n.faceVertexUvs[0].push([f(e.uv,e,o),f(t.uv,t,o),f(i.uv,i,o)])}else r-=1,c(e,u(e,t),u(e,i),r),c(u(e,t),t,u(t,i),r),c(u(e,i),u(t,i),i,r),c(u(e,t),u(t,i),u(e,i),r)}function u(e,t){s[e.index]||(s[e.index]=[]),s[t.index]||(s[t.index]=[]);var i=s[e.index][t.index];return void 0===i&&(s[e.index][t.index]=s[t.index][e.index]=i=h((new p.Vector3).addVectors(e,t).divideScalar(2))),i}function d(e){return Math.atan2(e.z,-e.x)}function f(e,t,i){return i<0&&1===e.x&&(e=new p.Vector2(e.x-1,e.y)),0===t.x&&0===t.z&&(e=new p.Vector2(i/2/Math.PI+.5,e.y)),e}this.computeCentroids(),this.boundingSphere=new p.Sphere(new p.Vector3,i)},p.PolyhedronGeometry.prototype=Object.create(p.Geometry.prototype),p.IcosahedronGeometry=function(e,t){var i=(1+Math.sqrt(5))/2,r=[[-1,i,0],[1,i,0],[-1,-i,0],[1,-i,0],[0,-1,i],[0,1,i],[0,-1,-i],[0,1,-i],[i,0,-1],[i,0,1],[-i,0,-1],[-i,0,1]];p.PolyhedronGeometry.call(this,r,[[0,11,5],[0,5,1],[0,1,7],[0,7,10],[0,10,11],[1,5,9],[5,11,4],[11,10,2],[10,7,6],[7,1,8],[3,9,4],[3,4,2],[3,2,6],[3,6,8],[3,8,9],[4,9,5],[2,4,11],[6,2,10],[8,6,7],[9,8,1]],e,t)},p.IcosahedronGeometry.prototype=Object.create(p.Geometry.prototype),p.OctahedronGeometry=function(e,t){p.PolyhedronGeometry.call(this,[[1,0,0],[-1,0,0],[0,1,0],[0,-1,0],[0,0,1],[0,0,-1]],[[0,2,4],[0,4,3],[0,3,5],[0,5,2],[1,2,5],[1,5,3],[1,3,4],[1,4,2]],e,t)},p.OctahedronGeometry.prototype=Object.create(p.Geometry.prototype),p.TetrahedronGeometry=function(e,t){p.PolyhedronGeometry.call(this,[[1,1,1],[-1,-1,1],[-1,1,-1],[1,-1,-1]],[[2,1,0],[0,3,2],[1,3,0],[2,3,1]],e,t)},p.TetrahedronGeometry.prototype=Object.create(p.Geometry.prototype),p.ParametricGeometry=function(e,t,i,r){p.Geometry.call(this);var n,a,o,s,l=this.vertices,h=this.faces,c=this.faceVertexUvs[0];r=void 0!==r&&r;var u,d,f,m,g,v,y,x,_=t+1;for(n=0;n<=i;n++)for(s=n/i,a=0;a<=t;a++)o=e(a/t,s),l.push(o);for(n=0;n<i;n++)for(a=0;a<t;a++)u=n*_+a,d=n*_+a+1,f=(n+1)*_+a,m=(n+1)*_+a+1,g=new p.Vector2(a/t,n/i),v=new p.Vector2((a+1)/t,n/i),y=new p.Vector2(a/t,(n+1)/i),x=new p.Vector2((a+1)/t,(n+1)/i),r?(h.push(new p.Face3(u,d,f)),h.push(new p.Face3(d,m,f)),c.push([g,v,y]),c.push([v,x,y])):(h.push(new p.Face4(u,d,m,f)),c.push([g,v,x,y]));this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals()},p.ParametricGeometry.prototype=Object.create(p.Geometry.prototype),p.ConvexGeometry=function(e){p.Geometry.call(this);for(var t=[[0,1,2],[0,2,1]],i=3;i<e.length;i++)r(i);function r(i){var r=e[i].clone(),o=r.length();r.x+=o*a(),r.y+=o*a(),r.z+=o*a();for(var s,l,h=[],c=0;c<t.length;){var u=t[c];if(n(u,r)){for(var d=0;d<3;d++){for(var p=[u[d],u[(d+1)%3]],f=!0,m=0;m<h.length;m++)if(s=h[m],l=p,s[0]===l[1]&&s[1]===l[0]){h[m]=h[h.length-1],h.pop(),f=!1;break}f&&h.push(p)}t[c]=t[t.length-1],t.pop()}else c++}for(m=0;m<h.length;m++)t.push([h[m][0],h[m][1],i])}function n(t,i){var r=e[t[0]],n=function(e,t,i){var r=new p.Vector3,n=new p.Vector3;return r.subVectors(i,t),n.subVectors(e,t),r.cross(n),r.normalize(),r}(r,e[t[1]],e[t[2]]),a=n.dot(r);return n.dot(i)>=a}function a(){return 2*(Math.random()-.5)*1e-6}function o(e){var t=e.length();return new p.Vector2(e.x/t,e.y/t)}var s=0,l=new Array(e.length);for(i=0;i<t.length;i++)for(var h=t[i],c=0;c<3;c++)void 0===l[h[c]]&&(l[h[c]]=s++,this.vertices.push(e[h[c]])),h[c]=l[h[c]];for(i=0;i<t.length;i++)this.faces.push(new p.Face3(t[i][0],t[i][1],t[i][2]));for(i=0;i<this.faces.length;i++){h=this.faces[i];this.faceVertexUvs[0].push([o(this.vertices[h.a]),o(this.vertices[h.b]),o(this.vertices[h.c])])}this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals()},p.ConvexGeometry.prototype=Object.create(p.Geometry.prototype),p.AxisHelper=function(e){var t=new p.Geometry;t.vertices.push(new p.Vector3,new p.Vector3(e||1,0,0),new p.Vector3,new p.Vector3(0,e||1,0),new p.Vector3,new p.Vector3(0,0,e||1)),t.colors.push(new p.Color(16711680),new p.Color(16755200),new p.Color(65280),new p.Color(11206400),new p.Color(255),new p.Color(43775));var i=new p.LineBasicMaterial({vertexColors:p.VertexColors});p.Line.call(this,t,i,p.LinePieces)},p.AxisHelper.prototype=Object.create(p.Line.prototype),p.ArrowHelper=function(e,t,i,r){p.Object3D.call(this),void 0===i&&(i=20),void 0===r&&(r=16776960);var n=new p.Geometry;n.vertices.push(new p.Vector3(0,0,0)),n.vertices.push(new p.Vector3(0,1,0)),this.line=new p.Line(n,new p.LineBasicMaterial({color:r})),this.add(this.line);var a=new p.CylinderGeometry(0,.05,.25,5,1);this.cone=new p.Mesh(a,new p.MeshBasicMaterial({color:r})),this.cone.position.set(0,1,0),this.add(this.cone),t instanceof p.Vector3&&(this.position=t),this.setDirection(e),this.setLength(i)},p.ArrowHelper.prototype=Object.create(p.Object3D.prototype),p.ArrowHelper.prototype.setDirection=function(e){var t=p.ArrowHelper.__v1.copy(e).normalize();if(t.y>.999)this.rotation.set(0,0,0);else if(t.y<-.999)this.rotation.set(Math.PI,0,0);else{var i=p.ArrowHelper.__v2.set(t.z,0,-t.x).normalize(),r=Math.acos(t.y),n=p.ArrowHelper.__q1.setFromAxisAngle(i,r);this.rotation.setEulerFromQuaternion(n,this.eulerOrder)}},p.ArrowHelper.prototype.setLength=function(e){this.scale.set(e,e,e)},p.ArrowHelper.prototype.setColor=function(e){this.line.material.color.setHex(e),this.cone.material.color.setHex(e)},p.ArrowHelper.__v1=new p.Vector3,p.ArrowHelper.__v2=new p.Vector3,p.ArrowHelper.__q1=new p.Quaternion,p.CameraHelper=function(e){p.Line.call(this);var t=this;this.geometry=new p.Geometry,this.material=new p.LineBasicMaterial({color:16777215,vertexColors:p.FaceColors}),this.type=p.LinePieces,this.matrixWorld=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap={};function i(e,t,i){r(e,i),r(t,i)}function r(e,i){t.geometry.vertices.push(new p.Vector3),t.geometry.colors.push(new p.Color(i)),void 0===t.pointMap[e]&&(t.pointMap[e]=[]),t.pointMap[e].push(t.geometry.vertices.length-1)}i("n1","n2",16755200),i("n2","n4",16755200),i("n4","n3",16755200),i("n3","n1",16755200),i("f1","f2",16755200),i("f2","f4",16755200),i("f4","f3",16755200),i("f3","f1",16755200),i("n1","f1",16755200),i("n2","f2",16755200),i("n3","f3",16755200),i("n4","f4",16755200),i("p","n1",16711680),i("p","n2",16711680),i("p","n3",16711680),i("p","n4",16711680),i("u1","u2",43775),i("u2","u3",43775),i("u3","u1",43775),i("c","t",16777215),i("p","c",3355443),i("cn1","cn2",3355443),i("cn3","cn4",3355443),i("cf1","cf2",3355443),i("cf3","cf4",3355443),this.camera=e,this.update(e)},p.CameraHelper.prototype=Object.create(p.Line.prototype),p.CameraHelper.prototype.update=function(){var e=this;function t(t,i,r,n){p.CameraHelper.__v.set(i,r,n),p.CameraHelper.__projector.unprojectVector(p.CameraHelper.__v,p.CameraHelper.__c);var a=e.pointMap[t];if(void 0!==a)for(var o=0,s=a.length;o<s;o++)e.geometry.vertices[a[o]].copy(p.CameraHelper.__v)}p.CameraHelper.__c.projectionMatrix.copy(this.camera.projectionMatrix),t("c",0,0,-1),t("t",0,0,1),t("n1",-1,-1,-1),t("n2",1,-1,-1),t("n3",-1,1,-1),t("n4",1,1,-1),t("f1",-1,-1,1),t("f2",1,-1,1),t("f3",-1,1,1),t("f4",1,1,1),t("u1",.7,1.1,-1),t("u2",-.7,1.1,-1),t("u3",0,2,-1),t("cf1",-1,0,1),t("cf2",1,0,1),t("cf3",0,-1,1),t("cf4",0,1,1),t("cn1",-1,0,-1),t("cn2",1,0,-1),t("cn3",0,-1,-1),t("cn4",0,1,-1),this.geometry.verticesNeedUpdate=!0},p.CameraHelper.__projector=new p.Projector,p.CameraHelper.__v=new p.Vector3,p.CameraHelper.__c=new p.Camera,p.DirectionalLightHelper=function(e,t){p.Object3D.call(this),this.light=e,this.position=e.position,this.direction=new p.Vector3,this.direction.subVectors(e.target.position,e.position);var i=p.Math.clamp(e.intensity,0,1);this.color=e.color.clone(),this.color.multiplyScalar(i);var r=this.color.getHex(),n=new p.SphereGeometry(t,16,8),a=new p.AsteriskGeometry(1.25*t,2.25*t),o=new p.MeshBasicMaterial({color:r,fog:!1}),s=new p.LineBasicMaterial({color:r,fog:!1});if(this.lightSphere=new p.Mesh(n,o),this.lightRays=new p.Line(a,s,p.LinePieces),this.add(this.lightSphere),this.add(this.lightRays),this.lightSphere.properties.isGizmo=!0,this.lightSphere.properties.gizmoSubject=e,this.lightSphere.properties.gizmoRoot=this,this.targetSphere=null,void 0!==e.target.properties.targetInverse){var l=new p.SphereGeometry(t,8,4),h=new p.MeshBasicMaterial({color:r,wireframe:!0,fog:!1});this.targetSphere=new p.Mesh(l,h),this.targetSphere.position=e.target.position,this.targetSphere.properties.isGizmo=!0,this.targetSphere.properties.gizmoSubject=e.target,this.targetSphere.properties.gizmoRoot=this.targetSphere;var c=new p.LineDashedMaterial({color:r,dashSize:4,gapSize:4,opacity:.75,transparent:!0,fog:!1}),u=new p.Geometry;u.vertices.push(this.position.clone()),u.vertices.push(this.targetSphere.position.clone()),u.computeLineDistances(),this.targetLine=new p.Line(u,c),this.targetLine.properties.isGizmo=!0}this.properties.isGizmo=!0},p.DirectionalLightHelper.prototype=Object.create(p.Object3D.prototype),p.DirectionalLightHelper.prototype.update=function(){this.direction.subVectors(this.light.target.position,this.light.position);var e=p.Math.clamp(this.light.intensity,0,1);this.color.copy(this.light.color),this.color.multiplyScalar(e),this.lightSphere.material.color.copy(this.color),this.lightRays.material.color.copy(this.color),null!==this.targetSphere&&(this.targetSphere.material.color.copy(this.color),this.targetLine.material.color.copy(this.color),this.targetLine.geometry.vertices[0].copy(this.light.position),this.targetLine.geometry.vertices[1].copy(this.light.target.position),this.targetLine.geometry.computeLineDistances(),this.targetLine.geometry.verticesNeedUpdate=!0)},p.HemisphereLightHelper=function(e,t,i,r){p.Object3D.call(this),this.light=e,this.position=e.position;var n=p.Math.clamp(e.intensity,0,1);this.color=e.color.clone(),this.color.multiplyScalar(n);var a=this.color.getHex();this.groundColor=e.groundColor.clone(),this.groundColor.multiplyScalar(n);for(var o=this.groundColor.getHex(),s=new p.SphereGeometry(t,16,8,0,2*Math.PI,0,.5*Math.PI),l=new p.SphereGeometry(t,16,8,0,2*Math.PI,.5*Math.PI,Math.PI),h=new p.MeshBasicMaterial({color:a,fog:!1}),c=new p.MeshBasicMaterial({color:o,fog:!1}),u=0,d=s.faces.length;u<d;u++)s.faces[u].materialIndex=0;for(u=0,d=l.faces.length;u<d;u++)l.faces[u].materialIndex=1;p.GeometryUtils.merge(s,l),this.lightSphere=new p.Mesh(s,new p.MeshFaceMaterial([h,c])),this.lightArrow=new p.ArrowHelper(new p.Vector3(0,1,0),new p.Vector3(0,1.1*(t+i),0),i,a),this.lightArrow.rotation.x=Math.PI,this.lightArrowGround=new p.ArrowHelper(new p.Vector3(0,1,0),new p.Vector3(0,-1.1*(t+i),0),i,o);var f=new p.Object3D;f.rotation.x=.5*-Math.PI,f.add(this.lightSphere),f.add(this.lightArrow),f.add(this.lightArrowGround),this.add(f),this.lightSphere.properties.isGizmo=!0,this.lightSphere.properties.gizmoSubject=e,this.lightSphere.properties.gizmoRoot=this,this.properties.isGizmo=!0,this.target=new p.Vector3,this.lookAt(this.target)},p.HemisphereLightHelper.prototype=Object.create(p.Object3D.prototype),p.HemisphereLightHelper.prototype.update=function(){var e=p.Math.clamp(this.light.intensity,0,1);this.color.copy(this.light.color),this.color.multiplyScalar(e),this.groundColor.copy(this.light.groundColor),this.groundColor.multiplyScalar(e),this.lightSphere.material.materials[0].color.copy(this.color),this.lightSphere.material.materials[1].color.copy(this.groundColor),this.lightArrow.setColor(this.color.getHex()),this.lightArrowGround.setColor(this.groundColor.getHex()),this.lookAt(this.target)},p.PointLightHelper=function(e,t){p.Object3D.call(this),this.light=e,this.position=e.position;var i=p.Math.clamp(e.intensity,0,1);this.color=e.color.clone(),this.color.multiplyScalar(i);var r=this.color.getHex(),n=new p.SphereGeometry(t,16,8),a=new p.AsteriskGeometry(1.25*t,2.25*t),o=new p.IcosahedronGeometry(1,2),s=new p.MeshBasicMaterial({color:r,fog:!1}),l=new p.LineBasicMaterial({color:r,fog:!1}),h=new p.MeshBasicMaterial({color:r,fog:!1,wireframe:!0,opacity:.1,transparent:!0});this.lightSphere=new p.Mesh(n,s),this.lightRays=new p.Line(a,l,p.LinePieces),this.lightDistance=new p.Mesh(o,h);var c=e.distance;0===c?this.lightDistance.visible=!1:this.lightDistance.scale.set(c,c,c),this.add(this.lightSphere),this.add(this.lightRays),this.add(this.lightDistance),this.lightSphere.properties.isGizmo=!0,this.lightSphere.properties.gizmoSubject=e,this.lightSphere.properties.gizmoRoot=this,this.properties.isGizmo=!0},p.PointLightHelper.prototype=Object.create(p.Object3D.prototype),p.PointLightHelper.prototype.update=function(){var e=p.Math.clamp(this.light.intensity,0,1);this.color.copy(this.light.color),this.color.multiplyScalar(e),this.lightSphere.material.color.copy(this.color),this.lightRays.material.color.copy(this.color),this.lightDistance.material.color.copy(this.color);var t=this.light.distance;0===t?this.lightDistance.visible=!1:(this.lightDistance.visible=!0,this.lightDistance.scale.set(t,t,t))},p.SpotLightHelper=function(e,t){p.Object3D.call(this),this.light=e,this.position=e.position,this.direction=new p.Vector3,this.direction.subVectors(e.target.position,e.position);var i=p.Math.clamp(e.intensity,0,1);this.color=e.color.clone(),this.color.multiplyScalar(i);var r=this.color.getHex(),n=new p.SphereGeometry(t,16,8),a=new p.AsteriskGeometry(1.25*t,2.25*t),o=new p.CylinderGeometry(1e-4,1,1,8,1,!0),s=new p.Matrix4;s.rotateX(-Math.PI/2),s.translate(new p.Vector3(0,-.5,0)),o.applyMatrix(s);var l=new p.MeshBasicMaterial({color:r,fog:!1}),h=new p.LineBasicMaterial({color:r,fog:!1}),c=new p.MeshBasicMaterial({color:r,fog:!1,wireframe:!0,opacity:.3,transparent:!0});this.lightSphere=new p.Mesh(n,l),this.lightCone=new p.Mesh(o,c);var u=e.distance?e.distance:1e4,d=u*Math.tan(.5*e.angle)*2;if(this.lightCone.scale.set(d,d,u),this.lightRays=new p.Line(a,h,p.LinePieces),this.gyroscope=new p.Gyroscope,this.gyroscope.add(this.lightSphere),this.gyroscope.add(this.lightRays),this.add(this.gyroscope),this.add(this.lightCone),this.lookAt(e.target.position),this.lightSphere.properties.isGizmo=!0,this.lightSphere.properties.gizmoSubject=e,this.lightSphere.properties.gizmoRoot=this,this.targetSphere=null,void 0!==e.target.properties.targetInverse){var f=new p.SphereGeometry(t,8,4),m=new p.MeshBasicMaterial({color:r,wireframe:!0,fog:!1});this.targetSphere=new p.Mesh(f,m),this.targetSphere.position=e.target.position,this.targetSphere.properties.isGizmo=!0,this.targetSphere.properties.gizmoSubject=e.target,this.targetSphere.properties.gizmoRoot=this.targetSphere;var g=new p.LineDashedMaterial({color:r,dashSize:4,gapSize:4,opacity:.75,transparent:!0,fog:!1}),v=new p.Geometry;v.vertices.push(this.position.clone()),v.vertices.push(this.targetSphere.position.clone()),v.computeLineDistances(),this.targetLine=new p.Line(v,g),this.targetLine.properties.isGizmo=!0}this.properties.isGizmo=!0},p.SpotLightHelper.prototype=Object.create(p.Object3D.prototype),p.SpotLightHelper.prototype.update=function(){this.direction.subVectors(this.light.target.position,this.light.position),this.lookAt(this.light.target.position);var e=this.light.distance?this.light.distance:1e4,t=e*Math.tan(.5*this.light.angle)*2;this.lightCone.scale.set(t,t,e);var i=p.Math.clamp(this.light.intensity,0,1);this.color.copy(this.light.color),this.color.multiplyScalar(i),this.lightSphere.material.color.copy(this.color),this.lightRays.material.color.copy(this.color),this.lightCone.material.color.copy(this.color),null!==this.targetSphere&&(this.targetSphere.material.color.copy(this.color),this.targetLine.material.color.copy(this.color),this.targetLine.geometry.vertices[0].copy(this.light.position),this.targetLine.geometry.vertices[1].copy(this.light.target.position),this.targetLine.geometry.computeLineDistances(),this.targetLine.geometry.verticesNeedUpdate=!0)},p.ImmediateRenderObject=function(){p.Object3D.call(this),this.render=function(e){}},p.ImmediateRenderObject.prototype=Object.create(p.Object3D.prototype),p.LensFlare=function(e,t,i,r,n){p.Object3D.call(this),this.lensFlares=[],this.positionScreen=new p.Vector3,this.customUpdateCallback=void 0,void 0!==e&&this.add(e,t,i,r,n)},p.LensFlare.prototype=Object.create(p.Object3D.prototype),p.LensFlare.prototype.add=function(e,t,i,r,n,a){void 0===t&&(t=-1),void 0===i&&(i=0),void 0===a&&(a=1),void 0===n&&(n=new p.Color(16777215)),void 0===r&&(r=p.NormalBlending),i=Math.min(i,Math.max(0,i)),this.lensFlares.push({texture:e,size:t,distance:i,x:0,y:0,z:0,scale:1,rotation:1,opacity:a,color:n,blending:r})},p.LensFlare.prototype.updateLensFlares=function(){var e,t,i=this.lensFlares.length,r=2*-this.positionScreen.x,n=2*-this.positionScreen.y;for(e=0;e<i;e++)(t=this.lensFlares[e]).x=this.positionScreen.x+r*t.distance,t.y=this.positionScreen.y+n*t.distance,t.wantedRotation=t.x*Math.PI*.25,t.rotation+=.25*(t.wantedRotation-t.rotation)},p.MorphBlendMesh=function(e,t){p.Mesh.call(this,e,t),this.animationsMap={},this.animationsList=[];var i=this.geometry.morphTargets.length,r=i-1,n=i/1;this.createAnimation("__default",0,r,n),this.setAnimationWeight("__default",1)},p.MorphBlendMesh.prototype=Object.create(p.Mesh.prototype),p.MorphBlendMesh.prototype.createAnimation=function(e,t,i,r){var n={startFrame:t,endFrame:i,length:i-t+1,fps:r,duration:(i-t)/r,lastFrame:0,currentFrame:0,active:!1,time:0,direction:1,weight:1,directionBackwards:!1,mirroredLoop:!1};this.animationsMap[e]=n,this.animationsList.push(n)},p.MorphBlendMesh.prototype.autoCreateAnimations=function(e){for(var t,i=/([a-z]+)(\d+)/,r={},n=this.geometry,a=0,o=n.morphTargets.length;a<o;a++){var s=n.morphTargets[a].name.match(i);if(s&&s.length>1){var l=s[1];s[2];r[l]||(r[l]={start:1/0,end:-1/0}),a<(h=r[l]).start&&(h.start=a),a>h.end&&(h.end=a),t||(t=l)}}for(var l in r){var h=r[l];this.createAnimation(l,h.start,h.end,e)}this.firstAnimation=t},p.MorphBlendMesh.prototype.setAnimationDirectionForward=function(e){var t=this.animationsMap[e];t&&(t.direction=1,t.directionBackwards=!1)},p.MorphBlendMesh.prototype.setAnimationDirectionBackward=function(e){var t=this.animationsMap[e];t&&(t.direction=-1,t.directionBackwards=!0)},p.MorphBlendMesh.prototype.setAnimationFPS=function(e,t){var i=this.animationsMap[e];i&&(i.fps=t,i.duration=(i.end-i.start)/i.fps)},p.MorphBlendMesh.prototype.setAnimationDuration=function(e,t){var i=this.animationsMap[e];i&&(i.duration=t,i.fps=(i.end-i.start)/i.duration)},p.MorphBlendMesh.prototype.setAnimationWeight=function(e,t){var i=this.animationsMap[e];i&&(i.weight=t)},p.MorphBlendMesh.prototype.setAnimationTime=function(e,t){var i=this.animationsMap[e];i&&(i.time=t)},p.MorphBlendMesh.prototype.getAnimationTime=function(e){var t=0,i=this.animationsMap[e];return i&&(t=i.time),t},p.MorphBlendMesh.prototype.getAnimationDuration=function(e){var t=-1,i=this.animationsMap[e];return i&&(t=i.duration),t},p.MorphBlendMesh.prototype.playAnimation=function(e){var t=this.animationsMap[e];t?(t.time=0,t.active=!0):console.warn("animation["+e+"] undefined")},p.MorphBlendMesh.prototype.stopAnimation=function(e){var t=this.animationsMap[e];t&&(t.active=!1)},p.MorphBlendMesh.prototype.update=function(e){for(var t=0,i=this.animationsList.length;t<i;t++){var r=this.animationsList[t];if(r.active){var n=r.duration/r.length;r.time+=r.direction*e,r.mirroredLoop?(r.time>r.duration||r.time<0)&&(r.direction*=-1,r.time>r.duration&&(r.time=r.duration,r.directionBackwards=!0),r.time<0&&(r.time=0,r.directionBackwards=!1)):(r.time=r.time%r.duration,r.time<0&&(r.time+=r.duration));var a=r.startFrame+p.Math.clamp(Math.floor(r.time/n),0,r.length-1),o=r.weight;a!==r.currentFrame&&(this.morphTargetInfluences[r.lastFrame]=0,this.morphTargetInfluences[r.currentFrame]=1*o,this.morphTargetInfluences[a]=0,r.lastFrame=r.currentFrame,r.currentFrame=a);var s=r.time%n/n;r.directionBackwards&&(s=1-s),this.morphTargetInfluences[r.currentFrame]=s*o,this.morphTargetInfluences[r.lastFrame]=(1-s)*o}}},p.LensFlarePlugin=function(){var e,t,i,r={};function n(t,i){var r=e.createProgram(),n=e.createShader(e.FRAGMENT_SHADER),a=e.createShader(e.VERTEX_SHADER),o="precision "+i+" float;\n";return e.shaderSource(n,o+t.fragmentShader),e.shaderSource(a,o+t.vertexShader),e.compileShader(n),e.compileShader(a),e.attachShader(r,n),e.attachShader(r,a),e.linkProgram(r),r}this.init=function(a){e=a.context,t=a,i=a.getPrecision(),r.vertices=new Float32Array(16),r.faces=new Uint16Array(6);var o=0;r.vertices[o++]=-1,r.vertices[o++]=-1,r.vertices[o++]=0,r.vertices[o++]=0,r.vertices[o++]=1,r.vertices[o++]=-1,r.vertices[o++]=1,r.vertices[o++]=0,r.vertices[o++]=1,r.vertices[o++]=1,r.vertices[o++]=1,r.vertices[o++]=1,r.vertices[o++]=-1,r.vertices[o++]=1,r.vertices[o++]=0,r.vertices[o++]=1,o=0,r.faces[o++]=0,r.faces[o++]=1,r.faces[o++]=2,r.faces[o++]=0,r.faces[o++]=2,r.faces[o++]=3,r.vertexBuffer=e.createBuffer(),r.elementBuffer=e.createBuffer(),e.bindBuffer(e.ARRAY_BUFFER,r.vertexBuffer),e.bufferData(e.ARRAY_BUFFER,r.vertices,e.STATIC_DRAW),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,r.elementBuffer),e.bufferData(e.ELEMENT_ARRAY_BUFFER,r.faces,e.STATIC_DRAW),r.tempTexture=e.createTexture(),r.occlusionTexture=e.createTexture(),e.bindTexture(e.TEXTURE_2D,r.tempTexture),e.texImage2D(e.TEXTURE_2D,0,e.RGB,16,16,0,e.RGB,e.UNSIGNED_BYTE,null),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST),e.bindTexture(e.TEXTURE_2D,r.occlusionTexture),e.texImage2D(e.TEXTURE_2D,0,e.RGBA,16,16,0,e.RGBA,e.UNSIGNED_BYTE,null),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST),e.getParameter(e.MAX_VERTEX_TEXTURE_IMAGE_UNITS)<=0?(r.hasVertexTexture=!1,r.program=n(p.ShaderFlares.lensFlare,i)):(r.hasVertexTexture=!0,r.program=n(p.ShaderFlares.lensFlareVertexTexture,i)),r.attributes={},r.uniforms={},r.attributes.vertex=e.getAttribLocation(r.program,"position"),r.attributes.uv=e.getAttribLocation(r.program,"uv"),r.uniforms.renderType=e.getUniformLocation(r.program,"renderType"),r.uniforms.map=e.getUniformLocation(r.program,"map"),r.uniforms.occlusionMap=e.getUniformLocation(r.program,"occlusionMap"),r.uniforms.opacity=e.getUniformLocation(r.program,"opacity"),r.uniforms.color=e.getUniformLocation(r.program,"color"),r.uniforms.scale=e.getUniformLocation(r.program,"scale"),r.uniforms.rotation=e.getUniformLocation(r.program,"rotation"),r.uniforms.screenPosition=e.getUniformLocation(r.program,"screenPosition")},this.render=function(i,n,a,o){var s=i.__webglFlares,l=s.length;if(l){var h,c,u,d,f,m=new p.Vector3,g=o/a,v=.5*a,y=.5*o,x=16/o,_=new p.Vector2(x*g,x),w=new p.Vector3(1,1,0),b=new p.Vector2(1,1),M=r.uniforms,S=r.attributes;for(e.useProgram(r.program),e.enableVertexAttribArray(r.attributes.vertex),e.enableVertexAttribArray(r.attributes.uv),e.uniform1i(M.occlusionMap,0),e.uniform1i(M.map,1),e.bindBuffer(e.ARRAY_BUFFER,r.vertexBuffer),e.vertexAttribPointer(S.vertex,2,e.FLOAT,!1,16,0),e.vertexAttribPointer(S.uv,2,e.FLOAT,!1,16,8),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,r.elementBuffer),e.disable(e.CULL_FACE),e.depthMask(!1),h=0;h<l;h++)if(x=16/o,_.set(x*g,x),d=s[h],m.set(d.matrixWorld.elements[12],d.matrixWorld.elements[13],d.matrixWorld.elements[14]),m.applyMatrix4(n.matrixWorldInverse),m.applyProjection(n.projectionMatrix),w.copy(m),b.x=w.x*v+v,b.y=w.y*y+y,r.hasVertexTexture||b.x>0&&b.x<a&&b.y>0&&b.y<o)for(e.activeTexture(e.TEXTURE1),e.bindTexture(e.TEXTURE_2D,r.tempTexture),e.copyTexImage2D(e.TEXTURE_2D,0,e.RGB,b.x-8,b.y-8,16,16,0),e.uniform1i(M.renderType,0),e.uniform2f(M.scale,_.x,_.y),e.uniform3f(M.screenPosition,w.x,w.y,w.z),e.disable(e.BLEND),e.enable(e.DEPTH_TEST),e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0),e.activeTexture(e.TEXTURE0),e.bindTexture(e.TEXTURE_2D,r.occlusionTexture),e.copyTexImage2D(e.TEXTURE_2D,0,e.RGBA,b.x-8,b.y-8,16,16,0),e.uniform1i(M.renderType,1),e.disable(e.DEPTH_TEST),e.activeTexture(e.TEXTURE1),e.bindTexture(e.TEXTURE_2D,r.tempTexture),e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0),d.positionScreen.copy(w),d.customUpdateCallback?d.customUpdateCallback(d):d.updateLensFlares(),e.uniform1i(M.renderType,2),e.enable(e.BLEND),c=0,u=d.lensFlares.length;c<u;c++)(f=d.lensFlares[c]).opacity>.001&&f.scale>.001&&(w.x=f.x,w.y=f.y,w.z=f.z,x=f.size*f.scale/o,_.x=x*g,_.y=x,e.uniform3f(M.screenPosition,w.x,w.y,w.z),e.uniform2f(M.scale,_.x,_.y),e.uniform1f(M.rotation,f.rotation),e.uniform1f(M.opacity,f.opacity),e.uniform3f(M.color,f.color.r,f.color.g,f.color.b),t.setBlending(f.blending,f.blendEquation,f.blendSrc,f.blendDst),t.setTexture(f.texture,1),e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0));e.enable(e.CULL_FACE),e.enable(e.DEPTH_TEST),e.depthMask(!0)}}},p.ShadowMapPlugin=function(){var e,t,i,r,n,a,o=new p.Frustum,s=new p.Matrix4,l=new p.Vector3,h=new p.Vector3;function c(e,t){var i=new p.DirectionalLight;i.isVirtual=!0,i.onlyShadow=!0,i.castShadow=!0,i.shadowCameraNear=e.shadowCameraNear,i.shadowCameraFar=e.shadowCameraFar,i.shadowCameraLeft=e.shadowCameraLeft,i.shadowCameraRight=e.shadowCameraRight,i.shadowCameraBottom=e.shadowCameraBottom,i.shadowCameraTop=e.shadowCameraTop,i.shadowCameraVisible=e.shadowCameraVisible,i.shadowDarkness=e.shadowDarkness,i.shadowBias=e.shadowCascadeBias[t],i.shadowMapWidth=e.shadowCascadeWidth[t],i.shadowMapHeight=e.shadowCascadeHeight[t],i.pointsWorld=[],i.pointsFrustum=[];for(var r=i.pointsWorld,n=i.pointsFrustum,a=0;a<8;a++)r[a]=new p.Vector3,n[a]=new p.Vector3;var o=e.shadowCascadeNearZ[t],s=e.shadowCascadeFarZ[t];return n[0].set(-1,-1,o),n[1].set(1,-1,o),n[2].set(-1,1,o),n[3].set(1,1,o),n[4].set(-1,-1,s),n[5].set(1,-1,s),n[6].set(-1,1,s),n[7].set(1,1,s),i}function u(e,t){var i=e.shadowCascadeArray[t];i.position.copy(e.position),i.target.position.copy(e.target.position),i.lookAt(i.target),i.shadowCameraVisible=e.shadowCameraVisible,i.shadowDarkness=e.shadowDarkness,i.shadowBias=e.shadowCascadeBias[t];var r=e.shadowCascadeNearZ[t],n=e.shadowCascadeFarZ[t],a=i.pointsFrustum;a[0].z=r,a[1].z=r,a[2].z=r,a[3].z=r,a[4].z=n,a[5].z=n,a[6].z=n,a[7].z=n}function d(e,t){var i=t.shadowCamera,r=t.pointsFrustum,n=t.pointsWorld;l.set(1/0,1/0,1/0),h.set(-1/0,-1/0,-1/0);for(var a=0;a<8;a++){var o=n[a];o.copy(r[a]),p.ShadowMapPlugin.__projector.unprojectVector(o,e),o.applyMatrix4(i.matrixWorldInverse),o.x<l.x&&(l.x=o.x),o.x>h.x&&(h.x=o.x),o.y<l.y&&(l.y=o.y),o.y>h.y&&(h.y=o.y),o.z<l.z&&(l.z=o.z),o.z>h.z&&(h.z=o.z)}i.left=l.x,i.right=h.x,i.top=h.y,i.bottom=l.y,i.updateProjectionMatrix()}function f(e){return e.material instanceof p.MeshFaceMaterial?e.material.materials[0]:e.material}this.init=function(o){e=o.context,t=o;var s=p.ShaderLib.depthRGBA,l=p.UniformsUtils.clone(s.uniforms);i=new p.ShaderMaterial({fragmentShader:s.fragmentShader,vertexShader:s.vertexShader,uniforms:l}),r=new p.ShaderMaterial({fragmentShader:s.fragmentShader,vertexShader:s.vertexShader,uniforms:l,morphTargets:!0}),n=new p.ShaderMaterial({fragmentShader:s.fragmentShader,vertexShader:s.vertexShader,uniforms:l,skinning:!0}),a=new p.ShaderMaterial({fragmentShader:s.fragmentShader,vertexShader:s.vertexShader,uniforms:l,morphTargets:!0,skinning:!0}),i._shadowPass=!0,r._shadowPass=!0,n._shadowPass=!0,a._shadowPass=!0},this.render=function(e,i){t.shadowMapEnabled&&t.shadowMapAutoUpdate&&this.update(e,i)},this.update=function(l,h){var m,g,v,y,x,_,w,b,M,S,T,E,A,C,L=[],R=0;for(e.clearColor(1,1,1,1),e.disable(e.BLEND),e.enable(e.CULL_FACE),e.frontFace(e.CCW),t.shadowMapCullFace===p.CullFaceFront?e.cullFace(e.FRONT):e.cullFace(e.BACK),t.setDepthTest(!0),m=0,g=l.__lights.length;m<g;m++)if((A=l.__lights[m]).castShadow)if(A instanceof p.DirectionalLight&&A.shadowCascade)for(x=0;x<A.shadowCascadeCount;x++){var P;if(A.shadowCascadeArray[x])P=A.shadowCascadeArray[x];else{(P=c(A,x)).originalCamera=h;var D=new p.Gyroscope;D.position=A.shadowCascadeOffset,D.add(P),D.add(P.target),h.add(D),A.shadowCascadeArray[x]=P,console.log("Created virtualLight",P)}u(A,x),L[R]=P,R++}else L[R]=A,R++;for(m=0,g=L.length;m<g;m++){if(!(A=L[m]).shadowMap){var F=p.LinearFilter;t.shadowMapType===p.PCFSoftShadowMap&&(F=p.NearestFilter);var z={minFilter:F,magFilter:F,format:p.RGBAFormat};A.shadowMap=new p.WebGLRenderTarget(A.shadowMapWidth,A.shadowMapHeight,z),A.shadowMapSize=new p.Vector2(A.shadowMapWidth,A.shadowMapHeight),A.shadowMatrix=new p.Matrix4}if(!A.shadowCamera){if(A instanceof p.SpotLight)A.shadowCamera=new p.PerspectiveCamera(A.shadowCameraFov,A.shadowMapWidth/A.shadowMapHeight,A.shadowCameraNear,A.shadowCameraFar);else{if(!(A instanceof p.DirectionalLight)){console.error("Unsupported light type for shadow");continue}A.shadowCamera=new p.OrthographicCamera(A.shadowCameraLeft,A.shadowCameraRight,A.shadowCameraTop,A.shadowCameraBottom,A.shadowCameraNear,A.shadowCameraFar)}l.add(A.shadowCamera),t.autoUpdateScene&&l.updateMatrixWorld()}for(A.shadowCameraVisible&&!A.cameraHelper&&(A.cameraHelper=new p.CameraHelper(A.shadowCamera),A.shadowCamera.add(A.cameraHelper)),A.isVirtual&&P.originalCamera==h&&d(h,A),_=A.shadowMap,w=A.shadowMatrix,(b=A.shadowCamera).position.copy(A.matrixWorld.getPosition()),b.lookAt(A.target.matrixWorld.getPosition()),b.updateMatrixWorld(),b.matrixWorldInverse.getInverse(b.matrixWorld),A.cameraHelper&&(A.cameraHelper.visible=A.shadowCameraVisible),A.shadowCameraVisible&&A.cameraHelper.update(),w.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),w.multiply(b.projectionMatrix),w.multiply(b.matrixWorldInverse),s.multiplyMatrices(b.projectionMatrix,b.matrixWorldInverse),o.setFromMatrix(s),t.setRenderTarget(_),t.clear(),v=0,y=(C=l.__webglObjects).length;v<y;v++)E=(T=C[v]).object,T.render=!1,E.visible&&E.castShadow&&((E instanceof p.Mesh||E instanceof p.ParticleSystem)&&E.frustumCulled&&!o.intersectsObject(E)||(E._modelViewMatrix.multiplyMatrices(b.matrixWorldInverse,E.matrixWorld),T.render=!0));var I,N,U;for(v=0,y=C.length;v<y;v++)(T=C[v]).render&&(E=T.object,M=T.buffer,I=f(E),N=E.geometry.morphTargets.length>0&&I.morphTargets,U=E instanceof p.SkinnedMesh&&I.skinning,S=E.customDepthMaterial?E.customDepthMaterial:U?N?a:n:N?r:i,M instanceof p.BufferGeometry?t.renderBufferDirect(b,l.__lights,null,S,M,E):t.renderBuffer(b,l.__lights,null,S,M,E));for(v=0,y=(C=l.__webglObjectsImmediate).length;v<y;v++)(E=(T=C[v]).object).visible&&E.castShadow&&(E._modelViewMatrix.multiplyMatrices(b.matrixWorldInverse,E.matrixWorld),t.renderImmediateObject(b,l.__lights,null,i,E))}var B=t.getClearColor(),O=t.getClearAlpha();e.clearColor(B.r,B.g,B.b,O),e.enable(e.BLEND),t.shadowMapCullFace===p.CullFaceFront&&e.cullFace(e.BACK)}},p.ShadowMapPlugin.__projector=new p.Projector,p.SpritePlugin=function(){var e,t,i,r={};function n(e,t){return e.z!==t.z?t.z-e.z:t.id-e.id}this.init=function(n){e=n.context,t=n,i=n.getPrecision(),r.vertices=new Float32Array(16),r.faces=new Uint16Array(6);var a,o,s,l,h,c,u=0;r.vertices[u++]=-1,r.vertices[u++]=-1,r.vertices[u++]=0,r.vertices[u++]=0,r.vertices[u++]=1,r.vertices[u++]=-1,r.vertices[u++]=1,r.vertices[u++]=0,r.vertices[u++]=1,r.vertices[u++]=1,r.vertices[u++]=1,r.vertices[u++]=1,r.vertices[u++]=-1,r.vertices[u++]=1,r.vertices[u++]=0,r.vertices[u++]=1,u=0,r.faces[u++]=0,r.faces[u++]=1,r.faces[u++]=2,r.faces[u++]=0,r.faces[u++]=2,r.faces[u++]=3,r.vertexBuffer=e.createBuffer(),r.elementBuffer=e.createBuffer(),e.bindBuffer(e.ARRAY_BUFFER,r.vertexBuffer),e.bufferData(e.ARRAY_BUFFER,r.vertices,e.STATIC_DRAW),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,r.elementBuffer),e.bufferData(e.ELEMENT_ARRAY_BUFFER,r.faces,e.STATIC_DRAW),r.program=(a=p.ShaderSprite.sprite,o=i,s=e.createProgram(),l=e.createShader(e.FRAGMENT_SHADER),h=e.createShader(e.VERTEX_SHADER),c="precision "+o+" float;\n",e.shaderSource(l,c+a.fragmentShader),e.shaderSource(h,c+a.vertexShader),e.compileShader(l),e.compileShader(h),e.attachShader(s,l),e.attachShader(s,h),e.linkProgram(s),s),r.attributes={},r.uniforms={},r.attributes.position=e.getAttribLocation(r.program,"position"),r.attributes.uv=e.getAttribLocation(r.program,"uv"),r.uniforms.uvOffset=e.getUniformLocation(r.program,"uvOffset"),r.uniforms.uvScale=e.getUniformLocation(r.program,"uvScale"),r.uniforms.rotation=e.getUniformLocation(r.program,"rotation"),r.uniforms.scale=e.getUniformLocation(r.program,"scale"),r.uniforms.alignment=e.getUniformLocation(r.program,"alignment"),r.uniforms.color=e.getUniformLocation(r.program,"color"),r.uniforms.map=e.getUniformLocation(r.program,"map"),r.uniforms.opacity=e.getUniformLocation(r.program,"opacity"),r.uniforms.useScreenCoordinates=e.getUniformLocation(r.program,"useScreenCoordinates"),r.uniforms.sizeAttenuation=e.getUniformLocation(r.program,"sizeAttenuation"),r.uniforms.screenPosition=e.getUniformLocation(r.program,"screenPosition"),r.uniforms.modelViewMatrix=e.getUniformLocation(r.program,"modelViewMatrix"),r.uniforms.projectionMatrix=e.getUniformLocation(r.program,"projectionMatrix"),r.uniforms.fogType=e.getUniformLocation(r.program,"fogType"),r.uniforms.fogDensity=e.getUniformLocation(r.program,"fogDensity"),r.uniforms.fogNear=e.getUniformLocation(r.program,"fogNear"),r.uniforms.fogFar=e.getUniformLocation(r.program,"fogFar"),r.uniforms.fogColor=e.getUniformLocation(r.program,"fogColor"),r.uniforms.alphaTest=e.getUniformLocation(r.program,"alphaTest")},this.render=function(i,a,o,s){var l=i.__webglSprites,h=l.length;if(h){var c=r.attributes,u=r.uniforms,d=s/o,f=.5*o,m=.5*s;e.useProgram(r.program),e.enableVertexAttribArray(c.position),e.enableVertexAttribArray(c.uv),e.disable(e.CULL_FACE),e.enable(e.BLEND),e.bindBuffer(e.ARRAY_BUFFER,r.vertexBuffer),e.vertexAttribPointer(c.position,2,e.FLOAT,!1,16,0),e.vertexAttribPointer(c.uv,2,e.FLOAT,!1,16,8),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,r.elementBuffer),e.uniformMatrix4fv(u.projectionMatrix,!1,a.projectionMatrix.elements),e.activeTexture(e.TEXTURE0),e.uniform1i(u.map,0);var g=0,v=0,y=i.fog;y?(e.uniform3f(u.fogColor,y.color.r,y.color.g,y.color.b),y instanceof p.Fog?(e.uniform1f(u.fogNear,y.near),e.uniform1f(u.fogFar,y.far),e.uniform1i(u.fogType,1),g=1,v=1):y instanceof p.FogExp2&&(e.uniform1f(u.fogDensity,y.density),e.uniform1i(u.fogType,2),g=2,v=2)):(e.uniform1i(u.fogType,0),g=0,v=0);var x,_,w,b,M,S=[];for(x=0;x<h;x++)w=(_=l[x]).material,_.visible&&0!==w.opacity&&(w.useScreenCoordinates?_.z=-_.position.z:(_._modelViewMatrix.multiplyMatrices(a.matrixWorldInverse,_.matrixWorld),_.z=-_._modelViewMatrix.elements[14]));for(l.sort(n),x=0;x<h;x++)w=(_=l[x]).material,_.visible&&0!==w.opacity&&w.map&&w.map.image&&w.map.image.width&&(e.uniform1f(u.alphaTest,w.alphaTest),!0===w.useScreenCoordinates?(e.uniform1i(u.useScreenCoordinates,1),e.uniform3f(u.screenPosition,(_.position.x*t.devicePixelRatio-f)/f,(m-_.position.y*t.devicePixelRatio)/m,Math.max(0,Math.min(1,_.position.z))),S[0]=t.devicePixelRatio,S[1]=t.devicePixelRatio):(e.uniform1i(u.useScreenCoordinates,0),e.uniform1i(u.sizeAttenuation,w.sizeAttenuation?1:0),e.uniformMatrix4fv(u.modelViewMatrix,!1,_._modelViewMatrix.elements),S[0]=1,S[1]=1),g!==(M=i.fog&&w.fog?v:0)&&(e.uniform1i(u.fogType,M),g=M),b=1/(w.scaleByViewport?s:1),S[0]*=b*d*_.scale.x,S[1]*=b*_.scale.y,e.uniform2f(u.uvScale,w.uvScale.x,w.uvScale.y),e.uniform2f(u.uvOffset,w.uvOffset.x,w.uvOffset.y),e.uniform2f(u.alignment,w.alignment.x,w.alignment.y),e.uniform1f(u.opacity,w.opacity),e.uniform3f(u.color,w.color.r,w.color.g,w.color.b),e.uniform1f(u.rotation,_.rotation),e.uniform2fv(u.scale,S),t.setBlending(w.blending,w.blendEquation,w.blendSrc,w.blendDst),t.setDepthTest(w.depthTest),t.setDepthWrite(w.depthWrite),t.setTexture(w.map,0),e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0));e.enable(e.CULL_FACE)}}},p.DepthPassPlugin=function(){this.enabled=!1,this.renderTarget=null;var e,t,i,r,n,a,o=new p.Frustum,s=new p.Matrix4;function l(e){return e.material instanceof p.MeshFaceMaterial?e.material.materials[0]:e.material}this.init=function(o){e=o.context,t=o;var s=p.ShaderLib.depthRGBA,l=p.UniformsUtils.clone(s.uniforms);i=new p.ShaderMaterial({fragmentShader:s.fragmentShader,vertexShader:s.vertexShader,uniforms:l}),r=new p.ShaderMaterial({fragmentShader:s.fragmentShader,vertexShader:s.vertexShader,uniforms:l,morphTargets:!0}),n=new p.ShaderMaterial({fragmentShader:s.fragmentShader,vertexShader:s.vertexShader,uniforms:l,skinning:!0}),a=new p.ShaderMaterial({fragmentShader:s.fragmentShader,vertexShader:s.vertexShader,uniforms:l,morphTargets:!0,skinning:!0}),i._shadowPass=!0,r._shadowPass=!0,n._shadowPass=!0,a._shadowPass=!0},this.render=function(e,t){this.enabled&&this.update(e,t)},this.update=function(h,c){var u,d,f,m,g,v,y,x,_,w;for(e.clearColor(1,1,1,1),e.disable(e.BLEND),t.setDepthTest(!0),t.autoUpdateScene&&h.updateMatrixWorld(),c.matrixWorldInverse.getInverse(c.matrixWorld),s.multiplyMatrices(c.projectionMatrix,c.matrixWorldInverse),o.setFromMatrix(s),t.setRenderTarget(this.renderTarget),t.clear(),u=0,d=(y=h.__webglObjects).length;u<d;u++)v=(g=y[u]).object,g.render=!1,v.visible&&((v instanceof p.Mesh||v instanceof p.ParticleSystem)&&v.frustumCulled&&!o.intersectsObject(v)||(v._modelViewMatrix.multiplyMatrices(c.matrixWorldInverse,v.matrixWorld),g.render=!0));for(u=0,d=y.length;u<d;u++)if((g=y[u]).render){if(v=g.object,f=g.buffer,v instanceof p.ParticleSystem&&!v.customDepthMaterial)continue;(x=l(v))&&t.setMaterialFaces(v.material),_=v.geometry.morphTargets.length>0&&x.morphTargets,w=v instanceof p.SkinnedMesh&&x.skinning,m=v.customDepthMaterial?v.customDepthMaterial:w?_?a:n:_?r:i,f instanceof p.BufferGeometry?t.renderBufferDirect(c,h.__lights,null,m,f,v):t.renderBuffer(c,h.__lights,null,m,f,v)}for(u=0,d=(y=h.__webglObjectsImmediate).length;u<d;u++)(v=(g=y[u]).object).visible&&(v._modelViewMatrix.multiplyMatrices(c.matrixWorldInverse,v.matrixWorld),t.renderImmediateObject(c,h.__lights,null,i,v));var b=t.getClearColor(),M=t.getClearAlpha();e.clearColor(b.r,b.g,b.b,M),e.enable(e.BLEND)}},p.ShaderFlares={lensFlareVertexTexture:{vertexShader:["uniform lowp int renderType;","uniform vec3 screenPosition;","uniform vec2 scale;","uniform float rotation;","uniform sampler2D occlusionMap;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","varying float vVisibility;","void main() {","vUV = uv;","vec2 pos = position;","if( renderType == 2 ) {","vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) ) +","texture2D( occlusionMap, vec2( 0.5, 0.1 ) ) +","texture2D( occlusionMap, vec2( 0.9, 0.1 ) ) +","texture2D( occlusionMap, vec2( 0.9, 0.5 ) ) +","texture2D( occlusionMap, vec2( 0.9, 0.9 ) ) +","texture2D( occlusionMap, vec2( 0.5, 0.9 ) ) +","texture2D( occlusionMap, vec2( 0.1, 0.9 ) ) +","texture2D( occlusionMap, vec2( 0.1, 0.5 ) ) +","texture2D( occlusionMap, vec2( 0.5, 0.5 ) );","vVisibility = (       visibility.r / 9.0 ) *","( 1.0 - visibility.g / 9.0 ) *","(       visibility.b / 9.0 ) *","( 1.0 - visibility.a / 9.0 );","pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;","pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;","}","gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );","}"].join("\n"),fragmentShader:["uniform lowp int renderType;","uniform sampler2D map;","uniform float opacity;","uniform vec3 color;","varying vec2 vUV;","varying float vVisibility;","void main() {","if( renderType == 0 ) {","gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );","} else if( renderType == 1 ) {","gl_FragColor = texture2D( map, vUV );","} else {","vec4 texture = texture2D( map, vUV );","texture.a *= opacity * vVisibility;","gl_FragColor = texture;","gl_FragColor.rgb *= color;","}","}"].join("\n")},lensFlare:{vertexShader:["uniform lowp int renderType;","uniform vec3 screenPosition;","uniform vec2 scale;","uniform float rotation;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","void main() {","vUV = uv;","vec2 pos = position;","if( renderType == 2 ) {","pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;","pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;","}","gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );","}"].join("\n"),fragmentShader:["precision mediump float;","uniform lowp int renderType;","uniform sampler2D map;","uniform sampler2D occlusionMap;","uniform float opacity;","uniform vec3 color;","varying vec2 vUV;","void main() {","if( renderType == 0 ) {","gl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );","} else if( renderType == 1 ) {","gl_FragColor = texture2D( map, vUV );","} else {","float visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a +","texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a +","texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a +","texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;","visibility = ( 1.0 - visibility / 4.0 );","vec4 texture = texture2D( map, vUV );","texture.a *= opacity * visibility;","gl_FragColor = texture;","gl_FragColor.rgb *= color;","}","}"].join("\n")}},p.ShaderSprite={sprite:{vertexShader:["uniform int useScreenCoordinates;","uniform int sizeAttenuation;","uniform vec3 screenPosition;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform float rotation;","uniform vec2 scale;","uniform vec2 alignment;","uniform vec2 uvOffset;","uniform vec2 uvScale;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","void main() {","vUV = uvOffset + uv * uvScale;","vec2 alignedPosition = position + alignment;","vec2 rotatedPosition;","rotatedPosition.x = ( cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y ) * scale.x;","rotatedPosition.y = ( sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y ) * scale.y;","vec4 finalPosition;","if( useScreenCoordinates != 0 ) {","finalPosition = vec4( screenPosition.xy + rotatedPosition, screenPosition.z, 1.0 );","} else {","finalPosition = projectionMatrix * modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );","finalPosition.xy += rotatedPosition * ( sizeAttenuation == 1 ? 1.0 : finalPosition.z );","}","gl_Position = finalPosition;","}"].join("\n"),fragmentShader:["uniform vec3 color;","uniform sampler2D map;","uniform float opacity;","uniform int fogType;","uniform vec3 fogColor;","uniform float fogDensity;","uniform float fogNear;","uniform float fogFar;","uniform float alphaTest;","varying vec2 vUV;","void main() {","vec4 texture = texture2D( map, vUV );","if ( texture.a < alphaTest ) discard;","gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );","if ( fogType > 0 ) {","float depth = gl_FragCoord.z / gl_FragCoord.w;","float fogFactor = 0.0;","if ( fogType == 1 ) {","fogFactor = smoothstep( fogNear, fogFar, depth );","} else {","const float LOG2 = 1.442695;","float fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );","fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );","}","gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );","}","}"].join("\n")}},void 0!==e&&e.exports&&(t=e.exports=p),t.THREE=p},Juap:function(e,t){},njOO:function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=i("BixO"),n=i("CMVF"),a=100,o=50,s=50,l=void 0,h=void 0,c=void 0,u=void 0,d=void 0,p=0,f=50,m=-200;var g={initWave:function(e){(l=new n.PerspectiveCamera(100,window.innerWidth/window.innerHeight,20,2e3)).position.z=500,h=new n.Scene;var t=2*Math.PI;u=new Array;for(var i=new n.ParticleCanvasMaterial({color:7698047,program:function(e){e.beginPath(),e.arc(0,0,1,0,t,!0),e.fill()}}),r=0,p=0;p<o;p++)for(var f=0;f<s;f++)(d=u[r++]=new n.Particle(i)).position.x=p*a-o*a/2,d.position.z=f*a-s*a/2,h.add(d);(c=new n.CanvasRenderer).setSize(window.innerWidth,window.innerHeight),document.getElementById(e).appendChild(c.domElement)},animate:function e(){requestAnimationFrame(e),function(){l.position.x+=.05*(f-l.position.x),l.position.y+=.05*(-m-l.position.y),l.lookAt(h.position);for(var e=0,t=0;t<o;t++)for(var i=0;i<s;i++)(d=u[e++]).position.y=50*Math.sin(.3*(t+p))+50*Math.sin(.5*(i+p)),d.scale.x=d.scale.y=2*(Math.sin(.3*(t+p))+1)+2*(Math.sin(.5*(i+p))+1);c.render(h,l),p+=.06}()},onWindowResize:function(){l.aspect=window.innerWidth/window.innerHeight,l.updateProjectionMatrix(),c.setSize(window.innerWidth,window.innerHeight)}};
/**
 * @license
 * Copyright 2010-2022 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const v="139",y=0,x=1,_=2,w=1,b=2,M=3,S=0,T=1,E=2,A=1,C=0,L=1,R=2,P=3,D=4,F=5,z=100,I=101,N=102,U=103,B=104,O=200,V=201,H=202,G=203,k=204,W=205,j=206,X=207,q=208,Y=209,K=210,Z=0,J=1,Q=2,$=3,ee=4,te=5,ie=6,re=7,ne=0,ae=1,oe=2,se=0,le=1,he=2,ce=3,ue=4,de=5,pe=300,fe=301,me=302,ge=303,ve=304,ye=306,xe=1e3,_e=1001,we=1002,be=1003,Me=1004,Se=1005,Te=1006,Ee=1007,Ae=1008,Ce=1009,Le=1010,Re=1011,Pe=1012,De=1013,Fe=1014,ze=1015,Ie=1016,Ne=1017,Ue=1018,Be=1020,Oe=1021,Ve=1022,He=1023,Ge=1024,ke=1025,We=1026,je=1027,Xe=1028,qe=1029,Ye=1030,Ke=1031,Ze=1033,Je=33776,Qe=33777,$e=33778,et=33779,tt=35840,it=35841,rt=35842,nt=35843,at=36196,ot=37492,st=37496,lt=37808,ht=37809,ct=37810,ut=37811,dt=37812,pt=37813,ft=37814,mt=37815,gt=37816,vt=37817,yt=37818,xt=37819,_t=37820,wt=37821,bt=36492,Mt=2200,St=2201,Tt=2202,Et=2300,At=2301,Ct=2302,Lt=2400,Rt=2401,Pt=2402,Dt=2500,Ft=2501,zt=3e3,It=3001,Nt=3200,Ut=3201,Bt=0,Ot=1,Vt="srgb",Ht="srgb-linear",Gt=7680,kt=519,Wt=35044,jt=35048,Xt="300 es",qt=1035;class Yt{addEventListener(e,t){void 0===this._listeners&&(this._listeners={});const i=this._listeners;void 0===i[e]&&(i[e]=[]),-1===i[e].indexOf(t)&&i[e].push(t)}hasEventListener(e,t){if(void 0===this._listeners)return!1;const i=this._listeners;return void 0!==i[e]&&-1!==i[e].indexOf(t)}removeEventListener(e,t){if(void 0===this._listeners)return;const i=this._listeners[e];if(void 0!==i){const e=i.indexOf(t);-1!==e&&i.splice(e,1)}}dispatchEvent(e){if(void 0===this._listeners)return;const t=this._listeners[e.type];if(void 0!==t){e.target=this;const i=t.slice(0);for(let t=0,r=i.length;t<r;t++)i[t].call(this,e);e.target=null}}}const Kt=[];for(let e=0;e<256;e++)Kt[e]=(e<16?"0":"")+e.toString(16);const Zt=Math.PI/180,Jt=180/Math.PI;function Qt(){const e=4294967295*Math.random()|0,t=4294967295*Math.random()|0,i=4294967295*Math.random()|0,r=4294967295*Math.random()|0;return(Kt[255&e]+Kt[e>>8&255]+Kt[e>>16&255]+Kt[e>>24&255]+"-"+Kt[255&t]+Kt[t>>8&255]+"-"+Kt[t>>16&15|64]+Kt[t>>24&255]+"-"+Kt[63&i|128]+Kt[i>>8&255]+"-"+Kt[i>>16&255]+Kt[i>>24&255]+Kt[255&r]+Kt[r>>8&255]+Kt[r>>16&255]+Kt[r>>24&255]).toLowerCase()}function $t(e,t,i){return Math.max(t,Math.min(i,e))}function ei(e,t){return(e%t+t)%t}function ti(e,t,i){return(1-i)*e+i*t}function ii(e){return 0==(e&e-1)&&0!==e}function ri(e){return Math.pow(2,Math.floor(Math.log(e)/Math.LN2))}class ni{constructor(e=0,t=0){this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e,t){return void 0!==t?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this)}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e,t){return void 0!==t?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this)}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,i=this.y,r=e.elements;return this.x=r[0]*t+r[3]*i+r[6],this.y=r[1]*t+r[4]*i+r[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(t,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,i=this.y-e.y;return t*t+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t,i){return void 0!==i&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const i=Math.cos(t),r=Math.sin(t),n=this.x-e.x,a=this.y-e.y;return this.x=n*i-a*r+e.x,this.y=n*r+a*i+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}ni.prototype.isVector2=!0;class ai{constructor(){this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(e,t,i,r,n,a,o,s,l){const h=this.elements;return h[0]=e,h[1]=r,h[2]=o,h[3]=t,h[4]=n,h[5]=s,h[6]=i,h[7]=a,h[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,i=e.elements;return t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=i[3],t[4]=i[4],t[5]=i[5],t[6]=i[6],t[7]=i[7],t[8]=i[8],this}extractBasis(e,t,i){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const i=e.elements,r=t.elements,n=this.elements,a=i[0],o=i[3],s=i[6],l=i[1],h=i[4],c=i[7],u=i[2],d=i[5],p=i[8],f=r[0],m=r[3],g=r[6],v=r[1],y=r[4],x=r[7],_=r[2],w=r[5],b=r[8];return n[0]=a*f+o*v+s*_,n[3]=a*m+o*y+s*w,n[6]=a*g+o*x+s*b,n[1]=l*f+h*v+c*_,n[4]=l*m+h*y+c*w,n[7]=l*g+h*x+c*b,n[2]=u*f+d*v+p*_,n[5]=u*m+d*y+p*w,n[8]=u*g+d*x+p*b,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],i=e[1],r=e[2],n=e[3],a=e[4],o=e[5],s=e[6],l=e[7],h=e[8];return t*a*h-t*o*l-i*n*h+i*o*s+r*n*l-r*a*s}invert(){const e=this.elements,t=e[0],i=e[1],r=e[2],n=e[3],a=e[4],o=e[5],s=e[6],l=e[7],h=e[8],c=h*a-o*l,u=o*s-h*n,d=l*n-a*s,p=t*c+i*u+r*d;if(0===p)return this.set(0,0,0,0,0,0,0,0,0);const f=1/p;return e[0]=c*f,e[1]=(r*l-h*i)*f,e[2]=(o*i-r*a)*f,e[3]=u*f,e[4]=(h*t-r*s)*f,e[5]=(r*n-o*t)*f,e[6]=d*f,e[7]=(i*s-l*t)*f,e[8]=(a*t-i*n)*f,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,i,r,n,a,o){const s=Math.cos(n),l=Math.sin(n);return this.set(i*s,i*l,-i*(s*a+l*o)+a+e,-r*l,r*s,-r*(-l*a+s*o)+o+t,0,0,1),this}scale(e,t){const i=this.elements;return i[0]*=e,i[3]*=e,i[6]*=e,i[1]*=t,i[4]*=t,i[7]*=t,this}rotate(e){const t=Math.cos(e),i=Math.sin(e),r=this.elements,n=r[0],a=r[3],o=r[6],s=r[1],l=r[4],h=r[7];return r[0]=t*n+i*s,r[3]=t*a+i*l,r[6]=t*o+i*h,r[1]=-i*n+t*s,r[4]=-i*a+t*l,r[7]=-i*o+t*h,this}translate(e,t){const i=this.elements;return i[0]+=e*i[2],i[3]+=e*i[5],i[6]+=e*i[8],i[1]+=t*i[2],i[4]+=t*i[5],i[7]+=t*i[8],this}equals(e){const t=this.elements,i=e.elements;for(let e=0;e<9;e++)if(t[e]!==i[e])return!1;return!0}fromArray(e,t=0){for(let i=0;i<9;i++)this.elements[i]=e[i+t];return this}toArray(e=[],t=0){const i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e}clone(){return(new this.constructor).fromArray(this.elements)}}function oi(e){for(let t=e.length-1;t>=0;--t)if(e[t]>65535)return!0;return!1}ai.prototype.isMatrix3=!0;Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array;function si(e){return document.createElementNS("http://www.w3.org/1999/xhtml",e)}function li(e){return e<.04045?.0773993808*e:Math.pow(.9478672986*e+.0521327014,2.4)}function hi(e){return e<.0031308?12.92*e:1.055*Math.pow(e,.41666)-.055}const ci={[Vt]:{[Ht]:li},[Ht]:{[Vt]:hi}},ui={legacyMode:!0,get workingColorSpace(){return Ht},set workingColorSpace(e){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(e,t,i){if(this.legacyMode||t===i||!t||!i)return e;if(ci[t]&&void 0!==ci[t][i]){const r=ci[t][i];return e.r=r(e.r),e.g=r(e.g),e.b=r(e.b),e}throw new Error("Unsupported color space conversion.")},fromWorkingColorSpace:function(e,t){return this.convert(e,this.workingColorSpace,t)},toWorkingColorSpace:function(e,t){return this.convert(e,t,this.workingColorSpace)}},di={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},pi={r:0,g:0,b:0},fi={h:0,s:0,l:0},mi={h:0,s:0,l:0};function gi(e,t,i){return i<0&&(i+=1),i>1&&(i-=1),i<1/6?e+6*(t-e)*i:i<.5?t:i<2/3?e+6*(t-e)*(2/3-i):e}function vi(e,t){return t.r=e.r,t.g=e.g,t.b=e.b,t}class yi{constructor(e,t,i){return void 0===t&&void 0===i?this.set(e):this.setRGB(e,t,i)}set(e){return e&&e.isColor?this.copy(e):"number"==typeof e?this.setHex(e):"string"==typeof e&&this.setStyle(e),this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=Vt){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(255&e)/255,ui.toWorkingColorSpace(this,t),this}setRGB(e,t,i,r=Ht){return this.r=e,this.g=t,this.b=i,ui.toWorkingColorSpace(this,r),this}setHSL(e,t,i,r=Ht){if(e=ei(e,1),t=$t(t,0,1),i=$t(i,0,1),0===t)this.r=this.g=this.b=i;else{const r=i<=.5?i*(1+t):i+t-i*t,n=2*i-r;this.r=gi(n,r,e+1/3),this.g=gi(n,r,e),this.b=gi(n,r,e-1/3)}return ui.toWorkingColorSpace(this,r),this}setStyle(e,t=Vt){function i(t){void 0!==t&&parseFloat(t)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let r;if(r=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(e)){let e;const n=r[1],a=r[2];switch(n){case"rgb":case"rgba":if(e=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(255,parseInt(e[1],10))/255,this.g=Math.min(255,parseInt(e[2],10))/255,this.b=Math.min(255,parseInt(e[3],10))/255,ui.toWorkingColorSpace(this,t),i(e[4]),this;if(e=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(100,parseInt(e[1],10))/100,this.g=Math.min(100,parseInt(e[2],10))/100,this.b=Math.min(100,parseInt(e[3],10))/100,ui.toWorkingColorSpace(this,t),i(e[4]),this;break;case"hsl":case"hsla":if(e=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a)){const r=parseFloat(e[1])/360,n=parseInt(e[2],10)/100,a=parseInt(e[3],10)/100;return i(e[4]),this.setHSL(r,n,a,t)}}}else if(r=/^\#([A-Fa-f\d]+)$/.exec(e)){const e=r[1],i=e.length;if(3===i)return this.r=parseInt(e.charAt(0)+e.charAt(0),16)/255,this.g=parseInt(e.charAt(1)+e.charAt(1),16)/255,this.b=parseInt(e.charAt(2)+e.charAt(2),16)/255,ui.toWorkingColorSpace(this,t),this;if(6===i)return this.r=parseInt(e.charAt(0)+e.charAt(1),16)/255,this.g=parseInt(e.charAt(2)+e.charAt(3),16)/255,this.b=parseInt(e.charAt(4)+e.charAt(5),16)/255,ui.toWorkingColorSpace(this,t),this}return e&&e.length>0?this.setColorName(e,t):this}setColorName(e,t=Vt){const i=di[e.toLowerCase()];return void 0!==i?this.setHex(i,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=li(e.r),this.g=li(e.g),this.b=li(e.b),this}copyLinearToSRGB(e){return this.r=hi(e.r),this.g=hi(e.g),this.b=hi(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=Vt){return ui.fromWorkingColorSpace(vi(this,pi),e),$t(255*pi.r,0,255)<<16^$t(255*pi.g,0,255)<<8^$t(255*pi.b,0,255)<<0}getHexString(e=Vt){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=Ht){ui.fromWorkingColorSpace(vi(this,pi),t);const i=pi.r,r=pi.g,n=pi.b,a=Math.max(i,r,n),o=Math.min(i,r,n);let s,l;const h=(o+a)/2;if(o===a)s=0,l=0;else{const e=a-o;switch(l=h<=.5?e/(a+o):e/(2-a-o),a){case i:s=(r-n)/e+(r<n?6:0);break;case r:s=(n-i)/e+2;break;case n:s=(i-r)/e+4}s/=6}return e.h=s,e.s=l,e.l=h,e}getRGB(e,t=Ht){return ui.fromWorkingColorSpace(vi(this,pi),t),e.r=pi.r,e.g=pi.g,e.b=pi.b,e}getStyle(e=Vt){return ui.fromWorkingColorSpace(vi(this,pi),e),e!==Vt?`color(${e} ${pi.r} ${pi.g} ${pi.b})`:`rgb(${255*pi.r|0},${255*pi.g|0},${255*pi.b|0})`}offsetHSL(e,t,i){return this.getHSL(fi),fi.h+=e,fi.s+=t,fi.l+=i,this.setHSL(fi.h,fi.s,fi.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,i){return this.r=e.r+(t.r-e.r)*i,this.g=e.g+(t.g-e.g)*i,this.b=e.b+(t.b-e.b)*i,this}lerpHSL(e,t){this.getHSL(fi),e.getHSL(mi);const i=ti(fi.h,mi.h,t),r=ti(fi.s,mi.s,t),n=ti(fi.l,mi.l,t);return this.setHSL(i,r,n),this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),!0===e.normalized&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}}let xi;yi.NAMES=di,yi.prototype.isColor=!0,yi.prototype.r=1,yi.prototype.g=1,yi.prototype.b=1;class _i{static getDataURL(e){if(/^data:/i.test(e.src))return e.src;if("undefined"==typeof HTMLCanvasElement)return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{void 0===xi&&(xi=si("canvas")),xi.width=e.width,xi.height=e.height;const i=xi.getContext("2d");e instanceof ImageData?i.putImageData(e,0,0):i.drawImage(e,0,0,e.width,e.height),t=xi}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap){const t=si("canvas");t.width=e.width,t.height=e.height;const i=t.getContext("2d");i.drawImage(e,0,0,e.width,e.height);const r=i.getImageData(0,0,e.width,e.height),n=r.data;for(let e=0;e<n.length;e++)n[e]=255*li(n[e]/255);return i.putImageData(r,0,0),t}if(e.data){const t=e.data.slice(0);for(let e=0;e<t.length;e++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[e]=Math.floor(255*li(t[e]/255)):t[e]=li(t[e]);return{data:t,width:e.width,height:e.height}}return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}class wi{constructor(e=null){this.uuid=Qt(),this.data=e,this.version=0}set needsUpdate(e){!0===e&&this.version++}toJSON(e){const t=void 0===e||"string"==typeof e;if(!t&&void 0!==e.images[this.uuid])return e.images[this.uuid];const i={uuid:this.uuid,url:""},r=this.data;if(null!==r){let e;if(Array.isArray(r)){e=[];for(let t=0,i=r.length;t<i;t++)r[t].isDataTexture?e.push(bi(r[t].image)):e.push(bi(r[t]))}else e=bi(r);i.url=e}return t||(e.images[this.uuid]=i),i}}function bi(e){return"undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap?_i.getDataURL(e):e.data?{data:Array.prototype.slice.call(e.data),width:e.width,height:e.height,type:e.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}wi.prototype.isSource=!0;let Mi=0;class Si extends Yt{constructor(e=Si.DEFAULT_IMAGE,t=Si.DEFAULT_MAPPING,i=_e,r=_e,n=Te,a=Ae,o=He,s=Ce,l=1,h=zt){super(),Object.defineProperty(this,"id",{value:Mi++}),this.uuid=Qt(),this.name="",this.source=new wi(e),this.mipmaps=[],this.mapping=t,this.wrapS=i,this.wrapT=r,this.magFilter=n,this.minFilter=a,this.anisotropy=l,this.format=o,this.internalFormat=null,this.type=s,this.offset=new ni(0,0),this.repeat=new ni(1,1),this.center=new ni(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new ai,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=h,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(e){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return(new this.constructor).copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=void 0===e||"string"==typeof e;if(!t&&void 0!==e.textures[this.uuid])return e.textures[this.uuid];const i={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return"{}"!==JSON.stringify(this.userData)&&(i.userData=this.userData),t||(e.textures[this.uuid]=i),i}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==pe)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case xe:e.x=e.x-Math.floor(e.x);break;case _e:e.x=e.x<0?0:1;break;case we:1===Math.abs(Math.floor(e.x)%2)?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x)}if(e.y<0||e.y>1)switch(this.wrapT){case xe:e.y=e.y-Math.floor(e.y);break;case _e:e.y=e.y<0?0:1;break;case we:1===Math.abs(Math.floor(e.y)%2)?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y)}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){!0===e&&(this.version++,this.source.needsUpdate=!0)}}Si.DEFAULT_IMAGE=null,Si.DEFAULT_MAPPING=pe,Si.prototype.isTexture=!0;class Ti{constructor(e=0,t=0,i=0,r=1){this.x=e,this.y=t,this.z=i,this.w=r}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,i,r){return this.x=e,this.y=t,this.z=i,this.w=r,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0!==e.w?e.w:1,this}add(e,t){return void 0!==t?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e,t){return void 0!==t?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,i=this.y,r=this.z,n=this.w,a=e.elements;return this.x=a[0]*t+a[4]*i+a[8]*r+a[12]*n,this.y=a[1]*t+a[5]*i+a[9]*r+a[13]*n,this.z=a[2]*t+a[6]*i+a[10]*r+a[14]*n,this.w=a[3]*t+a[7]*i+a[11]*r+a[15]*n,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,i,r,n;const a=e.elements,o=a[0],s=a[4],l=a[8],h=a[1],c=a[5],u=a[9],d=a[2],p=a[6],f=a[10];if(Math.abs(s-h)<.01&&Math.abs(l-d)<.01&&Math.abs(u-p)<.01){if(Math.abs(s+h)<.1&&Math.abs(l+d)<.1&&Math.abs(u+p)<.1&&Math.abs(o+c+f-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const e=(o+1)/2,a=(c+1)/2,m=(f+1)/2,g=(s+h)/4,v=(l+d)/4,y=(u+p)/4;return e>a&&e>m?e<.01?(i=0,r=.707106781,n=.707106781):(r=g/(i=Math.sqrt(e)),n=v/i):a>m?a<.01?(i=.707106781,r=0,n=.707106781):(i=g/(r=Math.sqrt(a)),n=y/r):m<.01?(i=.707106781,r=.707106781,n=0):(i=v/(n=Math.sqrt(m)),r=y/n),this.set(i,r,n,t),this}let m=Math.sqrt((p-u)*(p-u)+(l-d)*(l-d)+(h-s)*(h-s));return Math.abs(m)<.001&&(m=1),this.x=(p-u)/m,this.y=(l-d)/m,this.z=(h-s)/m,this.w=Math.acos((o+c+f-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(t,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this.z=e.z+(t.z-e.z)*i,this.w=e.w+(t.w-e.w)*i,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t,i){return void 0!==i&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}Ti.prototype.isVector4=!0;class Ei extends Yt{constructor(e,t,i={}){super(),this.width=e,this.height=t,this.depth=1,this.scissor=new Ti(0,0,e,t),this.scissorTest=!1,this.viewport=new Ti(0,0,e,t);const r={width:e,height:t,depth:1};this.texture=new Si(r,i.mapping,i.wrapS,i.wrapT,i.magFilter,i.minFilter,i.format,i.type,i.anisotropy,i.encoding),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=void 0!==i.generateMipmaps&&i.generateMipmaps,this.texture.internalFormat=void 0!==i.internalFormat?i.internalFormat:null,this.texture.minFilter=void 0!==i.minFilter?i.minFilter:Te,this.depthBuffer=void 0===i.depthBuffer||i.depthBuffer,this.stencilBuffer=void 0!==i.stencilBuffer&&i.stencilBuffer,this.depthTexture=void 0!==i.depthTexture?i.depthTexture:null,this.samples=void 0!==i.samples?i.samples:0}setSize(e,t,i=1){this.width===e&&this.height===t&&this.depth===i||(this.width=e,this.height=t,this.depth=i,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=i,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return(new this.constructor).copy(this)}copy(e){return this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.isRenderTargetTexture=!0,this.texture.image=Object.assign({},e.texture.image),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,null!==e.depthTexture&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}Ei.prototype.isWebGLRenderTarget=!0;class Ai extends Si{constructor(e=null,t=1,i=1,r=1){super(null),this.image={data:e,width:t,height:i,depth:r},this.magFilter=be,this.minFilter=be,this.wrapR=_e,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}Ai.prototype.isDataArrayTexture=!0;(class extends Ei{constructor(e,t,i){super(e,t),this.depth=i,this.texture=new Ai(null,e,t,i),this.texture.isRenderTargetTexture=!0}}).prototype.isWebGLArrayRenderTarget=!0;class Ci extends Si{constructor(e=null,t=1,i=1,r=1){super(null),this.image={data:e,width:t,height:i,depth:r},this.magFilter=be,this.minFilter=be,this.wrapR=_e,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}Ci.prototype.isData3DTexture=!0;(class extends Ei{constructor(e,t,i){super(e,t),this.depth=i,this.texture=new Ci(null,e,t,i),this.texture.isRenderTargetTexture=!0}}).prototype.isWebGL3DRenderTarget=!0;(class extends Ei{constructor(e,t,i,r={}){super(e,t,r);const n=this.texture;this.texture=[];for(let e=0;e<i;e++)this.texture[e]=n.clone(),this.texture[e].isRenderTargetTexture=!0}setSize(e,t,i=1){if(this.width!==e||this.height!==t||this.depth!==i){this.width=e,this.height=t,this.depth=i;for(let r=0,n=this.texture.length;r<n;r++)this.texture[r].image.width=e,this.texture[r].image.height=t,this.texture[r].image.depth=i;this.dispose()}return this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t),this}copy(e){this.dispose(),this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.set(0,0,this.width,this.height),this.scissor.set(0,0,this.width,this.height),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.depthTexture=e.depthTexture,this.texture.length=0;for(let t=0,i=e.texture.length;t<i;t++)this.texture[t]=e.texture[t].clone();return this}}).prototype.isWebGLMultipleRenderTargets=!0;class Li{constructor(e=0,t=0,i=0,r=1){this._x=e,this._y=t,this._z=i,this._w=r}static slerp(e,t,i,r){return console.warn("THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead."),i.slerpQuaternions(e,t,r)}static slerpFlat(e,t,i,r,n,a,o){let s=i[r+0],l=i[r+1],h=i[r+2],c=i[r+3];const u=n[a+0],d=n[a+1],p=n[a+2],f=n[a+3];if(0===o)return e[t+0]=s,e[t+1]=l,e[t+2]=h,void(e[t+3]=c);if(1===o)return e[t+0]=u,e[t+1]=d,e[t+2]=p,void(e[t+3]=f);if(c!==f||s!==u||l!==d||h!==p){let e=1-o;const t=s*u+l*d+h*p+c*f,i=t>=0?1:-1,r=1-t*t;if(r>Number.EPSILON){const n=Math.sqrt(r),a=Math.atan2(n,t*i);e=Math.sin(e*a)/n,o=Math.sin(o*a)/n}const n=o*i;if(s=s*e+u*n,l=l*e+d*n,h=h*e+p*n,c=c*e+f*n,e===1-o){const e=1/Math.sqrt(s*s+l*l+h*h+c*c);s*=e,l*=e,h*=e,c*=e}}e[t]=s,e[t+1]=l,e[t+2]=h,e[t+3]=c}static multiplyQuaternionsFlat(e,t,i,r,n,a){const o=i[r],s=i[r+1],l=i[r+2],h=i[r+3],c=n[a],u=n[a+1],d=n[a+2],p=n[a+3];return e[t]=o*p+h*c+s*d-l*u,e[t+1]=s*p+h*u+l*c-o*d,e[t+2]=l*p+h*d+o*u-s*c,e[t+3]=h*p-o*c-s*u-l*d,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,i,r){return this._x=e,this._y=t,this._z=i,this._w=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){if(!e||!e.isEuler)throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");const i=e._x,r=e._y,n=e._z,a=e._order,o=Math.cos,s=Math.sin,l=o(i/2),h=o(r/2),c=o(n/2),u=s(i/2),d=s(r/2),p=s(n/2);switch(a){case"XYZ":this._x=u*h*c+l*d*p,this._y=l*d*c-u*h*p,this._z=l*h*p+u*d*c,this._w=l*h*c-u*d*p;break;case"YXZ":this._x=u*h*c+l*d*p,this._y=l*d*c-u*h*p,this._z=l*h*p-u*d*c,this._w=l*h*c+u*d*p;break;case"ZXY":this._x=u*h*c-l*d*p,this._y=l*d*c+u*h*p,this._z=l*h*p+u*d*c,this._w=l*h*c-u*d*p;break;case"ZYX":this._x=u*h*c-l*d*p,this._y=l*d*c+u*h*p,this._z=l*h*p-u*d*c,this._w=l*h*c+u*d*p;break;case"YZX":this._x=u*h*c+l*d*p,this._y=l*d*c+u*h*p,this._z=l*h*p-u*d*c,this._w=l*h*c-u*d*p;break;case"XZY":this._x=u*h*c-l*d*p,this._y=l*d*c-u*h*p,this._z=l*h*p+u*d*c,this._w=l*h*c+u*d*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+a)}return!1!==t&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const i=t/2,r=Math.sin(i);return this._x=e.x*r,this._y=e.y*r,this._z=e.z*r,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,i=t[0],r=t[4],n=t[8],a=t[1],o=t[5],s=t[9],l=t[2],h=t[6],c=t[10],u=i+o+c;if(u>0){const e=.5/Math.sqrt(u+1);this._w=.25/e,this._x=(h-s)*e,this._y=(n-l)*e,this._z=(a-r)*e}else if(i>o&&i>c){const e=2*Math.sqrt(1+i-o-c);this._w=(h-s)/e,this._x=.25*e,this._y=(r+a)/e,this._z=(n+l)/e}else if(o>c){const e=2*Math.sqrt(1+o-i-c);this._w=(n-l)/e,this._x=(r+a)/e,this._y=.25*e,this._z=(s+h)/e}else{const e=2*Math.sqrt(1+c-i-o);this._w=(a-r)/e,this._x=(n+l)/e,this._y=(s+h)/e,this._z=.25*e}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let i=e.dot(t)+1;return i<Number.EPSILON?(i=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=i):(this._x=0,this._y=-e.z,this._z=e.y,this._w=i)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=i),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs($t(this.dot(e),-1,1)))}rotateTowards(e,t){const i=this.angleTo(e);if(0===i)return this;const r=Math.min(1,t/i);return this.slerp(e,r),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return 0===e?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e,t){return void 0!==t?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,t)):this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const i=e._x,r=e._y,n=e._z,a=e._w,o=t._x,s=t._y,l=t._z,h=t._w;return this._x=i*h+a*o+r*l-n*s,this._y=r*h+a*s+n*o-i*l,this._z=n*h+a*l+i*s-r*o,this._w=a*h-i*o-r*s-n*l,this._onChangeCallback(),this}slerp(e,t){if(0===t)return this;if(1===t)return this.copy(e);const i=this._x,r=this._y,n=this._z,a=this._w;let o=a*e._w+i*e._x+r*e._y+n*e._z;if(o<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,o=-o):this.copy(e),o>=1)return this._w=a,this._x=i,this._y=r,this._z=n,this;const s=1-o*o;if(s<=Number.EPSILON){const e=1-t;return this._w=e*a+t*this._w,this._x=e*i+t*this._x,this._y=e*r+t*this._y,this._z=e*n+t*this._z,this.normalize(),this._onChangeCallback(),this}const l=Math.sqrt(s),h=Math.atan2(l,o),c=Math.sin((1-t)*h)/l,u=Math.sin(t*h)/l;return this._w=a*c+this._w*u,this._x=i*c+this._x*u,this._y=r*c+this._y*u,this._z=n*c+this._z*u,this._onChangeCallback(),this}slerpQuaternions(e,t,i){return this.copy(e).slerp(t,i)}random(){const e=Math.random(),t=Math.sqrt(1-e),i=Math.sqrt(e),r=2*Math.PI*Math.random(),n=2*Math.PI*Math.random();return this.set(t*Math.cos(r),i*Math.sin(n),i*Math.cos(n),t*Math.sin(r))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}}Li.prototype.isQuaternion=!0;class Ri{constructor(e=0,t=0,i=0){this.x=e,this.y=t,this.z=i}set(e,t,i){return void 0===i&&(i=this.z),this.x=e,this.y=t,this.z=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e,t){return void 0!==t?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e,t){return void 0!==t?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e,t){return void 0!==t?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,t)):(this.x*=e.x,this.y*=e.y,this.z*=e.z,this)}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return e&&e.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(Di.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(Di.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,i=this.y,r=this.z,n=e.elements;return this.x=n[0]*t+n[3]*i+n[6]*r,this.y=n[1]*t+n[4]*i+n[7]*r,this.z=n[2]*t+n[5]*i+n[8]*r,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,i=this.y,r=this.z,n=e.elements,a=1/(n[3]*t+n[7]*i+n[11]*r+n[15]);return this.x=(n[0]*t+n[4]*i+n[8]*r+n[12])*a,this.y=(n[1]*t+n[5]*i+n[9]*r+n[13])*a,this.z=(n[2]*t+n[6]*i+n[10]*r+n[14])*a,this}applyQuaternion(e){const t=this.x,i=this.y,r=this.z,n=e.x,a=e.y,o=e.z,s=e.w,l=s*t+a*r-o*i,h=s*i+o*t-n*r,c=s*r+n*i-a*t,u=-n*t-a*i-o*r;return this.x=l*s+u*-n+h*-o-c*-a,this.y=h*s+u*-a+c*-n-l*-o,this.z=c*s+u*-o+l*-a-h*-n,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,i=this.y,r=this.z,n=e.elements;return this.x=n[0]*t+n[4]*i+n[8]*r,this.y=n[1]*t+n[5]*i+n[9]*r,this.z=n[2]*t+n[6]*i+n[10]*r,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(t,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this.z=e.z+(t.z-e.z)*i,this}cross(e,t){return void 0!==t?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,t)):this.crossVectors(this,e)}crossVectors(e,t){const i=e.x,r=e.y,n=e.z,a=t.x,o=t.y,s=t.z;return this.x=r*s-n*o,this.y=n*a-i*s,this.z=i*o-r*a,this}projectOnVector(e){const t=e.lengthSq();if(0===t)return this.set(0,0,0);const i=e.dot(this)/t;return this.copy(e).multiplyScalar(i)}projectOnPlane(e){return Pi.copy(this).projectOnVector(e),this.sub(Pi)}reflect(e){return this.sub(Pi.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(0===t)return Math.PI/2;const i=this.dot(e)/t;return Math.acos($t(i,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,i=this.y-e.y,r=this.z-e.z;return t*t+i*i+r*r}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,i){const r=Math.sin(t)*e;return this.x=r*Math.sin(i),this.y=Math.cos(t)*e,this.z=r*Math.cos(i),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,i){return this.x=e*Math.sin(t),this.y=i,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),i=this.setFromMatrixColumn(e,1).length(),r=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=i,this.z=r,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,4*t)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,3*t)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t,i){return void 0!==i&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=2*(Math.random()-.5),t=Math.random()*Math.PI*2,i=Math.sqrt(1-e**2);return this.x=i*Math.cos(t),this.y=i*Math.sin(t),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}Ri.prototype.isVector3=!0;const Pi=new Ri,Di=new Li;class Fi{constructor(e=new Ri(1/0,1/0,1/0),t=new Ri(-1/0,-1/0,-1/0)){this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){let t=1/0,i=1/0,r=1/0,n=-1/0,a=-1/0,o=-1/0;for(let s=0,l=e.length;s<l;s+=3){const l=e[s],h=e[s+1],c=e[s+2];l<t&&(t=l),h<i&&(i=h),c<r&&(r=c),l>n&&(n=l),h>a&&(a=h),c>o&&(o=c)}return this.min.set(t,i,r),this.max.set(n,a,o),this}setFromBufferAttribute(e){let t=1/0,i=1/0,r=1/0,n=-1/0,a=-1/0,o=-1/0;for(let s=0,l=e.count;s<l;s++){const l=e.getX(s),h=e.getY(s),c=e.getZ(s);l<t&&(t=l),h<i&&(i=h),c<r&&(r=c),l>n&&(n=l),h>a&&(a=h),c>o&&(o=c)}return this.min.set(t,i,r),this.max.set(n,a,o),this}setFromPoints(e){this.makeEmpty();for(let t=0,i=e.length;t<i;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const i=Ii.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return(new this.constructor).copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const i=e.geometry;if(void 0!==i)if(t&&void 0!=i.attributes&&void 0!==i.attributes.position){const t=i.attributes.position;for(let i=0,r=t.count;i<r;i++)Ii.fromBufferAttribute(t,i).applyMatrix4(e.matrixWorld),this.expandByPoint(Ii)}else null===i.boundingBox&&i.computeBoundingBox(),Ni.copy(i.boundingBox),Ni.applyMatrix4(e.matrixWorld),this.union(Ni);const r=e.children;for(let e=0,i=r.length;e<i;e++)this.expandByObject(r[e],t);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,Ii),Ii.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,i;return e.normal.x>0?(t=e.normal.x*this.min.x,i=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,i=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,i+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,i+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,i+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,i+=e.normal.z*this.min.z),t<=-e.constant&&i>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(ki),Wi.subVectors(this.max,ki),Ui.subVectors(e.a,ki),Bi.subVectors(e.b,ki),Oi.subVectors(e.c,ki),Vi.subVectors(Bi,Ui),Hi.subVectors(Oi,Bi),Gi.subVectors(Ui,Oi);let t=[0,-Vi.z,Vi.y,0,-Hi.z,Hi.y,0,-Gi.z,Gi.y,Vi.z,0,-Vi.x,Hi.z,0,-Hi.x,Gi.z,0,-Gi.x,-Vi.y,Vi.x,0,-Hi.y,Hi.x,0,-Gi.y,Gi.x,0];return!!qi(t,Ui,Bi,Oi,Wi)&&(!!qi(t=[1,0,0,0,1,0,0,0,1],Ui,Bi,Oi,Wi)&&(ji.crossVectors(Vi,Hi),qi(t=[ji.x,ji.y,ji.z],Ui,Bi,Oi,Wi)))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return Ii.copy(e).clamp(this.min,this.max).sub(e).length()}getBoundingSphere(e){return this.getCenter(e.center),e.radius=.5*this.getSize(Ii).length(),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(zi[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),zi[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),zi[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),zi[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),zi[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),zi[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),zi[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),zi[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(zi),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}Fi.prototype.isBox3=!0;const zi=[new Ri,new Ri,new Ri,new Ri,new Ri,new Ri,new Ri,new Ri],Ii=new Ri,Ni=new Fi,Ui=new Ri,Bi=new Ri,Oi=new Ri,Vi=new Ri,Hi=new Ri,Gi=new Ri,ki=new Ri,Wi=new Ri,ji=new Ri,Xi=new Ri;function qi(e,t,i,r,n){for(let a=0,o=e.length-3;a<=o;a+=3){Xi.fromArray(e,a);const o=n.x*Math.abs(Xi.x)+n.y*Math.abs(Xi.y)+n.z*Math.abs(Xi.z),s=t.dot(Xi),l=i.dot(Xi),h=r.dot(Xi);if(Math.max(-Math.max(s,l,h),Math.min(s,l,h))>o)return!1}return!0}const Yi=new Fi,Ki=new Ri,Zi=new Ri,Ji=new Ri;class Qi{constructor(e=new Ri,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const i=this.center;void 0!==t?i.copy(t):Yi.setFromPoints(e).getCenter(i);let r=0;for(let t=0,n=e.length;t<n;t++)r=Math.max(r,i.distanceToSquared(e[t]));return this.radius=Math.sqrt(r),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const i=this.center.distanceToSquared(e);return t.copy(e),i>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){Ji.subVectors(e,this.center);const t=Ji.lengthSq();if(t>this.radius*this.radius){const e=Math.sqrt(t),i=.5*(e-this.radius);this.center.add(Ji.multiplyScalar(i/e)),this.radius+=i}return this}union(e){return!0===this.center.equals(e.center)?Zi.set(0,0,1).multiplyScalar(e.radius):Zi.subVectors(e.center,this.center).normalize().multiplyScalar(e.radius),this.expandByPoint(Ki.copy(e.center).add(Zi)),this.expandByPoint(Ki.copy(e.center).sub(Zi)),this}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return(new this.constructor).copy(this)}}const $i=new Ri,er=new Ri,tr=new Ri,ir=new Ri,rr=new Ri,nr=new Ri,ar=new Ri;class or{constructor(e=new Ri,t=new Ri(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.direction).multiplyScalar(e).add(this.origin)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,$i)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const i=t.dot(this.direction);return i<0?t.copy(this.origin):t.copy(this.direction).multiplyScalar(i).add(this.origin)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=$i.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):($i.copy(this.direction).multiplyScalar(t).add(this.origin),$i.distanceToSquared(e))}distanceSqToSegment(e,t,i,r){er.copy(e).add(t).multiplyScalar(.5),tr.copy(t).sub(e).normalize(),ir.copy(this.origin).sub(er);const n=.5*e.distanceTo(t),a=-this.direction.dot(tr),o=ir.dot(this.direction),s=-ir.dot(tr),l=ir.lengthSq(),h=Math.abs(1-a*a);let c,u,d,p;if(h>0)if(u=a*o-s,p=n*h,(c=a*s-o)>=0)if(u>=-p)if(u<=p){const e=1/h;d=(c*=e)*(c+a*(u*=e)+2*o)+u*(a*c+u+2*s)+l}else u=n,d=-(c=Math.max(0,-(a*u+o)))*c+u*(u+2*s)+l;else u=-n,d=-(c=Math.max(0,-(a*u+o)))*c+u*(u+2*s)+l;else u<=-p?d=-(c=Math.max(0,-(-a*n+o)))*c+(u=c>0?-n:Math.min(Math.max(-n,-s),n))*(u+2*s)+l:u<=p?(c=0,d=(u=Math.min(Math.max(-n,-s),n))*(u+2*s)+l):d=-(c=Math.max(0,-(a*n+o)))*c+(u=c>0?n:Math.min(Math.max(-n,-s),n))*(u+2*s)+l;else u=a>0?-n:n,d=-(c=Math.max(0,-(a*u+o)))*c+u*(u+2*s)+l;return i&&i.copy(this.direction).multiplyScalar(c).add(this.origin),r&&r.copy(tr).multiplyScalar(u).add(er),d}intersectSphere(e,t){$i.subVectors(e.center,this.origin);const i=$i.dot(this.direction),r=$i.dot($i)-i*i,n=e.radius*e.radius;if(r>n)return null;const a=Math.sqrt(n-r),o=i-a,s=i+a;return o<0&&s<0?null:o<0?this.at(s,t):this.at(o,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(0===t)return 0===e.distanceToPoint(this.origin)?0:null;const i=-(this.origin.dot(e.normal)+e.constant)/t;return i>=0?i:null}intersectPlane(e,t){const i=this.distanceToPlane(e);return null===i?null:this.at(i,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return 0===t||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let i,r,n,a,o,s;const l=1/this.direction.x,h=1/this.direction.y,c=1/this.direction.z,u=this.origin;return l>=0?(i=(e.min.x-u.x)*l,r=(e.max.x-u.x)*l):(i=(e.max.x-u.x)*l,r=(e.min.x-u.x)*l),h>=0?(n=(e.min.y-u.y)*h,a=(e.max.y-u.y)*h):(n=(e.max.y-u.y)*h,a=(e.min.y-u.y)*h),i>a||n>r?null:((n>i||i!=i)&&(i=n),(a<r||r!=r)&&(r=a),c>=0?(o=(e.min.z-u.z)*c,s=(e.max.z-u.z)*c):(o=(e.max.z-u.z)*c,s=(e.min.z-u.z)*c),i>s||o>r?null:((o>i||i!=i)&&(i=o),(s<r||r!=r)&&(r=s),r<0?null:this.at(i>=0?i:r,t)))}intersectsBox(e){return null!==this.intersectBox(e,$i)}intersectTriangle(e,t,i,r,n){rr.subVectors(t,e),nr.subVectors(i,e),ar.crossVectors(rr,nr);let a,o=this.direction.dot(ar);if(o>0){if(r)return null;a=1}else{if(!(o<0))return null;a=-1,o=-o}ir.subVectors(this.origin,e);const s=a*this.direction.dot(nr.crossVectors(ir,nr));if(s<0)return null;const l=a*this.direction.dot(rr.cross(ir));if(l<0)return null;if(s+l>o)return null;const h=-a*ir.dot(ar);return h<0?null:this.at(h/o,n)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return(new this.constructor).copy(this)}}class sr{constructor(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(e,t,i,r,n,a,o,s,l,h,c,u,d,p,f,m){const g=this.elements;return g[0]=e,g[4]=t,g[8]=i,g[12]=r,g[1]=n,g[5]=a,g[9]=o,g[13]=s,g[2]=l,g[6]=h,g[10]=c,g[14]=u,g[3]=d,g[7]=p,g[11]=f,g[15]=m,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new sr).fromArray(this.elements)}copy(e){const t=this.elements,i=e.elements;return t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=i[3],t[4]=i[4],t[5]=i[5],t[6]=i[6],t[7]=i[7],t[8]=i[8],t[9]=i[9],t[10]=i[10],t[11]=i[11],t[12]=i[12],t[13]=i[13],t[14]=i[14],t[15]=i[15],this}copyPosition(e){const t=this.elements,i=e.elements;return t[12]=i[12],t[13]=i[13],t[14]=i[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,i){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(e,t,i){return this.set(e.x,t.x,i.x,0,e.y,t.y,i.y,0,e.z,t.z,i.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,i=e.elements,r=1/lr.setFromMatrixColumn(e,0).length(),n=1/lr.setFromMatrixColumn(e,1).length(),a=1/lr.setFromMatrixColumn(e,2).length();return t[0]=i[0]*r,t[1]=i[1]*r,t[2]=i[2]*r,t[3]=0,t[4]=i[4]*n,t[5]=i[5]*n,t[6]=i[6]*n,t[7]=0,t[8]=i[8]*a,t[9]=i[9]*a,t[10]=i[10]*a,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){e&&e.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");const t=this.elements,i=e.x,r=e.y,n=e.z,a=Math.cos(i),o=Math.sin(i),s=Math.cos(r),l=Math.sin(r),h=Math.cos(n),c=Math.sin(n);if("XYZ"===e.order){const e=a*h,i=a*c,r=o*h,n=o*c;t[0]=s*h,t[4]=-s*c,t[8]=l,t[1]=i+r*l,t[5]=e-n*l,t[9]=-o*s,t[2]=n-e*l,t[6]=r+i*l,t[10]=a*s}else if("YXZ"===e.order){const e=s*h,i=s*c,r=l*h,n=l*c;t[0]=e+n*o,t[4]=r*o-i,t[8]=a*l,t[1]=a*c,t[5]=a*h,t[9]=-o,t[2]=i*o-r,t[6]=n+e*o,t[10]=a*s}else if("ZXY"===e.order){const e=s*h,i=s*c,r=l*h,n=l*c;t[0]=e-n*o,t[4]=-a*c,t[8]=r+i*o,t[1]=i+r*o,t[5]=a*h,t[9]=n-e*o,t[2]=-a*l,t[6]=o,t[10]=a*s}else if("ZYX"===e.order){const e=a*h,i=a*c,r=o*h,n=o*c;t[0]=s*h,t[4]=r*l-i,t[8]=e*l+n,t[1]=s*c,t[5]=n*l+e,t[9]=i*l-r,t[2]=-l,t[6]=o*s,t[10]=a*s}else if("YZX"===e.order){const e=a*s,i=a*l,r=o*s,n=o*l;t[0]=s*h,t[4]=n-e*c,t[8]=r*c+i,t[1]=c,t[5]=a*h,t[9]=-o*h,t[2]=-l*h,t[6]=i*c+r,t[10]=e-n*c}else if("XZY"===e.order){const e=a*s,i=a*l,r=o*s,n=o*l;t[0]=s*h,t[4]=-c,t[8]=l*h,t[1]=e*c+n,t[5]=a*h,t[9]=i*c-r,t[2]=r*c-i,t[6]=o*h,t[10]=n*c+e}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(cr,e,ur)}lookAt(e,t,i){const r=this.elements;return fr.subVectors(e,t),0===fr.lengthSq()&&(fr.z=1),fr.normalize(),dr.crossVectors(i,fr),0===dr.lengthSq()&&(1===Math.abs(i.z)?fr.x+=1e-4:fr.z+=1e-4,fr.normalize(),dr.crossVectors(i,fr)),dr.normalize(),pr.crossVectors(fr,dr),r[0]=dr.x,r[4]=pr.x,r[8]=fr.x,r[1]=dr.y,r[5]=pr.y,r[9]=fr.y,r[2]=dr.z,r[6]=pr.z,r[10]=fr.z,this}multiply(e,t){return void 0!==t?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,t)):this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const i=e.elements,r=t.elements,n=this.elements,a=i[0],o=i[4],s=i[8],l=i[12],h=i[1],c=i[5],u=i[9],d=i[13],p=i[2],f=i[6],m=i[10],g=i[14],v=i[3],y=i[7],x=i[11],_=i[15],w=r[0],b=r[4],M=r[8],S=r[12],T=r[1],E=r[5],A=r[9],C=r[13],L=r[2],R=r[6],P=r[10],D=r[14],F=r[3],z=r[7],I=r[11],N=r[15];return n[0]=a*w+o*T+s*L+l*F,n[4]=a*b+o*E+s*R+l*z,n[8]=a*M+o*A+s*P+l*I,n[12]=a*S+o*C+s*D+l*N,n[1]=h*w+c*T+u*L+d*F,n[5]=h*b+c*E+u*R+d*z,n[9]=h*M+c*A+u*P+d*I,n[13]=h*S+c*C+u*D+d*N,n[2]=p*w+f*T+m*L+g*F,n[6]=p*b+f*E+m*R+g*z,n[10]=p*M+f*A+m*P+g*I,n[14]=p*S+f*C+m*D+g*N,n[3]=v*w+y*T+x*L+_*F,n[7]=v*b+y*E+x*R+_*z,n[11]=v*M+y*A+x*P+_*I,n[15]=v*S+y*C+x*D+_*N,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],i=e[4],r=e[8],n=e[12],a=e[1],o=e[5],s=e[9],l=e[13],h=e[2],c=e[6],u=e[10],d=e[14];return e[3]*(+n*s*c-r*l*c-n*o*u+i*l*u+r*o*d-i*s*d)+e[7]*(+t*s*d-t*l*u+n*a*u-r*a*d+r*l*h-n*s*h)+e[11]*(+t*l*c-t*o*d-n*a*c+i*a*d+n*o*h-i*l*h)+e[15]*(-r*o*h-t*s*c+t*o*u+r*a*c-i*a*u+i*s*h)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,i){const r=this.elements;return e.isVector3?(r[12]=e.x,r[13]=e.y,r[14]=e.z):(r[12]=e,r[13]=t,r[14]=i),this}invert(){const e=this.elements,t=e[0],i=e[1],r=e[2],n=e[3],a=e[4],o=e[5],s=e[6],l=e[7],h=e[8],c=e[9],u=e[10],d=e[11],p=e[12],f=e[13],m=e[14],g=e[15],v=c*m*l-f*u*l+f*s*d-o*m*d-c*s*g+o*u*g,y=p*u*l-h*m*l-p*s*d+a*m*d+h*s*g-a*u*g,x=h*f*l-p*c*l+p*o*d-a*f*d-h*o*g+a*c*g,_=p*c*s-h*f*s-p*o*u+a*f*u+h*o*m-a*c*m,w=t*v+i*y+r*x+n*_;if(0===w)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const b=1/w;return e[0]=v*b,e[1]=(f*u*n-c*m*n-f*r*d+i*m*d+c*r*g-i*u*g)*b,e[2]=(o*m*n-f*s*n+f*r*l-i*m*l-o*r*g+i*s*g)*b,e[3]=(c*s*n-o*u*n-c*r*l+i*u*l+o*r*d-i*s*d)*b,e[4]=y*b,e[5]=(h*m*n-p*u*n+p*r*d-t*m*d-h*r*g+t*u*g)*b,e[6]=(p*s*n-a*m*n-p*r*l+t*m*l+a*r*g-t*s*g)*b,e[7]=(a*u*n-h*s*n+h*r*l-t*u*l-a*r*d+t*s*d)*b,e[8]=x*b,e[9]=(p*c*n-h*f*n-p*i*d+t*f*d+h*i*g-t*c*g)*b,e[10]=(a*f*n-p*o*n+p*i*l-t*f*l-a*i*g+t*o*g)*b,e[11]=(h*o*n-a*c*n-h*i*l+t*c*l+a*i*d-t*o*d)*b,e[12]=_*b,e[13]=(h*f*r-p*c*r+p*i*u-t*f*u-h*i*m+t*c*m)*b,e[14]=(p*o*r-a*f*r-p*i*s+t*f*s+a*i*m-t*o*m)*b,e[15]=(a*c*r-h*o*r+h*i*s-t*c*s-a*i*u+t*o*u)*b,this}scale(e){const t=this.elements,i=e.x,r=e.y,n=e.z;return t[0]*=i,t[4]*=r,t[8]*=n,t[1]*=i,t[5]*=r,t[9]*=n,t[2]*=i,t[6]*=r,t[10]*=n,t[3]*=i,t[7]*=r,t[11]*=n,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],i=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],r=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,i,r))}makeTranslation(e,t,i){return this.set(1,0,0,e,0,1,0,t,0,0,1,i,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),i=Math.sin(e);return this.set(1,0,0,0,0,t,-i,0,0,i,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),i=Math.sin(e);return this.set(t,0,i,0,0,1,0,0,-i,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),i=Math.sin(e);return this.set(t,-i,0,0,i,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const i=Math.cos(t),r=Math.sin(t),n=1-i,a=e.x,o=e.y,s=e.z,l=n*a,h=n*o;return this.set(l*a+i,l*o-r*s,l*s+r*o,0,l*o+r*s,h*o+i,h*s-r*a,0,l*s-r*o,h*s+r*a,n*s*s+i,0,0,0,0,1),this}makeScale(e,t,i){return this.set(e,0,0,0,0,t,0,0,0,0,i,0,0,0,0,1),this}makeShear(e,t,i,r,n,a){return this.set(1,i,n,0,e,1,a,0,t,r,1,0,0,0,0,1),this}compose(e,t,i){const r=this.elements,n=t._x,a=t._y,o=t._z,s=t._w,l=n+n,h=a+a,c=o+o,u=n*l,d=n*h,p=n*c,f=a*h,m=a*c,g=o*c,v=s*l,y=s*h,x=s*c,_=i.x,w=i.y,b=i.z;return r[0]=(1-(f+g))*_,r[1]=(d+x)*_,r[2]=(p-y)*_,r[3]=0,r[4]=(d-x)*w,r[5]=(1-(u+g))*w,r[6]=(m+v)*w,r[7]=0,r[8]=(p+y)*b,r[9]=(m-v)*b,r[10]=(1-(u+f))*b,r[11]=0,r[12]=e.x,r[13]=e.y,r[14]=e.z,r[15]=1,this}decompose(e,t,i){const r=this.elements;let n=lr.set(r[0],r[1],r[2]).length();const a=lr.set(r[4],r[5],r[6]).length(),o=lr.set(r[8],r[9],r[10]).length();this.determinant()<0&&(n=-n),e.x=r[12],e.y=r[13],e.z=r[14],hr.copy(this);const s=1/n,l=1/a,h=1/o;return hr.elements[0]*=s,hr.elements[1]*=s,hr.elements[2]*=s,hr.elements[4]*=l,hr.elements[5]*=l,hr.elements[6]*=l,hr.elements[8]*=h,hr.elements[9]*=h,hr.elements[10]*=h,t.setFromRotationMatrix(hr),i.x=n,i.y=a,i.z=o,this}makePerspective(e,t,i,r,n,a){void 0===a&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");const o=this.elements,s=2*n/(t-e),l=2*n/(i-r),h=(t+e)/(t-e),c=(i+r)/(i-r),u=-(a+n)/(a-n),d=-2*a*n/(a-n);return o[0]=s,o[4]=0,o[8]=h,o[12]=0,o[1]=0,o[5]=l,o[9]=c,o[13]=0,o[2]=0,o[6]=0,o[10]=u,o[14]=d,o[3]=0,o[7]=0,o[11]=-1,o[15]=0,this}makeOrthographic(e,t,i,r,n,a){const o=this.elements,s=1/(t-e),l=1/(i-r),h=1/(a-n),c=(t+e)*s,u=(i+r)*l,d=(a+n)*h;return o[0]=2*s,o[4]=0,o[8]=0,o[12]=-c,o[1]=0,o[5]=2*l,o[9]=0,o[13]=-u,o[2]=0,o[6]=0,o[10]=-2*h,o[14]=-d,o[3]=0,o[7]=0,o[11]=0,o[15]=1,this}equals(e){const t=this.elements,i=e.elements;for(let e=0;e<16;e++)if(t[e]!==i[e])return!1;return!0}fromArray(e,t=0){for(let i=0;i<16;i++)this.elements[i]=e[i+t];return this}toArray(e=[],t=0){const i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e[t+9]=i[9],e[t+10]=i[10],e[t+11]=i[11],e[t+12]=i[12],e[t+13]=i[13],e[t+14]=i[14],e[t+15]=i[15],e}}sr.prototype.isMatrix4=!0;const lr=new Ri,hr=new sr,cr=new Ri(0,0,0),ur=new Ri(1,1,1),dr=new Ri,pr=new Ri,fr=new Ri,mr=new sr,gr=new Li;class vr{constructor(e=0,t=0,i=0,r=vr.DefaultOrder){this._x=e,this._y=t,this._z=i,this._order=r}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,i,r=this._order){return this._x=e,this._y=t,this._z=i,this._order=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,i=!0){const r=e.elements,n=r[0],a=r[4],o=r[8],s=r[1],l=r[5],h=r[9],c=r[2],u=r[6],d=r[10];switch(t){case"XYZ":this._y=Math.asin($t(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-h,d),this._z=Math.atan2(-a,n)):(this._x=Math.atan2(u,l),this._z=0);break;case"YXZ":this._x=Math.asin(-$t(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(o,d),this._z=Math.atan2(s,l)):(this._y=Math.atan2(-c,n),this._z=0);break;case"ZXY":this._x=Math.asin($t(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(-c,d),this._z=Math.atan2(-a,l)):(this._y=0,this._z=Math.atan2(s,n));break;case"ZYX":this._y=Math.asin(-$t(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(u,d),this._z=Math.atan2(s,n)):(this._x=0,this._z=Math.atan2(-a,l));break;case"YZX":this._z=Math.asin($t(s,-1,1)),Math.abs(s)<.9999999?(this._x=Math.atan2(-h,l),this._y=Math.atan2(-c,n)):(this._x=0,this._y=Math.atan2(o,d));break;case"XZY":this._z=Math.asin(-$t(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(u,l),this._y=Math.atan2(o,n)):(this._x=Math.atan2(-h,d),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,!0===i&&this._onChangeCallback(),this}setFromQuaternion(e,t,i){return mr.makeRotationFromQuaternion(e),this.setFromRotationMatrix(mr,t,i)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return gr.setFromEuler(this),this.setFromQuaternion(gr,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],void 0!==e[3]&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}}vr.prototype.isEuler=!0,vr.DefaultOrder="XYZ",vr.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class yr{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return 0!=(this.mask&e.mask)}isEnabled(e){return 0!=(this.mask&(1<<e|0))}}let xr=0;const _r=new Ri,wr=new Li,br=new sr,Mr=new Ri,Sr=new Ri,Tr=new Ri,Er=new Li,Ar=new Ri(1,0,0),Cr=new Ri(0,1,0),Lr=new Ri(0,0,1),Rr={type:"added"},Pr={type:"removed"};class Dr extends Yt{constructor(){super(),Object.defineProperty(this,"id",{value:xr++}),this.uuid=Qt(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Dr.DefaultUp.clone();const e=new Ri,t=new vr,i=new Li,r=new Ri(1,1,1);t._onChange(function(){i.setFromEuler(t,!1)}),i._onChange(function(){t.setFromQuaternion(i,void 0,!1)}),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:i},scale:{configurable:!0,enumerable:!0,value:r},modelViewMatrix:{value:new sr},normalMatrix:{value:new ai}}),this.matrix=new sr,this.matrixWorld=new sr,this.matrixAutoUpdate=Dr.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new yr,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return wr.setFromAxisAngle(e,t),this.quaternion.multiply(wr),this}rotateOnWorldAxis(e,t){return wr.setFromAxisAngle(e,t),this.quaternion.premultiply(wr),this}rotateX(e){return this.rotateOnAxis(Ar,e)}rotateY(e){return this.rotateOnAxis(Cr,e)}rotateZ(e){return this.rotateOnAxis(Lr,e)}translateOnAxis(e,t){return _r.copy(e).applyQuaternion(this.quaternion),this.position.add(_r.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(Ar,e)}translateY(e){return this.translateOnAxis(Cr,e)}translateZ(e){return this.translateOnAxis(Lr,e)}localToWorld(e){return e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return e.applyMatrix4(br.copy(this.matrixWorld).invert())}lookAt(e,t,i){e.isVector3?Mr.copy(e):Mr.set(e,t,i);const r=this.parent;this.updateWorldMatrix(!0,!1),Sr.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?br.lookAt(Sr,Mr,this.up):br.lookAt(Mr,Sr,this.up),this.quaternion.setFromRotationMatrix(br),r&&(br.extractRotation(r.matrixWorld),wr.setFromRotationMatrix(br),this.quaternion.premultiply(wr.invert()))}add(e){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(null!==e.parent&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(Rr)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.remove(arguments[e]);return this}const t=this.children.indexOf(e);return-1!==t&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(Pr)),this}removeFromParent(){const e=this.parent;return null!==e&&e.remove(this),this}clear(){for(let e=0;e<this.children.length;e++){const t=this.children[e];t.parent=null,t.dispatchEvent(Pr)}return this.children.length=0,this}attach(e){return this.updateWorldMatrix(!0,!1),br.copy(this.matrixWorld).invert(),null!==e.parent&&(e.parent.updateWorldMatrix(!0,!1),br.multiply(e.parent.matrixWorld)),e.applyMatrix4(br),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let i=0,r=this.children.length;i<r;i++){const r=this.children[i].getObjectByProperty(e,t);if(void 0!==r)return r}}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Sr,e,Tr),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Sr,Er,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let i=0,r=t.length;i<r;i++)t[i].traverse(e)}traverseVisible(e){if(!1===this.visible)return;e(this);const t=this.children;for(let i=0,r=t.length;i<r;i++)t[i].traverseVisible(e)}traverseAncestors(e){const t=this.parent;null!==t&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let i=0,r=t.length;i<r;i++)t[i].updateMatrixWorld(e)}updateWorldMatrix(e,t){const i=this.parent;if(!0===e&&null!==i&&i.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===t){const e=this.children;for(let t=0,i=e.length;t<i;t++)e[t].updateWorldMatrix(!1,!0)}}toJSON(e){const t=void 0===e||"string"==typeof e,i={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},i.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const r={};function n(t,i){return void 0===t[i.uuid]&&(t[i.uuid]=i.toJSON(e)),i.uuid}if(r.uuid=this.uuid,r.type=this.type,""!==this.name&&(r.name=this.name),!0===this.castShadow&&(r.castShadow=!0),!0===this.receiveShadow&&(r.receiveShadow=!0),!1===this.visible&&(r.visible=!1),!1===this.frustumCulled&&(r.frustumCulled=!1),0!==this.renderOrder&&(r.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(r.userData=this.userData),r.layers=this.layers.mask,r.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(r.matrixAutoUpdate=!1),this.isInstancedMesh&&(r.type="InstancedMesh",r.count=this.count,r.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(r.instanceColor=this.instanceColor.toJSON())),this.isScene)this.background&&(this.background.isColor?r.background=this.background.toJSON():this.background.isTexture&&(r.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&(r.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){r.geometry=n(e.geometries,this.geometry);const t=this.geometry.parameters;if(void 0!==t&&void 0!==t.shapes){const i=t.shapes;if(Array.isArray(i))for(let t=0,r=i.length;t<r;t++){const r=i[t];n(e.shapes,r)}else n(e.shapes,i)}}if(this.isSkinnedMesh&&(r.bindMode=this.bindMode,r.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(n(e.skeletons,this.skeleton),r.skeleton=this.skeleton.uuid)),void 0!==this.material)if(Array.isArray(this.material)){const t=[];for(let i=0,r=this.material.length;i<r;i++)t.push(n(e.materials,this.material[i]));r.material=t}else r.material=n(e.materials,this.material);if(this.children.length>0){r.children=[];for(let t=0;t<this.children.length;t++)r.children.push(this.children[t].toJSON(e).object)}if(this.animations.length>0){r.animations=[];for(let t=0;t<this.animations.length;t++){const i=this.animations[t];r.animations.push(n(e.animations,i))}}if(t){const t=a(e.geometries),r=a(e.materials),n=a(e.textures),o=a(e.images),s=a(e.shapes),l=a(e.skeletons),h=a(e.animations),c=a(e.nodes);t.length>0&&(i.geometries=t),r.length>0&&(i.materials=r),n.length>0&&(i.textures=n),o.length>0&&(i.images=o),s.length>0&&(i.shapes=s),l.length>0&&(i.skeletons=l),h.length>0&&(i.animations=h),c.length>0&&(i.nodes=c)}return i.object=r,i;function a(e){const t=[];for(const i in e){const r=e[i];delete r.metadata,t.push(r)}return t}}clone(e){return(new this.constructor).copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),!0===t)for(let t=0;t<e.children.length;t++){const i=e.children[t];this.add(i.clone())}return this}}Dr.DefaultUp=new Ri(0,1,0),Dr.DefaultMatrixAutoUpdate=!0,Dr.prototype.isObject3D=!0;const Fr=new Ri,zr=new Ri,Ir=new Ri,Nr=new Ri,Ur=new Ri,Br=new Ri,Or=new Ri,Vr=new Ri,Hr=new Ri,Gr=new Ri;class kr{constructor(e=new Ri,t=new Ri,i=new Ri){this.a=e,this.b=t,this.c=i}static getNormal(e,t,i,r){r.subVectors(i,t),Fr.subVectors(e,t),r.cross(Fr);const n=r.lengthSq();return n>0?r.multiplyScalar(1/Math.sqrt(n)):r.set(0,0,0)}static getBarycoord(e,t,i,r,n){Fr.subVectors(r,t),zr.subVectors(i,t),Ir.subVectors(e,t);const a=Fr.dot(Fr),o=Fr.dot(zr),s=Fr.dot(Ir),l=zr.dot(zr),h=zr.dot(Ir),c=a*l-o*o;if(0===c)return n.set(-2,-1,-1);const u=1/c,d=(l*s-o*h)*u,p=(a*h-o*s)*u;return n.set(1-d-p,p,d)}static containsPoint(e,t,i,r){return this.getBarycoord(e,t,i,r,Nr),Nr.x>=0&&Nr.y>=0&&Nr.x+Nr.y<=1}static getUV(e,t,i,r,n,a,o,s){return this.getBarycoord(e,t,i,r,Nr),s.set(0,0),s.addScaledVector(n,Nr.x),s.addScaledVector(a,Nr.y),s.addScaledVector(o,Nr.z),s}static isFrontFacing(e,t,i,r){return Fr.subVectors(i,t),zr.subVectors(e,t),Fr.cross(zr).dot(r)<0}set(e,t,i){return this.a.copy(e),this.b.copy(t),this.c.copy(i),this}setFromPointsAndIndices(e,t,i,r){return this.a.copy(e[t]),this.b.copy(e[i]),this.c.copy(e[r]),this}setFromAttributeAndIndices(e,t,i,r){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,i),this.c.fromBufferAttribute(e,r),this}clone(){return(new this.constructor).copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return Fr.subVectors(this.c,this.b),zr.subVectors(this.a,this.b),.5*Fr.cross(zr).length()}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return kr.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return kr.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,i,r,n){return kr.getUV(e,this.a,this.b,this.c,t,i,r,n)}containsPoint(e){return kr.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return kr.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const i=this.a,r=this.b,n=this.c;let a,o;Ur.subVectors(r,i),Br.subVectors(n,i),Vr.subVectors(e,i);const s=Ur.dot(Vr),l=Br.dot(Vr);if(s<=0&&l<=0)return t.copy(i);Hr.subVectors(e,r);const h=Ur.dot(Hr),c=Br.dot(Hr);if(h>=0&&c<=h)return t.copy(r);const u=s*c-h*l;if(u<=0&&s>=0&&h<=0)return a=s/(s-h),t.copy(i).addScaledVector(Ur,a);Gr.subVectors(e,n);const d=Ur.dot(Gr),p=Br.dot(Gr);if(p>=0&&d<=p)return t.copy(n);const f=d*l-s*p;if(f<=0&&l>=0&&p<=0)return o=l/(l-p),t.copy(i).addScaledVector(Br,o);const m=h*p-d*c;if(m<=0&&c-h>=0&&d-p>=0)return Or.subVectors(n,r),o=(c-h)/(c-h+(d-p)),t.copy(r).addScaledVector(Or,o);const g=1/(m+f+u);return a=f*g,o=u*g,t.copy(i).addScaledVector(Ur,a).addScaledVector(Br,o)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}let Wr=0;class jr extends Yt{constructor(){super(),Object.defineProperty(this,"id",{value:Wr++}),this.uuid=Qt(),this.name="",this.type="Material",this.fog=!0,this.blending=L,this.side=S,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=k,this.blendDst=W,this.blendEquation=z,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=$,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=kt,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Gt,this.stencilZFail=Gt,this.stencilZPass=Gt,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(void 0!==e)for(const t in e){const i=e[t];if(void 0===i){console.warn("THREE.Material: '"+t+"' parameter is undefined.");continue}if("shading"===t){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=i===A;continue}const r=this[t];void 0!==r?r&&r.isColor?r.set(i):r&&r.isVector3&&i&&i.isVector3?r.copy(i):this[t]=i:console.warn("THREE."+this.type+": '"+t+"' is not a property of this material.")}}toJSON(e){const t=void 0===e||"string"==typeof e;t&&(e={textures:{},images:{}});const i={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};function r(e){const t=[];for(const i in e){const r=e[i];delete r.metadata,t.push(r)}return t}if(i.uuid=this.uuid,i.type=this.type,""!==this.name&&(i.name=this.name),this.color&&this.color.isColor&&(i.color=this.color.getHex()),void 0!==this.roughness&&(i.roughness=this.roughness),void 0!==this.metalness&&(i.metalness=this.metalness),void 0!==this.sheen&&(i.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(i.sheenColor=this.sheenColor.getHex()),void 0!==this.sheenRoughness&&(i.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(i.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(i.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(i.specular=this.specular.getHex()),void 0!==this.specularIntensity&&(i.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(i.specularColor=this.specularColor.getHex()),void 0!==this.shininess&&(i.shininess=this.shininess),void 0!==this.clearcoat&&(i.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(i.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(i.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(i.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(i.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,i.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(i.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(i.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(i.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(i.lightMap=this.lightMap.toJSON(e).uuid,i.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(i.aoMap=this.aoMap.toJSON(e).uuid,i.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(i.bumpMap=this.bumpMap.toJSON(e).uuid,i.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(i.normalMap=this.normalMap.toJSON(e).uuid,i.normalMapType=this.normalMapType,i.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(i.displacementMap=this.displacementMap.toJSON(e).uuid,i.displacementScale=this.displacementScale,i.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(i.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(i.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(i.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(i.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(i.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(i.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(i.envMap=this.envMap.toJSON(e).uuid,void 0!==this.combine&&(i.combine=this.combine)),void 0!==this.envMapIntensity&&(i.envMapIntensity=this.envMapIntensity),void 0!==this.reflectivity&&(i.reflectivity=this.reflectivity),void 0!==this.refractionRatio&&(i.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(i.gradientMap=this.gradientMap.toJSON(e).uuid),void 0!==this.transmission&&(i.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(i.transmissionMap=this.transmissionMap.toJSON(e).uuid),void 0!==this.thickness&&(i.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(i.thicknessMap=this.thicknessMap.toJSON(e).uuid),void 0!==this.attenuationDistance&&(i.attenuationDistance=this.attenuationDistance),void 0!==this.attenuationColor&&(i.attenuationColor=this.attenuationColor.getHex()),void 0!==this.size&&(i.size=this.size),null!==this.shadowSide&&(i.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(i.sizeAttenuation=this.sizeAttenuation),this.blending!==L&&(i.blending=this.blending),this.side!==S&&(i.side=this.side),this.vertexColors&&(i.vertexColors=!0),this.opacity<1&&(i.opacity=this.opacity),!0===this.transparent&&(i.transparent=this.transparent),i.depthFunc=this.depthFunc,i.depthTest=this.depthTest,i.depthWrite=this.depthWrite,i.colorWrite=this.colorWrite,i.stencilWrite=this.stencilWrite,i.stencilWriteMask=this.stencilWriteMask,i.stencilFunc=this.stencilFunc,i.stencilRef=this.stencilRef,i.stencilFuncMask=this.stencilFuncMask,i.stencilFail=this.stencilFail,i.stencilZFail=this.stencilZFail,i.stencilZPass=this.stencilZPass,void 0!==this.rotation&&0!==this.rotation&&(i.rotation=this.rotation),!0===this.polygonOffset&&(i.polygonOffset=!0),0!==this.polygonOffsetFactor&&(i.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(i.polygonOffsetUnits=this.polygonOffsetUnits),void 0!==this.linewidth&&1!==this.linewidth&&(i.linewidth=this.linewidth),void 0!==this.dashSize&&(i.dashSize=this.dashSize),void 0!==this.gapSize&&(i.gapSize=this.gapSize),void 0!==this.scale&&(i.scale=this.scale),!0===this.dithering&&(i.dithering=!0),this.alphaTest>0&&(i.alphaTest=this.alphaTest),!0===this.alphaToCoverage&&(i.alphaToCoverage=this.alphaToCoverage),!0===this.premultipliedAlpha&&(i.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(i.wireframe=this.wireframe),this.wireframeLinewidth>1&&(i.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(i.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(i.wireframeLinejoin=this.wireframeLinejoin),!0===this.flatShading&&(i.flatShading=this.flatShading),!1===this.visible&&(i.visible=!1),!1===this.toneMapped&&(i.toneMapped=!1),"{}"!==JSON.stringify(this.userData)&&(i.userData=this.userData),t){const t=r(e.textures),n=r(e.images);t.length>0&&(i.textures=t),n.length>0&&(i.images=n)}return i}clone(){return(new this.constructor).copy(this)}copy(e){this.name=e.name,this.fog=e.fog,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let i=null;if(null!==t){const e=t.length;i=new Array(e);for(let r=0;r!==e;++r)i[r]=t[r].clone()}return this.clippingPlanes=i,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){!0===e&&this.version++}}jr.prototype.isMaterial=!0,jr.fromType=function(){return null};class Xr extends jr{constructor(e){super(),this.type="MeshBasicMaterial",this.color=new yi(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=ne,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this}}Xr.prototype.isMeshBasicMaterial=!0;const qr=new Ri,Yr=new ni;class Kr{constructor(e,t,i){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=e,this.itemSize=t,this.count=void 0!==e?e.length/t:0,this.normalized=!0===i,this.usage=Wt,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(e){!0===e&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this}copyAt(e,t,i){e*=this.itemSize,i*=t.itemSize;for(let r=0,n=this.itemSize;r<n;r++)this.array[e+r]=t.array[i+r];return this}copyArray(e){return this.array.set(e),this}copyColorsArray(e){const t=this.array;let i=0;for(let r=0,n=e.length;r<n;r++){let n=e[r];void 0===n&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",r),n=new yi),t[i++]=n.r,t[i++]=n.g,t[i++]=n.b}return this}copyVector2sArray(e){const t=this.array;let i=0;for(let r=0,n=e.length;r<n;r++){let n=e[r];void 0===n&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",r),n=new ni),t[i++]=n.x,t[i++]=n.y}return this}copyVector3sArray(e){const t=this.array;let i=0;for(let r=0,n=e.length;r<n;r++){let n=e[r];void 0===n&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",r),n=new Ri),t[i++]=n.x,t[i++]=n.y,t[i++]=n.z}return this}copyVector4sArray(e){const t=this.array;let i=0;for(let r=0,n=e.length;r<n;r++){let n=e[r];void 0===n&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",r),n=new Ti),t[i++]=n.x,t[i++]=n.y,t[i++]=n.z,t[i++]=n.w}return this}applyMatrix3(e){if(2===this.itemSize)for(let t=0,i=this.count;t<i;t++)Yr.fromBufferAttribute(this,t),Yr.applyMatrix3(e),this.setXY(t,Yr.x,Yr.y);else if(3===this.itemSize)for(let t=0,i=this.count;t<i;t++)qr.fromBufferAttribute(this,t),qr.applyMatrix3(e),this.setXYZ(t,qr.x,qr.y,qr.z);return this}applyMatrix4(e){for(let t=0,i=this.count;t<i;t++)qr.fromBufferAttribute(this,t),qr.applyMatrix4(e),this.setXYZ(t,qr.x,qr.y,qr.z);return this}applyNormalMatrix(e){for(let t=0,i=this.count;t<i;t++)qr.fromBufferAttribute(this,t),qr.applyNormalMatrix(e),this.setXYZ(t,qr.x,qr.y,qr.z);return this}transformDirection(e){for(let t=0,i=this.count;t<i;t++)qr.fromBufferAttribute(this,t),qr.transformDirection(e),this.setXYZ(t,qr.x,qr.y,qr.z);return this}set(e,t=0){return this.array.set(e,t),this}getX(e){return this.array[e*this.itemSize]}setX(e,t){return this.array[e*this.itemSize]=t,this}getY(e){return this.array[e*this.itemSize+1]}setY(e,t){return this.array[e*this.itemSize+1]=t,this}getZ(e){return this.array[e*this.itemSize+2]}setZ(e,t){return this.array[e*this.itemSize+2]=t,this}getW(e){return this.array[e*this.itemSize+3]}setW(e,t){return this.array[e*this.itemSize+3]=t,this}setXY(e,t,i){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=i,this}setXYZ(e,t,i,r){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=i,this.array[e+2]=r,this}setXYZW(e,t,i,r,n){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=i,this.array[e+2]=r,this.array[e+3]=n,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized};return""!==this.name&&(e.name=this.name),this.usage!==Wt&&(e.usage=this.usage),0===this.updateRange.offset&&-1===this.updateRange.count||(e.updateRange=this.updateRange),e}}Kr.prototype.isBufferAttribute=!0;class Zr extends Kr{constructor(e,t,i){super(new Uint16Array(e),t,i)}}class Jr extends Kr{constructor(e,t,i){super(new Uint32Array(e),t,i)}}(class extends Kr{constructor(e,t,i){super(new Uint16Array(e),t,i)}}).prototype.isFloat16BufferAttribute=!0;class Qr extends Kr{constructor(e,t,i){super(new Float32Array(e),t,i)}}let $r=0;const en=new sr,tn=new Dr,rn=new Ri,nn=new Fi,an=new Fi,on=new Ri;class sn extends Yt{constructor(){super(),Object.defineProperty(this,"id",{value:$r++}),this.uuid=Qt(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(oi(e)?Jr:Zr)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return void 0!==this.attributes[e]}addGroup(e,t,i=0){this.groups.push({start:e,count:t,materialIndex:i})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;void 0!==t&&(t.applyMatrix4(e),t.needsUpdate=!0);const i=this.attributes.normal;if(void 0!==i){const t=(new ai).getNormalMatrix(e);i.applyNormalMatrix(t),i.needsUpdate=!0}const r=this.attributes.tangent;return void 0!==r&&(r.transformDirection(e),r.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}applyQuaternion(e){return en.makeRotationFromQuaternion(e),this.applyMatrix4(en),this}rotateX(e){return en.makeRotationX(e),this.applyMatrix4(en),this}rotateY(e){return en.makeRotationY(e),this.applyMatrix4(en),this}rotateZ(e){return en.makeRotationZ(e),this.applyMatrix4(en),this}translate(e,t,i){return en.makeTranslation(e,t,i),this.applyMatrix4(en),this}scale(e,t,i){return en.makeScale(e,t,i),this.applyMatrix4(en),this}lookAt(e){return tn.lookAt(e),tn.updateMatrix(),this.applyMatrix4(tn.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(rn).negate(),this.translate(rn.x,rn.y,rn.z),this}setFromPoints(e){const t=[];for(let i=0,r=e.length;i<r;i++){const r=e[i];t.push(r.x,r.y,r.z||0)}return this.setAttribute("position",new Qr(t,3)),this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new Fi);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingBox.set(new Ri(-1/0,-1/0,-1/0),new Ri(1/0,1/0,1/0));if(void 0!==e){if(this.boundingBox.setFromBufferAttribute(e),t)for(let e=0,i=t.length;e<i;e++){const i=t[e];nn.setFromBufferAttribute(i),this.morphTargetsRelative?(on.addVectors(this.boundingBox.min,nn.min),this.boundingBox.expandByPoint(on),on.addVectors(this.boundingBox.max,nn.max),this.boundingBox.expandByPoint(on)):(this.boundingBox.expandByPoint(nn.min),this.boundingBox.expandByPoint(nn.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new Qi);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingSphere.set(new Ri,1/0);if(e){const i=this.boundingSphere.center;if(nn.setFromBufferAttribute(e),t)for(let e=0,i=t.length;e<i;e++){const i=t[e];an.setFromBufferAttribute(i),this.morphTargetsRelative?(on.addVectors(nn.min,an.min),nn.expandByPoint(on),on.addVectors(nn.max,an.max),nn.expandByPoint(on)):(nn.expandByPoint(an.min),nn.expandByPoint(an.max))}nn.getCenter(i);let r=0;for(let t=0,n=e.count;t<n;t++)on.fromBufferAttribute(e,t),r=Math.max(r,i.distanceToSquared(on));if(t)for(let n=0,a=t.length;n<a;n++){const a=t[n],o=this.morphTargetsRelative;for(let t=0,n=a.count;t<n;t++)on.fromBufferAttribute(a,t),o&&(rn.fromBufferAttribute(e,t),on.add(rn)),r=Math.max(r,i.distanceToSquared(on))}this.boundingSphere.radius=Math.sqrt(r),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(null===e||void 0===t.position||void 0===t.normal||void 0===t.uv)return void console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");const i=e.array,r=t.position.array,n=t.normal.array,a=t.uv.array,o=r.length/3;!1===this.hasAttribute("tangent")&&this.setAttribute("tangent",new Kr(new Float32Array(4*o),4));const s=this.getAttribute("tangent").array,l=[],h=[];for(let e=0;e<o;e++)l[e]=new Ri,h[e]=new Ri;const c=new Ri,u=new Ri,d=new Ri,p=new ni,f=new ni,m=new ni,g=new Ri,v=new Ri;function y(e,t,i){c.fromArray(r,3*e),u.fromArray(r,3*t),d.fromArray(r,3*i),p.fromArray(a,2*e),f.fromArray(a,2*t),m.fromArray(a,2*i),u.sub(c),d.sub(c),f.sub(p),m.sub(p);const n=1/(f.x*m.y-m.x*f.y);isFinite(n)&&(g.copy(u).multiplyScalar(m.y).addScaledVector(d,-f.y).multiplyScalar(n),v.copy(d).multiplyScalar(f.x).addScaledVector(u,-m.x).multiplyScalar(n),l[e].add(g),l[t].add(g),l[i].add(g),h[e].add(v),h[t].add(v),h[i].add(v))}let x=this.groups;0===x.length&&(x=[{start:0,count:i.length}]);for(let e=0,t=x.length;e<t;++e){const t=x[e],r=t.start;for(let e=r,n=r+t.count;e<n;e+=3)y(i[e+0],i[e+1],i[e+2])}const _=new Ri,w=new Ri,b=new Ri,M=new Ri;function S(e){b.fromArray(n,3*e),M.copy(b);const t=l[e];_.copy(t),_.sub(b.multiplyScalar(b.dot(t))).normalize(),w.crossVectors(M,t);const i=w.dot(h[e])<0?-1:1;s[4*e]=_.x,s[4*e+1]=_.y,s[4*e+2]=_.z,s[4*e+3]=i}for(let e=0,t=x.length;e<t;++e){const t=x[e],r=t.start;for(let e=r,n=r+t.count;e<n;e+=3)S(i[e+0]),S(i[e+1]),S(i[e+2])}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(void 0!==t){let i=this.getAttribute("normal");if(void 0===i)i=new Kr(new Float32Array(3*t.count),3),this.setAttribute("normal",i);else for(let e=0,t=i.count;e<t;e++)i.setXYZ(e,0,0,0);const r=new Ri,n=new Ri,a=new Ri,o=new Ri,s=new Ri,l=new Ri,h=new Ri,c=new Ri;if(e)for(let u=0,d=e.count;u<d;u+=3){const d=e.getX(u+0),p=e.getX(u+1),f=e.getX(u+2);r.fromBufferAttribute(t,d),n.fromBufferAttribute(t,p),a.fromBufferAttribute(t,f),h.subVectors(a,n),c.subVectors(r,n),h.cross(c),o.fromBufferAttribute(i,d),s.fromBufferAttribute(i,p),l.fromBufferAttribute(i,f),o.add(h),s.add(h),l.add(h),i.setXYZ(d,o.x,o.y,o.z),i.setXYZ(p,s.x,s.y,s.z),i.setXYZ(f,l.x,l.y,l.z)}else for(let e=0,o=t.count;e<o;e+=3)r.fromBufferAttribute(t,e+0),n.fromBufferAttribute(t,e+1),a.fromBufferAttribute(t,e+2),h.subVectors(a,n),c.subVectors(r,n),h.cross(c),i.setXYZ(e+0,h.x,h.y,h.z),i.setXYZ(e+1,h.x,h.y,h.z),i.setXYZ(e+2,h.x,h.y,h.z);this.normalizeNormals(),i.needsUpdate=!0}}merge(e,t){if(!e||!e.isBufferGeometry)return void console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",e);void 0===t&&(t=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));const i=this.attributes;for(const r in i){if(void 0===e.attributes[r])continue;const n=i[r].array,a=e.attributes[r],o=a.array,s=a.itemSize*t,l=Math.min(o.length,n.length-s);for(let e=0,t=s;e<l;e++,t++)n[t]=o[e]}return this}normalizeNormals(){const e=this.attributes.normal;for(let t=0,i=e.count;t<i;t++)on.fromBufferAttribute(e,t),on.normalize(),e.setXYZ(t,on.x,on.y,on.z)}toNonIndexed(){function e(e,t){const i=e.array,r=e.itemSize,n=e.normalized,a=new i.constructor(t.length*r);let o=0,s=0;for(let n=0,l=t.length;n<l;n++){o=e.isInterleavedBufferAttribute?t[n]*e.data.stride+e.offset:t[n]*r;for(let e=0;e<r;e++)a[s++]=i[o++]}return new Kr(a,r,n)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new sn,i=this.index.array,r=this.attributes;for(const n in r){const a=e(r[n],i);t.setAttribute(n,a)}const n=this.morphAttributes;for(const r in n){const a=[],o=n[r];for(let t=0,r=o.length;t<r;t++){const r=e(o[t],i);a.push(r)}t.morphAttributes[r]=a}t.morphTargetsRelative=this.morphTargetsRelative;const a=this.groups;for(let e=0,i=a.length;e<i;e++){const i=a[e];t.addGroup(i.start,i.count,i.materialIndex)}return t}toJSON(){const e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,""!==this.name&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),void 0!==this.parameters){const t=this.parameters;for(const i in t)void 0!==t[i]&&(e[i]=t[i]);return e}e.data={attributes:{}};const t=this.index;null!==t&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const i=this.attributes;for(const t in i){const r=i[t];e.data.attributes[t]=r.toJSON(e.data)}const r={};let n=!1;for(const t in this.morphAttributes){const i=this.morphAttributes[t],a=[];for(let t=0,r=i.length;t<r;t++){const r=i[t];a.push(r.toJSON(e.data))}a.length>0&&(r[t]=a,n=!0)}n&&(e.data.morphAttributes=r,e.data.morphTargetsRelative=this.morphTargetsRelative);const a=this.groups;a.length>0&&(e.data.groups=JSON.parse(JSON.stringify(a)));const o=this.boundingSphere;return null!==o&&(e.data.boundingSphere={center:o.center.toArray(),radius:o.radius}),e}clone(){return(new this.constructor).copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const i=e.index;null!==i&&this.setIndex(i.clone(t));const r=e.attributes;for(const e in r){const i=r[e];this.setAttribute(e,i.clone(t))}const n=e.morphAttributes;for(const e in n){const i=[],r=n[e];for(let e=0,n=r.length;e<n;e++)i.push(r[e].clone(t));this.morphAttributes[e]=i}this.morphTargetsRelative=e.morphTargetsRelative;const a=e.groups;for(let e=0,t=a.length;e<t;e++){const t=a[e];this.addGroup(t.start,t.count,t.materialIndex)}const o=e.boundingBox;null!==o&&(this.boundingBox=o.clone());const s=e.boundingSphere;return null!==s&&(this.boundingSphere=s.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,void 0!==e.parameters&&(this.parameters=Object.assign({},e.parameters)),this}dispose(){this.dispatchEvent({type:"dispose"})}}sn.prototype.isBufferGeometry=!0;const ln=new sr,hn=new or,cn=new Qi,un=new Ri,dn=new Ri,pn=new Ri,fn=new Ri,mn=new Ri,gn=new Ri,vn=new Ri,yn=new Ri,xn=new Ri,_n=new ni,wn=new ni,bn=new ni,Mn=new Ri,Sn=new Ri;class Tn extends Dr{constructor(e=new sn,t=new Xr){super(),this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),void 0!==e.morphTargetInfluences&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),void 0!==e.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this}updateMorphTargets(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,i=Object.keys(t);if(i.length>0){const e=t[i[0]];if(void 0!==e){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let t=0,i=e.length;t<i;t++){const i=e[t].name||String(t);this.morphTargetInfluences.push(0),this.morphTargetDictionary[i]=t}}}}else{const t=e.morphTargets;void 0!==t&&t.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}raycast(e,t){const i=this.geometry,r=this.material,n=this.matrixWorld;if(void 0===r)return;if(null===i.boundingSphere&&i.computeBoundingSphere(),cn.copy(i.boundingSphere),cn.applyMatrix4(n),!1===e.ray.intersectsSphere(cn))return;if(ln.copy(n).invert(),hn.copy(e.ray).applyMatrix4(ln),null!==i.boundingBox&&!1===hn.intersectsBox(i.boundingBox))return;let a;if(i.isBufferGeometry){const n=i.index,o=i.attributes.position,s=i.morphAttributes.position,l=i.morphTargetsRelative,h=i.attributes.uv,c=i.attributes.uv2,u=i.groups,d=i.drawRange;if(null!==n)if(Array.isArray(r))for(let i=0,p=u.length;i<p;i++){const p=u[i],f=r[p.materialIndex];for(let i=Math.max(p.start,d.start),r=Math.min(n.count,Math.min(p.start+p.count,d.start+d.count));i<r;i+=3){const r=n.getX(i),u=n.getX(i+1),d=n.getX(i+2);(a=En(this,f,e,hn,o,s,l,h,c,r,u,d))&&(a.faceIndex=Math.floor(i/3),a.face.materialIndex=p.materialIndex,t.push(a))}}else{for(let i=Math.max(0,d.start),u=Math.min(n.count,d.start+d.count);i<u;i+=3){const u=n.getX(i),d=n.getX(i+1),p=n.getX(i+2);(a=En(this,r,e,hn,o,s,l,h,c,u,d,p))&&(a.faceIndex=Math.floor(i/3),t.push(a))}}else if(void 0!==o)if(Array.isArray(r))for(let i=0,n=u.length;i<n;i++){const n=u[i],p=r[n.materialIndex];for(let i=Math.max(n.start,d.start),r=Math.min(o.count,Math.min(n.start+n.count,d.start+d.count));i<r;i+=3){(a=En(this,p,e,hn,o,s,l,h,c,i,i+1,i+2))&&(a.faceIndex=Math.floor(i/3),a.face.materialIndex=n.materialIndex,t.push(a))}}else{for(let i=Math.max(0,d.start),n=Math.min(o.count,d.start+d.count);i<n;i+=3){(a=En(this,r,e,hn,o,s,l,h,c,i,i+1,i+2))&&(a.faceIndex=Math.floor(i/3),t.push(a))}}}else i.isGeometry&&console.error("THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}function En(e,t,i,r,n,a,o,s,l,h,c,u){un.fromBufferAttribute(n,h),dn.fromBufferAttribute(n,c),pn.fromBufferAttribute(n,u);const d=e.morphTargetInfluences;if(a&&d){vn.set(0,0,0),yn.set(0,0,0),xn.set(0,0,0);for(let e=0,t=a.length;e<t;e++){const t=d[e],i=a[e];0!==t&&(fn.fromBufferAttribute(i,h),mn.fromBufferAttribute(i,c),gn.fromBufferAttribute(i,u),o?(vn.addScaledVector(fn,t),yn.addScaledVector(mn,t),xn.addScaledVector(gn,t)):(vn.addScaledVector(fn.sub(un),t),yn.addScaledVector(mn.sub(dn),t),xn.addScaledVector(gn.sub(pn),t)))}un.add(vn),dn.add(yn),pn.add(xn)}e.isSkinnedMesh&&(e.boneTransform(h,un),e.boneTransform(c,dn),e.boneTransform(u,pn));const p=function(e,t,i,r,n,a,o,s){let l;if(null===(l=t.side===T?r.intersectTriangle(o,a,n,!0,s):r.intersectTriangle(n,a,o,t.side!==E,s)))return null;Sn.copy(s),Sn.applyMatrix4(e.matrixWorld);const h=i.ray.origin.distanceTo(Sn);return h<i.near||h>i.far?null:{distance:h,point:Sn.clone(),object:e}}(e,t,i,r,un,dn,pn,Mn);if(p){s&&(_n.fromBufferAttribute(s,h),wn.fromBufferAttribute(s,c),bn.fromBufferAttribute(s,u),p.uv=kr.getUV(Mn,un,dn,pn,_n,wn,bn,new ni)),l&&(_n.fromBufferAttribute(l,h),wn.fromBufferAttribute(l,c),bn.fromBufferAttribute(l,u),p.uv2=kr.getUV(Mn,un,dn,pn,_n,wn,bn,new ni));const e={a:h,b:c,c:u,normal:new Ri,materialIndex:0};kr.getNormal(un,dn,pn,e.normal),p.face=e}return p}Tn.prototype.isMesh=!0;class An extends sn{constructor(e=1,t=1,i=1,r=1,n=1,a=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:i,widthSegments:r,heightSegments:n,depthSegments:a};const o=this;r=Math.floor(r),n=Math.floor(n);const s=[],l=[],h=[],c=[];let u=0,d=0;function p(e,t,i,r,n,a,p,f,m,g,v){const y=a/m,x=p/g,_=a/2,w=p/2,b=f/2,M=m+1,S=g+1;let T=0,E=0;const A=new Ri;for(let a=0;a<S;a++){const o=a*x-w;for(let s=0;s<M;s++){const u=s*y-_;A[e]=u*r,A[t]=o*n,A[i]=b,l.push(A.x,A.y,A.z),A[e]=0,A[t]=0,A[i]=f>0?1:-1,h.push(A.x,A.y,A.z),c.push(s/m),c.push(1-a/g),T+=1}}for(let e=0;e<g;e++)for(let t=0;t<m;t++){const i=u+t+M*e,r=u+t+M*(e+1),n=u+(t+1)+M*(e+1),a=u+(t+1)+M*e;s.push(i,r,a),s.push(r,n,a),E+=6}o.addGroup(d,E,v),d+=E,u+=T}p("z","y","x",-1,-1,i,t,e,a=Math.floor(a),n,0),p("z","y","x",1,-1,i,t,-e,a,n,1),p("x","z","y",1,1,e,i,t,r,a,2),p("x","z","y",1,-1,e,i,-t,r,a,3),p("x","y","z",1,-1,e,t,i,r,n,4),p("x","y","z",-1,-1,e,t,-i,r,n,5),this.setIndex(s),this.setAttribute("position",new Qr(l,3)),this.setAttribute("normal",new Qr(h,3)),this.setAttribute("uv",new Qr(c,2))}static fromJSON(e){return new An(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function Cn(e){const t={};for(const i in e){t[i]={};for(const r in e[i]){const n=e[i][r];n&&(n.isColor||n.isMatrix3||n.isMatrix4||n.isVector2||n.isVector3||n.isVector4||n.isTexture||n.isQuaternion)?t[i][r]=n.clone():Array.isArray(n)?t[i][r]=n.slice():t[i][r]=n}}return t}function Ln(e){const t={};for(let i=0;i<e.length;i++){const r=Cn(e[i]);for(const e in r)t[e]=r[e]}return t}const Rn={clone:Cn,merge:Ln};var Pn="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",Dn="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}";class Fn extends jr{constructor(e){super(),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader=Pn,this.fragmentShader=Dn,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==e&&(void 0!==e.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(e))}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=Cn(e.uniforms),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const i in this.uniforms){const r=this.uniforms[i].value;r&&r.isTexture?t.uniforms[i]={type:"t",value:r.toJSON(e).uuid}:r&&r.isColor?t.uniforms[i]={type:"c",value:r.getHex()}:r&&r.isVector2?t.uniforms[i]={type:"v2",value:r.toArray()}:r&&r.isVector3?t.uniforms[i]={type:"v3",value:r.toArray()}:r&&r.isVector4?t.uniforms[i]={type:"v4",value:r.toArray()}:r&&r.isMatrix3?t.uniforms[i]={type:"m3",value:r.toArray()}:r&&r.isMatrix4?t.uniforms[i]={type:"m4",value:r.toArray()}:t.uniforms[i]={value:r}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader;const i={};for(const e in this.extensions)!0===this.extensions[e]&&(i[e]=!0);return Object.keys(i).length>0&&(t.extensions=i),t}}Fn.prototype.isShaderMaterial=!0;class zn extends Dr{constructor(){super(),this.type="Camera",this.matrixWorldInverse=new sr,this.projectionMatrix=new sr,this.projectionMatrixInverse=new sr}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return(new this.constructor).copy(this)}}zn.prototype.isCamera=!0;class In extends zn{constructor(e=50,t=1,i=.1,r=2e3){super(),this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=i,this.far=r,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=null===e.view?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=2*Jt*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(.5*Zt*this.fov);return.5*this.getFilmHeight()/e}getEffectiveFOV(){return 2*Jt*Math.atan(Math.tan(.5*Zt*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,i,r,n,a){this.aspect=e/t,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=i,this.view.offsetY=r,this.view.width=n,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(.5*Zt*this.fov)/this.zoom,i=2*t,r=this.aspect*i,n=-.5*r;const a=this.view;if(null!==this.view&&this.view.enabled){const e=a.fullWidth,o=a.fullHeight;n+=a.offsetX*r/e,t-=a.offsetY*i/o,r*=a.width/e,i*=a.height/o}const o=this.filmOffset;0!==o&&(n+=e*o/this.getFilmWidth()),this.projectionMatrix.makePerspective(n,n+r,t,t-i,e,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,null!==this.view&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}In.prototype.isPerspectiveCamera=!0;const Nn=90,Un=1;class Bn extends Dr{constructor(e,t,i){if(super(),this.type="CubeCamera",!0!==i.isWebGLCubeRenderTarget)return void console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");this.renderTarget=i;const r=new In(Nn,Un,e,t);r.layers=this.layers,r.up.set(0,-1,0),r.lookAt(new Ri(1,0,0)),this.add(r);const n=new In(Nn,Un,e,t);n.layers=this.layers,n.up.set(0,-1,0),n.lookAt(new Ri(-1,0,0)),this.add(n);const a=new In(Nn,Un,e,t);a.layers=this.layers,a.up.set(0,0,1),a.lookAt(new Ri(0,1,0)),this.add(a);const o=new In(Nn,Un,e,t);o.layers=this.layers,o.up.set(0,0,-1),o.lookAt(new Ri(0,-1,0)),this.add(o);const s=new In(Nn,Un,e,t);s.layers=this.layers,s.up.set(0,-1,0),s.lookAt(new Ri(0,0,1)),this.add(s);const l=new In(Nn,Un,e,t);l.layers=this.layers,l.up.set(0,-1,0),l.lookAt(new Ri(0,0,-1)),this.add(l)}update(e,t){null===this.parent&&this.updateMatrixWorld();const i=this.renderTarget,[r,n,a,o,s,l]=this.children,h=e.getRenderTarget(),c=e.outputEncoding,u=e.toneMapping,d=e.xr.enabled;e.outputEncoding=zt,e.toneMapping=se,e.xr.enabled=!1;const p=i.texture.generateMipmaps;i.texture.generateMipmaps=!1,e.setRenderTarget(i,0),e.render(t,r),e.setRenderTarget(i,1),e.render(t,n),e.setRenderTarget(i,2),e.render(t,a),e.setRenderTarget(i,3),e.render(t,o),e.setRenderTarget(i,4),e.render(t,s),i.texture.generateMipmaps=p,e.setRenderTarget(i,5),e.render(t,l),e.setRenderTarget(h),e.outputEncoding=c,e.toneMapping=u,e.xr.enabled=d,i.texture.needsPMREMUpdate=!0}}class On extends Si{constructor(e,t,i,r,n,a,o,s,l,h){super(e=void 0!==e?e:[],t=void 0!==t?t:fe,i,r,n,a,o,s,l,h),this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}On.prototype.isCubeTexture=!0;class Vn extends Ei{constructor(e,t={}){super(e,e,t);const i={width:e,height:e,depth:1},r=[i,i,i,i,i,i];this.texture=new On(r,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=void 0!==t.generateMipmaps&&t.generateMipmaps,this.texture.minFilter=void 0!==t.minFilter?t.minFilter:Te}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.encoding=t.encoding,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const i={uniforms:{tEquirect:{value:null}},vertexShader:"\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t",fragmentShader:"\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t"},r=new An(5,5,5),n=new Fn({name:"CubemapFromEquirect",uniforms:Cn(i.uniforms),vertexShader:i.vertexShader,fragmentShader:i.fragmentShader,side:T,blending:C});n.uniforms.tEquirect.value=t;const a=new Tn(r,n),o=t.minFilter;return t.minFilter===Ae&&(t.minFilter=Te),new Bn(1,10,this).update(e,a),t.minFilter=o,a.geometry.dispose(),a.material.dispose(),this}clear(e,t,i,r){const n=e.getRenderTarget();for(let n=0;n<6;n++)e.setRenderTarget(this,n),e.clear(t,i,r);e.setRenderTarget(n)}}Vn.prototype.isWebGLCubeRenderTarget=!0;const Hn=new Ri,Gn=new Ri,kn=new ai;class Wn{constructor(e=new Ri(1,0,0),t=0){this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,i,r){return this.normal.set(e,t,i),this.constant=r,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,i){const r=Hn.subVectors(i,t).cross(Gn.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(r,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)}intersectLine(e,t){const i=e.delta(Hn),r=this.normal.dot(i);if(0===r)return 0===this.distanceToPoint(e.start)?t.copy(e.start):null;const n=-(e.start.dot(this.normal)+this.constant)/r;return n<0||n>1?null:t.copy(i).multiplyScalar(n).add(e.start)}intersectsLine(e){const t=this.distanceToPoint(e.start),i=this.distanceToPoint(e.end);return t<0&&i>0||i<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const i=t||kn.getNormalMatrix(e),r=this.coplanarPoint(Hn).applyMatrix4(e),n=this.normal.applyMatrix3(i).normalize();return this.constant=-r.dot(n),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return(new this.constructor).copy(this)}}Wn.prototype.isPlane=!0;const jn=new Qi,Xn=new Ri;class qn{constructor(e=new Wn,t=new Wn,i=new Wn,r=new Wn,n=new Wn,a=new Wn){this.planes=[e,t,i,r,n,a]}set(e,t,i,r,n,a){const o=this.planes;return o[0].copy(e),o[1].copy(t),o[2].copy(i),o[3].copy(r),o[4].copy(n),o[5].copy(a),this}copy(e){const t=this.planes;for(let i=0;i<6;i++)t[i].copy(e.planes[i]);return this}setFromProjectionMatrix(e){const t=this.planes,i=e.elements,r=i[0],n=i[1],a=i[2],o=i[3],s=i[4],l=i[5],h=i[6],c=i[7],u=i[8],d=i[9],p=i[10],f=i[11],m=i[12],g=i[13],v=i[14],y=i[15];return t[0].setComponents(o-r,c-s,f-u,y-m).normalize(),t[1].setComponents(o+r,c+s,f+u,y+m).normalize(),t[2].setComponents(o+n,c+l,f+d,y+g).normalize(),t[3].setComponents(o-n,c-l,f-d,y-g).normalize(),t[4].setComponents(o-a,c-h,f-p,y-v).normalize(),t[5].setComponents(o+a,c+h,f+p,y+v).normalize(),this}intersectsObject(e){const t=e.geometry;return null===t.boundingSphere&&t.computeBoundingSphere(),jn.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(jn)}intersectsSprite(e){return jn.center.set(0,0,0),jn.radius=.7071067811865476,jn.applyMatrix4(e.matrixWorld),this.intersectsSphere(jn)}intersectsSphere(e){const t=this.planes,i=e.center,r=-e.radius;for(let e=0;e<6;e++){if(t[e].distanceToPoint(i)<r)return!1}return!0}intersectsBox(e){const t=this.planes;for(let i=0;i<6;i++){const r=t[i];if(Xn.x=r.normal.x>0?e.max.x:e.min.x,Xn.y=r.normal.y>0?e.max.y:e.min.y,Xn.z=r.normal.z>0?e.max.z:e.min.z,r.distanceToPoint(Xn)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let i=0;i<6;i++)if(t[i].distanceToPoint(e)<0)return!1;return!0}clone(){return(new this.constructor).copy(this)}}function Yn(){let e=null,t=!1,i=null,r=null;function n(t,a){i(t,a),r=e.requestAnimationFrame(n)}return{start:function(){!0!==t&&null!==i&&(r=e.requestAnimationFrame(n),t=!0)},stop:function(){e.cancelAnimationFrame(r),t=!1},setAnimationLoop:function(e){i=e},setContext:function(t){e=t}}}function Kn(e,t){const i=t.isWebGL2,r=new WeakMap;return{get:function(e){return e.isInterleavedBufferAttribute&&(e=e.data),r.get(e)},remove:function(t){t.isInterleavedBufferAttribute&&(t=t.data);const i=r.get(t);i&&(e.deleteBuffer(i.buffer),r.delete(t))},update:function(t,n){if(t.isGLBufferAttribute){const e=r.get(t);return void((!e||e.version<t.version)&&r.set(t,{buffer:t.buffer,type:t.type,bytesPerElement:t.elementSize,version:t.version}))}t.isInterleavedBufferAttribute&&(t=t.data);const a=r.get(t);void 0===a?r.set(t,function(t,r){const n=t.array,a=t.usage,o=e.createBuffer();let s;if(e.bindBuffer(r,o),e.bufferData(r,n,a),t.onUploadCallback(),n instanceof Float32Array)s=5126;else if(n instanceof Uint16Array)if(t.isFloat16BufferAttribute){if(!i)throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");s=5131}else s=5123;else if(n instanceof Int16Array)s=5122;else if(n instanceof Uint32Array)s=5125;else if(n instanceof Int32Array)s=5124;else if(n instanceof Int8Array)s=5120;else if(n instanceof Uint8Array)s=5121;else{if(!(n instanceof Uint8ClampedArray))throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+n);s=5121}return{buffer:o,type:s,bytesPerElement:n.BYTES_PER_ELEMENT,version:t.version}}(t,n)):a.version<t.version&&(function(t,r,n){const a=r.array,o=r.updateRange;e.bindBuffer(n,t),-1===o.count?e.bufferSubData(n,0,a):(i?e.bufferSubData(n,o.offset*a.BYTES_PER_ELEMENT,a,o.offset,o.count):e.bufferSubData(n,o.offset*a.BYTES_PER_ELEMENT,a.subarray(o.offset,o.offset+o.count)),o.count=-1)}(a.buffer,t,n),a.version=t.version)}}}class Zn extends sn{constructor(e=1,t=1,i=1,r=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:i,heightSegments:r};const n=e/2,a=t/2,o=Math.floor(i),s=Math.floor(r),l=o+1,h=s+1,c=e/o,u=t/s,d=[],p=[],f=[],m=[];for(let e=0;e<h;e++){const t=e*u-a;for(let i=0;i<l;i++){const r=i*c-n;p.push(r,-t,0),f.push(0,0,1),m.push(i/o),m.push(1-e/s)}}for(let e=0;e<s;e++)for(let t=0;t<o;t++){const i=t+l*e,r=t+l*(e+1),n=t+1+l*(e+1),a=t+1+l*e;d.push(i,r,a),d.push(r,n,a)}this.setIndex(d),this.setAttribute("position",new Qr(p,3)),this.setAttribute("normal",new Qr(f,3)),this.setAttribute("uv",new Qr(m,2))}static fromJSON(e){return new Zn(e.width,e.height,e.widthSegments,e.heightSegments)}}const Jn={alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef USE_ALPHATEST\n\tif ( diffuseColor.a < alphaTest ) discard;\n#endif",alphatest_pars_fragment:"#ifdef USE_ALPHATEST\n\tuniform float alphaTest;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\n\t#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",begin_vertex:"vec3 transformed = vec3( position );",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"vec3 BRDF_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( f0, f90, dotVH );\n\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( V * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie( float roughness, float dotNH ) {\n\tfloat alpha = pow2( roughness );\n\tfloat invAlpha = 1.0 / alpha;\n\tfloat cos2h = dotNH * dotNH;\n\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\n\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\n}\nfloat V_Neubelt( float dotNV, float dotNL ) {\n\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\n}\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat D = D_Charlie( sheenRoughness, dotNH );\n\tfloat V = V_Neubelt( dotNV, dotNL );\n\treturn sheenColor * ( D * V );\n}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#if defined( USE_COLOR_ALPHA )\n\tdiffuseColor *= vColor;\n#elif defined( USE_COLOR )\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR )\n\tvarying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvarying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract( sin( sn ) * c );\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\tvec2 uv = getUV( direction, face ) * ( faceSize - 1.0 ) + 0.5;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\n\t\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\n\t\tuv.x *= CUBEUV_TEXEL_WIDTH;\n\t\tuv.y *= CUBEUV_TEXEL_HEIGHT;\n\t\t#ifdef texture2DGradEXT\n\t\t\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\n\t\t#else\n\t\t\treturn texture2D( envMap, uv ).rgb;\n\t\t#endif\n\t}\n\t#define r0 1.0\n\t#define v0 0.339\n\t#define m0 - 2.0\n\t#define r1 0.8\n\t#define v1 0.276\n\t#define m1 - 1.0\n\t#define r4 0.4\n\t#define v4 0.046\n\t#define m4 2.0\n\t#define r5 0.305\n\t#define v5 0.016\n\t#define m5 3.0\n\t#define r6 0.21\n\t#define v6 0.0038\n\t#define m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= r1 ) {\n\t\t\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\n\t\t} else if ( roughness >= r4 ) {\n\t\t\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\n\t\t} else if ( roughness >= r5 ) {\n\t\t\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\n\t\t} else if ( roughness >= r6 ) {\n\t\t\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), m0, CUBEUV_MAX_MIP );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",encodings_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_fragment:"vec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",envmap_physical_pars_fragment:"#if defined( USE_ENVMAP )\n\tvec3 getIBLIrradiance( const in vec3 normal ) {\n\t\t#if defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\n\t\t#if defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 reflectVec = reflect( - viewDir, normal );\n\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t\treturn envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n\tvFogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n\tvarying float vFogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float vFogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn vec3( texture2D( gradientMap, coord ).r );\n\t#else\n\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t#endif\n}",lightmap_fragment:"#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n\treflectedLight.indirectDiffuse += lightMapIrradiance;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_vertex:"vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry.normal );\n#ifdef DOUBLE_SIDED\n\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\n\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry.normal );\n#endif\n#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointLightInfo( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotLightInfo( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalLightInfo( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry.normal );\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\n\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\treturn irradiance;\n}\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\t#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\t\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\t\tif ( cutoffDistance > 0.0 ) {\n\t\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t\t}\n\t\treturn distanceFalloff;\n\t#else\n\t\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\t\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t\t}\n\t\treturn 1.0;\n\t#endif\n}\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\n\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tlight.color = directionalLight.color;\n\t\tlight.direction = directionalLight.direction;\n\t\tlight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tlight.color = pointLight.color;\n\t\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\n\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat angleCos = dot( light.direction, spotLight.direction );\n\t\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\tif ( spotAttenuation > 0.0 ) {\n\t\t\tfloat lightDistance = length( lVector );\n\t\t\tlight.color = spotLight.color * spotAttenuation;\n\t\t\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t\t} else {\n\t\t\tlight.color = vec3( 0.0 );\n\t\t\tlight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\n\t\tfloat dotNL = dot( normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\treturn irradiance;\n\t}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )\t(0)",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\nmaterial.roughness = min( material.roughness, 1.0 );\n#ifdef IOR\n\t#ifdef SPECULAR\n\t\tfloat specularIntensityFactor = specularIntensity;\n\t\tvec3 specularColorFactor = specularColor;\n\t\t#ifdef USE_SPECULARINTENSITYMAP\n\t\t\tspecularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;\n\t\t#endif\n\t\t#ifdef USE_SPECULARCOLORMAP\n\t\t\tspecularColorFactor *= texture2D( specularColorMap, vUv ).rgb;\n\t\t#endif\n\t\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\n\t#else\n\t\tfloat specularIntensityFactor = 1.0;\n\t\tvec3 specularColorFactor = vec3( 1.0 );\n\t\tmaterial.specularF90 = 1.0;\n\t#endif\n\tmaterial.specularColor = mix( min( pow2( ( ior - 1.0 ) / ( ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.specularF90 = 1.0;\n#endif\n#ifdef USE_CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\tmaterial.clearcoatF0 = vec3( 0.04 );\n\tmaterial.clearcoatF90 = 1.0;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheenColor;\n\t#ifdef USE_SHEENCOLORMAP\n\t\tmaterial.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;\n\t#endif\n\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\n\t#ifdef USE_SHEENROUGHNESSMAP\n\t\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;\n\t#endif\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat roughness;\n\tvec3 specularColor;\n\tfloat specularF90;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat clearcoat;\n\t\tfloat clearcoatRoughness;\n\t\tvec3 clearcoatF0;\n\t\tfloat clearcoatF90;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tvec3 sheenColor;\n\t\tfloat sheenRoughness;\n\t#endif\n};\nvec3 clearcoatSpecular = vec3( 0.0 );\nvec3 sheenSpecular = vec3( 0.0 );\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat r2 = roughness * roughness;\n\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\n\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\n\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\n\treturn saturate( DG * RECIPROCAL_PI );\n}\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\n\treturn fab;\n}\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\treturn specularColor * fab.x + specularF90 * fab.y;\n}\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\tvec3 FssEss = specularColor * fab.x + specularF90 * fab.y;\n\tfloat Ess = fab.x + fab.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.roughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = dotNLcc * directLight.color;\n\t\tclearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );\n\t#endif\n\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );\n\t#endif\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\tcomputeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n\treflectedLight.indirectSpecular += radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef USE_CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointLightInfo( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotLightInfo( spotLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getIBLIrradiance( geometry.normal );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );\n\t#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif",map_fragment:"#ifdef USE_MAP\n\tvec4 sampledDiffuseColor = texture2D( map, vUv );\n\t#ifdef DECODE_VIDEO_TEXTURE\n\t\tsampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\n\t#endif\n\tdiffuseColor *= sampledDiffuseColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n\tdiffuseColor *= texture2D( map, uv );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphcolor_vertex:"#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )\n\tvColor *= morphTargetBaseInfluence;\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t#if defined( USE_COLOR_ALPHA )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\n\t\t#elif defined( USE_COLOR )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\n\t\t#endif\n\t}\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\n\t\t}\n\t#else\n\t\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\t\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\t\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\t\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n\t#endif\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\n\t\tuniform sampler2DArray morphTargetsTexture;\n\t\tuniform ivec2 morphTargetsTextureSize;\n\t\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\n\t\t\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\n\t\t\tint y = texelIndex / morphTargetsTextureSize.x;\n\t\t\tint x = texelIndex - y * morphTargetsTextureSize.x;\n\t\t\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\n\t\t\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\n\t\t}\n\t#else\n\t\t#ifndef USE_MORPHNORMALS\n\t\t\tuniform float morphTargetInfluences[ 8 ];\n\t\t#else\n\t\t\tuniform float morphTargetInfluences[ 4 ];\n\t\t#endif\n\t#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\n\t\t}\n\t#else\n\t\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\t\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\t\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\t\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t\t#ifndef USE_MORPHNORMALS\n\t\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\t\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\t\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\t\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t\t#endif\n\t#endif\n#endif",normal_fragment_begin:"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * faceDirection;\n\t\t\tbitangent = bitangent * faceDirection;\n\t\t#endif\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal = normal;",normal_fragment_maps:"#ifdef OBJECTSPACE_NORMALMAP\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\t#ifdef USE_TANGENT\n\t\tnormal = normalize( vTBN * mapN );\n\t#else\n\t\tnormal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",normal_pars_fragment:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_pars_vertex:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_vertex:"#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tvec3 N = surf_norm;\n\t\tvec3 q1perp = cross( q1, N );\n\t\tvec3 q0perp = cross( N, q0 );\n\t\tvec3 T = q1perp * st0.x + q0perp * st1.x;\n\t\tvec3 B = q1perp * st0.y + q0perp * st1.y;\n\t\tfloat det = max( dot( T, T ), dot( B, B ) );\n\t\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\n\t\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\n\t}\n#endif",clearcoat_normal_fragment_begin:"#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\t#ifdef USE_TANGENT\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\t#else\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\n\t#endif\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif",output_fragment:"#ifdef OPAQUE\ndiffuseColor.a = 1.0;\n#endif\n#ifdef USE_TRANSMISSION\ndiffuseColor.a *= transmissionAlpha + 0.1;\n#endif\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n\t\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\tvec4 shadowWorldPosition;\n\t#endif\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform highp sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmission_fragment:"#ifdef USE_TRANSMISSION\n\tfloat transmissionAlpha = 1.0;\n\tfloat transmissionFactor = transmission;\n\tfloat thicknessFactor = thickness;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\ttransmissionFactor *= texture2D( transmissionMap, vUv ).r;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tthicknessFactor *= texture2D( thicknessMap, vUv ).g;\n\t#endif\n\tvec3 pos = vWorldPosition;\n\tvec3 v = normalize( cameraPosition - pos );\n\tvec3 n = inverseTransformDirection( normal, viewMatrix );\n\tvec4 transmission = getIBLVolumeRefraction(\n\t\tn, v, roughnessFactor, material.diffuseColor, material.specularColor, material.specularF90,\n\t\tpos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,\n\t\tattenuationColor, attenuationDistance );\n\ttotalDiffuse = mix( totalDiffuse, transmission.rgb, transmissionFactor );\n\ttransmissionAlpha = mix( transmissionAlpha, transmission.a, transmissionFactor );\n#endif",transmission_pars_fragment:"#ifdef USE_TRANSMISSION\n\tuniform float transmission;\n\tuniform float thickness;\n\tuniform float attenuationDistance;\n\tuniform vec3 attenuationColor;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tuniform sampler2D transmissionMap;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tuniform sampler2D thicknessMap;\n\t#endif\n\tuniform vec2 transmissionSamplerSize;\n\tuniform sampler2D transmissionSamplerMap;\n\tuniform mat4 modelMatrix;\n\tuniform mat4 projectionMatrix;\n\tvarying vec3 vWorldPosition;\n\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\n\t\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\n\t\tvec3 modelScale;\n\t\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\n\t\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\n\t\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\n\t\treturn normalize( refractionVector ) * thickness * modelScale;\n\t}\n\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\n\t\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\n\t}\n\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\n\t\tfloat framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\n\t\t#ifdef texture2DLodEXT\n\t\t\treturn texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n\t\t#else\n\t\t\treturn texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n\t\t#endif\n\t}\n\tvec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tif ( attenuationDistance == 0.0 ) {\n\t\t\treturn radiance;\n\t\t} else {\n\t\t\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\n\t\t\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\t\t\treturn transmittance * radiance;\n\t\t}\n\t}\n\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\n\t\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\n\t\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\n\t\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\n\t\tvec3 refractedRayExit = position + transmissionRay;\n\t\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n\t\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\n\t\trefractionCoords += 1.0;\n\t\trefractionCoords /= 2.0;\n\t\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\n\t\tvec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );\n\t\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\n\t\treturn vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );\n\t}\n#endif",uv_pars_fragment:"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\tvarying vec2 vUv;\n#endif",uv_pars_vertex:"#ifdef USE_UV\n\t#ifdef UVS_VERTEX_ONLY\n\t\tvec2 vUv;\n\t#else\n\t\tvarying vec2 vUv;\n\t#endif\n\tuniform mat3 uvTransform;\n#endif",uv_vertex:"#ifdef USE_UV\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",uv2_pars_fragment:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",uv2_pars_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\tuniform mat3 uv2Transform;\n#endif",uv2_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",background_frag:"uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tgl_FragColor = texture2D( t2D, vUv );\n\t#ifdef DECODE_VIDEO_TEXTURE\n\t\tgl_FragColor = vec4( mix( pow( gl_FragColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), gl_FragColor.rgb * 0.0773993808, vec3( lessThanEqual( gl_FragColor.rgb, vec3( 0.04045 ) ) ) ), gl_FragColor.w );\n\t#endif\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",cube_frag:"#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\tvec3 vReflect = vWorldDirection;\n\t#include <envmap_fragment>\n\tgl_FragColor = envColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",depth_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",meshbasic_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinbase_vertex>\n\t\t#include <skinnormal_vertex>\n\t\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshlambert_frag:"uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\t#else\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\t#endif\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t#else\n\t\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshnormal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",meshnormal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n\t#ifdef OPAQUE\n\t\tgl_FragColor.a = 1.0;\n\t#endif\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifdef USE_TRANSMISSION\n\tvarying vec3 vWorldPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n#ifdef USE_TRANSMISSION\n\tvWorldPosition = worldPosition.xyz;\n#endif\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n\t#define IOR\n\t#define SPECULAR\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef IOR\n\tuniform float ior;\n#endif\n#ifdef SPECULAR\n\tuniform float specularIntensity;\n\tuniform vec3 specularColor;\n\t#ifdef USE_SPECULARINTENSITYMAP\n\t\tuniform sampler2D specularIntensityMap;\n\t#endif\n\t#ifdef USE_SPECULARCOLORMAP\n\t\tuniform sampler2D specularColorMap;\n\t#endif\n#endif\n#ifdef USE_CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheenColor;\n\tuniform float sheenRoughness;\n\t#ifdef USE_SHEENCOLORMAP\n\t\tuniform sampler2D sheenColorMap;\n\t#endif\n\t#ifdef USE_SHEENROUGHNESSMAP\n\t\tuniform sampler2D sheenRoughnessMap;\n\t#endif\n#endif\nvarying vec3 vViewPosition;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_physical_pars_fragment>\n#include <transmission_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n\t#include <transmission_fragment>\n\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n\t#ifdef USE_SHEEN\n\t\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\n\t\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;\n\t#endif\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\n\t\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;\n\t#endif\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",shadow_vert:"#include <common>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}"},Qn={common:{diffuse:{value:new yi(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new ai},uv2Transform:{value:new ai},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new ni(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new yi(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new yi(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new ai}},sprite:{diffuse:{value:new yi(16777215)},opacity:{value:1},center:{value:new ni(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new ai}}},$n={basic:{uniforms:Ln([Qn.common,Qn.specularmap,Qn.envmap,Qn.aomap,Qn.lightmap,Qn.fog]),vertexShader:Jn.meshbasic_vert,fragmentShader:Jn.meshbasic_frag},lambert:{uniforms:Ln([Qn.common,Qn.specularmap,Qn.envmap,Qn.aomap,Qn.lightmap,Qn.emissivemap,Qn.fog,Qn.lights,{emissive:{value:new yi(0)}}]),vertexShader:Jn.meshlambert_vert,fragmentShader:Jn.meshlambert_frag},phong:{uniforms:Ln([Qn.common,Qn.specularmap,Qn.envmap,Qn.aomap,Qn.lightmap,Qn.emissivemap,Qn.bumpmap,Qn.normalmap,Qn.displacementmap,Qn.fog,Qn.lights,{emissive:{value:new yi(0)},specular:{value:new yi(1118481)},shininess:{value:30}}]),vertexShader:Jn.meshphong_vert,fragmentShader:Jn.meshphong_frag},standard:{uniforms:Ln([Qn.common,Qn.envmap,Qn.aomap,Qn.lightmap,Qn.emissivemap,Qn.bumpmap,Qn.normalmap,Qn.displacementmap,Qn.roughnessmap,Qn.metalnessmap,Qn.fog,Qn.lights,{emissive:{value:new yi(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Jn.meshphysical_vert,fragmentShader:Jn.meshphysical_frag},toon:{uniforms:Ln([Qn.common,Qn.aomap,Qn.lightmap,Qn.emissivemap,Qn.bumpmap,Qn.normalmap,Qn.displacementmap,Qn.gradientmap,Qn.fog,Qn.lights,{emissive:{value:new yi(0)}}]),vertexShader:Jn.meshtoon_vert,fragmentShader:Jn.meshtoon_frag},matcap:{uniforms:Ln([Qn.common,Qn.bumpmap,Qn.normalmap,Qn.displacementmap,Qn.fog,{matcap:{value:null}}]),vertexShader:Jn.meshmatcap_vert,fragmentShader:Jn.meshmatcap_frag},points:{uniforms:Ln([Qn.points,Qn.fog]),vertexShader:Jn.points_vert,fragmentShader:Jn.points_frag},dashed:{uniforms:Ln([Qn.common,Qn.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Jn.linedashed_vert,fragmentShader:Jn.linedashed_frag},depth:{uniforms:Ln([Qn.common,Qn.displacementmap]),vertexShader:Jn.depth_vert,fragmentShader:Jn.depth_frag},normal:{uniforms:Ln([Qn.common,Qn.bumpmap,Qn.normalmap,Qn.displacementmap,{opacity:{value:1}}]),vertexShader:Jn.meshnormal_vert,fragmentShader:Jn.meshnormal_frag},sprite:{uniforms:Ln([Qn.sprite,Qn.fog]),vertexShader:Jn.sprite_vert,fragmentShader:Jn.sprite_frag},background:{uniforms:{uvTransform:{value:new ai},t2D:{value:null}},vertexShader:Jn.background_vert,fragmentShader:Jn.background_frag},cube:{uniforms:Ln([Qn.envmap,{opacity:{value:1}}]),vertexShader:Jn.cube_vert,fragmentShader:Jn.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Jn.equirect_vert,fragmentShader:Jn.equirect_frag},distanceRGBA:{uniforms:Ln([Qn.common,Qn.displacementmap,{referencePosition:{value:new Ri},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Jn.distanceRGBA_vert,fragmentShader:Jn.distanceRGBA_frag},shadow:{uniforms:Ln([Qn.lights,Qn.fog,{color:{value:new yi(0)},opacity:{value:1}}]),vertexShader:Jn.shadow_vert,fragmentShader:Jn.shadow_frag}};function ea(e,t,i,r){const n=e.getParameter(34921),a=r.isWebGL2?null:t.get("OES_vertex_array_object"),o=r.isWebGL2||null!==a,s={},l=p(null);let h=l,c=!1;function u(t){return r.isWebGL2?e.bindVertexArray(t):a.bindVertexArrayOES(t)}function d(t){return r.isWebGL2?e.deleteVertexArray(t):a.deleteVertexArrayOES(t)}function p(e){const t=[],i=[],r=[];for(let e=0;e<n;e++)t[e]=0,i[e]=0,r[e]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:t,enabledAttributes:i,attributeDivisors:r,object:e,attributes:{},index:null}}function f(){const e=h.newAttributes;for(let t=0,i=e.length;t<i;t++)e[t]=0}function m(e){g(e,0)}function g(i,n){const a=h.newAttributes,o=h.enabledAttributes,s=h.attributeDivisors;if(a[i]=1,0===o[i]&&(e.enableVertexAttribArray(i),o[i]=1),s[i]!==n){(r.isWebGL2?e:t.get("ANGLE_instanced_arrays"))[r.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](i,n),s[i]=n}}function v(){const t=h.newAttributes,i=h.enabledAttributes;for(let r=0,n=i.length;r<n;r++)i[r]!==t[r]&&(e.disableVertexAttribArray(r),i[r]=0)}function y(t,i,n,a,o,s){!0!==r.isWebGL2||5124!==n&&5125!==n?e.vertexAttribPointer(t,i,n,a,o,s):e.vertexAttribIPointer(t,i,n,o,s)}function x(){_(),c=!0,h!==l&&u((h=l).object)}function _(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:function(n,l,d,x,_){let w=!1;if(o){const t=function(t,i,n){const o=!0===n.wireframe;let l=s[t.id];void 0===l&&(l={},s[t.id]=l);let h=l[i.id];void 0===h&&(h={},l[i.id]=h);let c=h[o];return void 0===c&&(c=p(r.isWebGL2?e.createVertexArray():a.createVertexArrayOES()),h[o]=c),c}(x,d,l);h!==t&&u((h=t).object),(w=function(e,t){const i=h.attributes,r=e.attributes;let n=0;for(const e in r){const t=i[e],a=r[e];if(void 0===t)return!0;if(t.attribute!==a)return!0;if(t.data!==a.data)return!0;n++}return h.attributesNum!==n||h.index!==t}(x,_))&&function(e,t){const i={},r=e.attributes;let n=0;for(const e in r){const t=r[e],a={};a.attribute=t,t.data&&(a.data=t.data),i[e]=a,n++}h.attributes=i,h.attributesNum=n,h.index=t}(x,_)}else{const e=!0===l.wireframe;h.geometry===x.id&&h.program===d.id&&h.wireframe===e||(h.geometry=x.id,h.program=d.id,h.wireframe=e,w=!0)}!0===n.isInstancedMesh&&(w=!0),null!==_&&i.update(_,34963),(w||c)&&(c=!1,function(n,a,o,s){if(!1===r.isWebGL2&&(n.isInstancedMesh||s.isInstancedBufferGeometry)&&null===t.get("ANGLE_instanced_arrays"))return;f();const l=s.attributes,h=o.getAttributes(),c=a.defaultAttributeValues;for(const t in h){const r=h[t];if(r.location>=0){let a=l[t];if(void 0===a&&("instanceMatrix"===t&&n.instanceMatrix&&(a=n.instanceMatrix),"instanceColor"===t&&n.instanceColor&&(a=n.instanceColor)),void 0!==a){const t=a.normalized,o=a.itemSize,l=i.get(a);if(void 0===l)continue;const h=l.buffer,c=l.type,u=l.bytesPerElement;if(a.isInterleavedBufferAttribute){const i=a.data,l=i.stride,d=a.offset;if(i.isInstancedInterleavedBuffer){for(let e=0;e<r.locationSize;e++)g(r.location+e,i.meshPerAttribute);!0!==n.isInstancedMesh&&void 0===s._maxInstanceCount&&(s._maxInstanceCount=i.meshPerAttribute*i.count)}else for(let e=0;e<r.locationSize;e++)m(r.location+e);e.bindBuffer(34962,h);for(let e=0;e<r.locationSize;e++)y(r.location+e,o/r.locationSize,c,t,l*u,(d+o/r.locationSize*e)*u)}else{if(a.isInstancedBufferAttribute){for(let e=0;e<r.locationSize;e++)g(r.location+e,a.meshPerAttribute);!0!==n.isInstancedMesh&&void 0===s._maxInstanceCount&&(s._maxInstanceCount=a.meshPerAttribute*a.count)}else for(let e=0;e<r.locationSize;e++)m(r.location+e);e.bindBuffer(34962,h);for(let e=0;e<r.locationSize;e++)y(r.location+e,o/r.locationSize,c,t,o*u,o/r.locationSize*e*u)}}else if(void 0!==c){const i=c[t];if(void 0!==i)switch(i.length){case 2:e.vertexAttrib2fv(r.location,i);break;case 3:e.vertexAttrib3fv(r.location,i);break;case 4:e.vertexAttrib4fv(r.location,i);break;default:e.vertexAttrib1fv(r.location,i)}}}}v()}(n,l,d,x),null!==_&&e.bindBuffer(34963,i.get(_).buffer))},reset:x,resetDefaultState:_,dispose:function(){x();for(const e in s){const t=s[e];for(const e in t){const i=t[e];for(const e in i)d(i[e].object),delete i[e];delete t[e]}delete s[e]}},releaseStatesOfGeometry:function(e){if(void 0===s[e.id])return;const t=s[e.id];for(const e in t){const i=t[e];for(const e in i)d(i[e].object),delete i[e];delete t[e]}delete s[e.id]},releaseStatesOfProgram:function(e){for(const t in s){const i=s[t];if(void 0===i[e.id])continue;const r=i[e.id];for(const e in r)d(r[e].object),delete r[e];delete i[e.id]}},initAttributes:f,enableAttribute:m,disableUnusedAttributes:v}}$n.physical={uniforms:Ln([$n.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new ni(1,1)},clearcoatNormalMap:{value:null},sheen:{value:0},sheenColor:{value:new yi(0)},sheenColorMap:{value:null},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new ni},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new yi(0)},specularIntensity:{value:1},specularIntensityMap:{value:null},specularColor:{value:new yi(1,1,1)},specularColorMap:{value:null}}]),vertexShader:Jn.meshphysical_vert,fragmentShader:Jn.meshphysical_frag};class ta extends zn{constructor(e=-1,t=1,i=1,r=-1,n=.1,a=2e3){super(),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=i,this.bottom=r,this.near=n,this.far=a,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=null===e.view?null:Object.assign({},e.view),this}setViewOffset(e,t,i,r,n,a){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=i,this.view.offsetY=r,this.view.width=n,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),i=(this.right+this.left)/2,r=(this.top+this.bottom)/2;let n=i-e,a=i+e,o=r+t,s=r-t;if(null!==this.view&&this.view.enabled){const e=(this.right-this.left)/this.view.fullWidth/this.zoom,t=(this.top-this.bottom)/this.view.fullHeight/this.zoom;a=(n+=e*this.view.offsetX)+e*this.view.width,s=(o-=t*this.view.offsetY)-t*this.view.height}this.projectionMatrix.makeOrthographic(n,a,o,s,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,null!==this.view&&(t.object.view=Object.assign({},this.view)),t}}ta.prototype.isOrthographicCamera=!0;const ia=4,ra=[.125,.215,.35,.446,.526,.582],na=20,aa=new ta,oa=new yi;let sa=null;const la=(1+Math.sqrt(5))/2,ha=1/la,ca=[new Ri(1,1,1),new Ri(-1,1,1),new Ri(1,1,-1),new Ri(-1,1,-1),new Ri(0,la,ha),new Ri(0,la,-ha),new Ri(ha,0,la),new Ri(-ha,0,la),new Ri(la,ha,0),new Ri(-la,ha,0)];class ua{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,i=.1,r=100){sa=this._renderer.getRenderTarget(),this._setSize(256);const n=this._allocateTargets();return n.depthBuffer=!0,this._sceneToCubeUV(e,i,r,n),t>0&&this._blur(n,0,0,t),this._applyPMREM(n),this._cleanup(n),n}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){null===this._cubemapMaterial&&(this._cubemapMaterial=ma(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){null===this._equirectMaterial&&(this._equirectMaterial=fa(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),null!==this._cubemapMaterial&&this._cubemapMaterial.dispose(),null!==this._equirectMaterial&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){null!==this._blurMaterial&&this._blurMaterial.dispose(),null!==this._pingPongRenderTarget&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(sa),e.scissorTest=!1,pa(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===fe||e.mapping===me?this._setSize(0===e.image.length?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),sa=this._renderer.getRenderTarget();const i=t||this._allocateTargets();return this._textureToCubeUV(e,i),this._applyPMREM(i),this._cleanup(i),i}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize-32,i={magFilter:Te,minFilter:Te,generateMipmaps:!1,type:Ie,format:He,encoding:zt,depthBuffer:!1},r=da(e,t,i);if(null===this._pingPongRenderTarget||this._pingPongRenderTarget.width!==e){null!==this._pingPongRenderTarget&&this._dispose(),this._pingPongRenderTarget=da(e,t,i);const{_lodMax:r}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=function(e){const t=[],i=[],r=[];let n=e;const a=e-ia+1+ra.length;for(let o=0;o<a;o++){const a=Math.pow(2,n);i.push(a);let s=1/a;o>e-ia?s=ra[o-e+ia-1]:0===o&&(s=0),r.push(s);const l=1/(a-1),h=-l/2,c=1+l/2,u=[h,h,c,h,c,c,h,h,c,c,h,c],d=6,p=6,f=3,m=2,g=1,v=new Float32Array(f*p*d),y=new Float32Array(m*p*d),x=new Float32Array(g*p*d);for(let e=0;e<d;e++){const t=e%3*2/3-1,i=e>2?0:-1,r=[t,i,0,t+2/3,i,0,t+2/3,i+1,0,t,i,0,t+2/3,i+1,0,t,i+1,0];v.set(r,f*p*e),y.set(u,m*p*e);const n=[e,e,e,e,e,e];x.set(n,g*p*e)}const _=new sn;_.setAttribute("position",new Kr(v,f)),_.setAttribute("uv",new Kr(y,m)),_.setAttribute("faceIndex",new Kr(x,g)),t.push(_),n>ia&&n--}return{lodPlanes:t,sizeLods:i,sigmas:r}}(r)),this._blurMaterial=function(e,t,i){const r=new Float32Array(na),n=new Ri(0,1,0);return new Fn({name:"SphericalGaussianBlur",defines:{n:na,CUBEUV_TEXEL_WIDTH:1/t,CUBEUV_TEXEL_HEIGHT:1/i,CUBEUV_MAX_MIP:`${e}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:r},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:n}},vertexShader:ga(),fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t",blending:C,depthTest:!1,depthWrite:!1})}(r,e,t)}return r}_compileMaterial(e){const t=new Tn(this._lodPlanes[0],e);this._renderer.compile(t,aa)}_sceneToCubeUV(e,t,i,r){const n=new In(90,1,t,i),a=[1,-1,1,1,1,1],o=[1,1,1,-1,-1,-1],s=this._renderer,l=s.autoClear,h=s.toneMapping;s.getClearColor(oa),s.toneMapping=se,s.autoClear=!1;const c=new Xr({name:"PMREM.Background",side:T,depthWrite:!1,depthTest:!1}),u=new Tn(new An,c);let d=!1;const p=e.background;p?p.isColor&&(c.color.copy(p),e.background=null,d=!0):(c.color.copy(oa),d=!0);for(let t=0;t<6;t++){const i=t%3;0===i?(n.up.set(0,a[t],0),n.lookAt(o[t],0,0)):1===i?(n.up.set(0,0,a[t]),n.lookAt(0,o[t],0)):(n.up.set(0,a[t],0),n.lookAt(0,0,o[t]));const l=this._cubeSize;pa(r,i*l,t>2?l:0,l,l),s.setRenderTarget(r),d&&s.render(u,n),s.render(e,n)}u.geometry.dispose(),u.material.dispose(),s.toneMapping=h,s.autoClear=l,e.background=p}_textureToCubeUV(e,t){const i=this._renderer,r=e.mapping===fe||e.mapping===me;r?(null===this._cubemapMaterial&&(this._cubemapMaterial=ma()),this._cubemapMaterial.uniforms.flipEnvMap.value=!1===e.isRenderTargetTexture?-1:1):null===this._equirectMaterial&&(this._equirectMaterial=fa());const n=r?this._cubemapMaterial:this._equirectMaterial,a=new Tn(this._lodPlanes[0],n);n.uniforms.envMap.value=e;const o=this._cubeSize;pa(t,0,0,3*o,2*o),i.setRenderTarget(t),i.render(a,aa)}_applyPMREM(e){const t=this._renderer,i=t.autoClear;t.autoClear=!1;for(let t=1;t<this._lodPlanes.length;t++){const i=Math.sqrt(this._sigmas[t]*this._sigmas[t]-this._sigmas[t-1]*this._sigmas[t-1]),r=ca[(t-1)%ca.length];this._blur(e,t-1,t,i,r)}t.autoClear=i}_blur(e,t,i,r,n){const a=this._pingPongRenderTarget;this._halfBlur(e,a,t,i,r,"latitudinal",n),this._halfBlur(a,e,i,i,r,"longitudinal",n)}_halfBlur(e,t,i,r,n,a,o){const s=this._renderer,l=this._blurMaterial;"latitudinal"!==a&&"longitudinal"!==a&&console.error("blur direction must be either latitudinal or longitudinal!");const h=new Tn(this._lodPlanes[r],l),c=l.uniforms,u=this._sizeLods[i]-1,d=isFinite(n)?Math.PI/(2*u):2*Math.PI/(2*na-1),p=n/d,f=isFinite(n)?1+Math.floor(3*p):na;f>na&&console.warn(`sigmaRadians, ${n}, is too large and will clip, as it requested ${f} samples when the maximum is set to ${na}`);const m=[];let g=0;for(let e=0;e<na;++e){const t=e/p,i=Math.exp(-t*t/2);m.push(i),0===e?g+=i:e<f&&(g+=2*i)}for(let e=0;e<m.length;e++)m[e]=m[e]/g;c.envMap.value=e.texture,c.samples.value=f,c.weights.value=m,c.latitudinal.value="latitudinal"===a,o&&(c.poleAxis.value=o);const{_lodMax:v}=this;c.dTheta.value=d,c.mipInt.value=v-i;const y=this._sizeLods[r];pa(t,3*y*(r>v-ia?r-v+ia:0),4*(this._cubeSize-y),3*y,2*y),s.setRenderTarget(t),s.render(h,aa)}}function da(e,t,i){const r=new Ei(e,t,i);return r.texture.mapping=ye,r.texture.name="PMREM.cubeUv",r.scissorTest=!0,r}function pa(e,t,i,r,n){e.viewport.set(t,i,r,n),e.scissor.set(t,i,r,n)}function fa(){return new Fn({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:ga(),fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n\n\t\t\t}\n\t\t",blending:C,depthTest:!1,depthWrite:!1})}function ma(){return new Fn({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:ga(),fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}\n\t\t",blending:C,depthTest:!1,depthWrite:!1})}function ga(){return"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t"}function va(e){let t=new WeakMap,i=null;function r(e){const i=e.target;i.removeEventListener("dispose",r);const n=t.get(i);void 0!==n&&(t.delete(i),n.dispose())}return{get:function(n){if(n&&n.isTexture){const a=n.mapping,o=a===ge||a===ve,s=a===fe||a===me;if(o||s){if(n.isRenderTargetTexture&&!0===n.needsPMREMUpdate){n.needsPMREMUpdate=!1;let r=t.get(n);return null===i&&(i=new ua(e)),r=o?i.fromEquirectangular(n,r):i.fromCubemap(n,r),t.set(n,r),r.texture}if(t.has(n))return t.get(n).texture;{const a=n.image;if(o&&a&&a.height>0||s&&a&&function(e){let t=0;for(let i=0;i<6;i++)void 0!==e[i]&&t++;return 6===t}(a)){null===i&&(i=new ua(e));const a=o?i.fromEquirectangular(n):i.fromCubemap(n);return t.set(n,a),n.addEventListener("dispose",r),a.texture}return null}}}return n},dispose:function(){t=new WeakMap,null!==i&&(i.dispose(),i=null)}}}function ya(e,t){return e[0]-t[0]}function xa(e,t){return Math.abs(t[1])-Math.abs(e[1])}function _a(e,t){let i=1;const r=t.isInterleavedBufferAttribute?t.data.array:t.array;r instanceof Int8Array?i=127:r instanceof Int16Array?i=32767:r instanceof Int32Array?i=2147483647:console.error("THREE.WebGLMorphtargets: Unsupported morph attribute data type: ",r),e.divideScalar(i)}const wa=new Si,ba=new Ai,Ma=new Ci,Sa=new On,Ta=[],Ea=[],Aa=new Float32Array(16),Ca=new Float32Array(9),La=new Float32Array(4);function Ra(e,t,i){const r=e[0];if(r<=0||r>0)return e;const n=t*i;let a=Ta[n];if(void 0===a&&(a=new Float32Array(n),Ta[n]=a),0!==t){r.toArray(a,0);for(let r=1,n=0;r!==t;++r)n+=i,e[r].toArray(a,n)}return a}function Pa(e,t){if(e.length!==t.length)return!1;for(let i=0,r=e.length;i<r;i++)if(e[i]!==t[i])return!1;return!0}function Da(e,t){for(let i=0,r=t.length;i<r;i++)e[i]=t[i]}function Fa(e,t){let i=Ea[t];void 0===i&&(i=new Int32Array(t),Ea[t]=i);for(let r=0;r!==t;++r)i[r]=e.allocateTextureUnit();return i}function za(e,t){const i=this.cache;i[0]!==t&&(e.uniform1f(this.addr,t),i[0]=t)}function Ia(e,t){const i=this.cache;if(void 0!==t.x)i[0]===t.x&&i[1]===t.y||(e.uniform2f(this.addr,t.x,t.y),i[0]=t.x,i[1]=t.y);else{if(Pa(i,t))return;e.uniform2fv(this.addr,t),Da(i,t)}}function Na(e,t){const i=this.cache;if(void 0!==t.x)i[0]===t.x&&i[1]===t.y&&i[2]===t.z||(e.uniform3f(this.addr,t.x,t.y,t.z),i[0]=t.x,i[1]=t.y,i[2]=t.z);else if(void 0!==t.r)i[0]===t.r&&i[1]===t.g&&i[2]===t.b||(e.uniform3f(this.addr,t.r,t.g,t.b),i[0]=t.r,i[1]=t.g,i[2]=t.b);else{if(Pa(i,t))return;e.uniform3fv(this.addr,t),Da(i,t)}}function Ua(e,t){const i=this.cache;if(void 0!==t.x)i[0]===t.x&&i[1]===t.y&&i[2]===t.z&&i[3]===t.w||(e.uniform4f(this.addr,t.x,t.y,t.z,t.w),i[0]=t.x,i[1]=t.y,i[2]=t.z,i[3]=t.w);else{if(Pa(i,t))return;e.uniform4fv(this.addr,t),Da(i,t)}}function Ba(e,t){const i=this.cache,r=t.elements;if(void 0===r){if(Pa(i,t))return;e.uniformMatrix2fv(this.addr,!1,t),Da(i,t)}else{if(Pa(i,r))return;La.set(r),e.uniformMatrix2fv(this.addr,!1,La),Da(i,r)}}function Oa(e,t){const i=this.cache,r=t.elements;if(void 0===r){if(Pa(i,t))return;e.uniformMatrix3fv(this.addr,!1,t),Da(i,t)}else{if(Pa(i,r))return;Ca.set(r),e.uniformMatrix3fv(this.addr,!1,Ca),Da(i,r)}}function Va(e,t){const i=this.cache,r=t.elements;if(void 0===r){if(Pa(i,t))return;e.uniformMatrix4fv(this.addr,!1,t),Da(i,t)}else{if(Pa(i,r))return;Aa.set(r),e.uniformMatrix4fv(this.addr,!1,Aa),Da(i,r)}}function Ha(e,t){const i=this.cache;i[0]!==t&&(e.uniform1i(this.addr,t),i[0]=t)}function Ga(e,t){const i=this.cache;Pa(i,t)||(e.uniform2iv(this.addr,t),Da(i,t))}function ka(e,t){const i=this.cache;Pa(i,t)||(e.uniform3iv(this.addr,t),Da(i,t))}function Wa(e,t){const i=this.cache;Pa(i,t)||(e.uniform4iv(this.addr,t),Da(i,t))}function ja(e,t){const i=this.cache;i[0]!==t&&(e.uniform1ui(this.addr,t),i[0]=t)}function Xa(e,t){const i=this.cache;Pa(i,t)||(e.uniform2uiv(this.addr,t),Da(i,t))}function qa(e,t){const i=this.cache;Pa(i,t)||(e.uniform3uiv(this.addr,t),Da(i,t))}function Ya(e,t){const i=this.cache;Pa(i,t)||(e.uniform4uiv(this.addr,t),Da(i,t))}function Ka(e,t,i){const r=this.cache,n=i.allocateTextureUnit();r[0]!==n&&(e.uniform1i(this.addr,n),r[0]=n),i.setTexture2D(t||wa,n)}function Za(e,t,i){const r=this.cache,n=i.allocateTextureUnit();r[0]!==n&&(e.uniform1i(this.addr,n),r[0]=n),i.setTexture3D(t||Ma,n)}function Ja(e,t,i){const r=this.cache,n=i.allocateTextureUnit();r[0]!==n&&(e.uniform1i(this.addr,n),r[0]=n),i.setTextureCube(t||Sa,n)}function Qa(e,t,i){const r=this.cache,n=i.allocateTextureUnit();r[0]!==n&&(e.uniform1i(this.addr,n),r[0]=n),i.setTexture2DArray(t||ba,n)}function $a(e,t){e.uniform1fv(this.addr,t)}function eo(e,t){const i=Ra(t,this.size,2);e.uniform2fv(this.addr,i)}function to(e,t){const i=Ra(t,this.size,3);e.uniform3fv(this.addr,i)}function io(e,t){const i=Ra(t,this.size,4);e.uniform4fv(this.addr,i)}function ro(e,t){const i=Ra(t,this.size,4);e.uniformMatrix2fv(this.addr,!1,i)}function no(e,t){const i=Ra(t,this.size,9);e.uniformMatrix3fv(this.addr,!1,i)}function ao(e,t){const i=Ra(t,this.size,16);e.uniformMatrix4fv(this.addr,!1,i)}function oo(e,t){e.uniform1iv(this.addr,t)}function so(e,t){e.uniform2iv(this.addr,t)}function lo(e,t){e.uniform3iv(this.addr,t)}function ho(e,t){e.uniform4iv(this.addr,t)}function co(e,t){e.uniform1uiv(this.addr,t)}function uo(e,t){e.uniform2uiv(this.addr,t)}function po(e,t){e.uniform3uiv(this.addr,t)}function fo(e,t){e.uniform4uiv(this.addr,t)}function mo(e,t,i){const r=t.length,n=Fa(i,r);e.uniform1iv(this.addr,n);for(let e=0;e!==r;++e)i.setTexture2D(t[e]||wa,n[e])}function go(e,t,i){const r=t.length,n=Fa(i,r);e.uniform1iv(this.addr,n);for(let e=0;e!==r;++e)i.setTexture3D(t[e]||Ma,n[e])}function vo(e,t,i){const r=t.length,n=Fa(i,r);e.uniform1iv(this.addr,n);for(let e=0;e!==r;++e)i.setTextureCube(t[e]||Sa,n[e])}function yo(e,t,i){const r=t.length,n=Fa(i,r);e.uniform1iv(this.addr,n);for(let e=0;e!==r;++e)i.setTexture2DArray(t[e]||ba,n[e])}function xo(e,t,i){this.id=e,this.addr=i,this.cache=[],this.setValue=function(e){switch(e){case 5126:return za;case 35664:return Ia;case 35665:return Na;case 35666:return Ua;case 35674:return Ba;case 35675:return Oa;case 35676:return Va;case 5124:case 35670:return Ha;case 35667:case 35671:return Ga;case 35668:case 35672:return ka;case 35669:case 35673:return Wa;case 5125:return ja;case 36294:return Xa;case 36295:return qa;case 36296:return Ya;case 35678:case 36198:case 36298:case 36306:case 35682:return Ka;case 35679:case 36299:case 36307:return Za;case 35680:case 36300:case 36308:case 36293:return Ja;case 36289:case 36303:case 36311:case 36292:return Qa}}(t.type)}function _o(e,t,i){this.id=e,this.addr=i,this.cache=[],this.size=t.size,this.setValue=function(e){switch(e){case 5126:return $a;case 35664:return eo;case 35665:return to;case 35666:return io;case 35674:return ro;case 35675:return no;case 35676:return ao;case 5124:case 35670:return oo;case 35667:case 35671:return so;case 35668:case 35672:return lo;case 35669:case 35673:return ho;case 5125:return co;case 36294:return uo;case 36295:return po;case 36296:return fo;case 35678:case 36198:case 36298:case 36306:case 35682:return mo;case 35679:case 36299:case 36307:return go;case 35680:case 36300:case 36308:case 36293:return vo;case 36289:case 36303:case 36311:case 36292:return yo}}(t.type)}function wo(e){this.id=e,this.seq=[],this.map={}}_o.prototype.updateCache=function(e){const t=this.cache;e instanceof Float32Array&&t.length!==e.length&&(this.cache=new Float32Array(e.length)),Da(t,e)},wo.prototype.setValue=function(e,t,i){const r=this.seq;for(let n=0,a=r.length;n!==a;++n){const a=r[n];a.setValue(e,t[a.id],i)}};const bo=/(\w+)(\])?(\[|\.)?/g;function Mo(e,t){e.seq.push(t),e.map[t.id]=t}function So(e,t,i){const r=e.name,n=r.length;for(bo.lastIndex=0;;){const a=bo.exec(r),o=bo.lastIndex;let s=a[1];const l="]"===a[2],h=a[3];if(l&&(s|=0),void 0===h||"["===h&&o+2===n){Mo(i,void 0===h?new xo(s,e,t):new _o(s,e,t));break}{let e=i.map[s];void 0===e&&Mo(i,e=new wo(s)),i=e}}}function To(e,t){this.seq=[],this.map={};const i=e.getProgramParameter(t,35718);for(let r=0;r<i;++r){const i=e.getActiveUniform(t,r);So(i,e.getUniformLocation(t,i.name),this)}}function Eo(e,t,i){const r=e.createShader(t);return e.shaderSource(r,i),e.compileShader(r),r}To.prototype.setValue=function(e,t,i,r){const n=this.map[t];void 0!==n&&n.setValue(e,i,r)},To.prototype.setOptional=function(e,t,i){const r=t[i];void 0!==r&&this.setValue(e,i,r)},To.upload=function(e,t,i,r){for(let n=0,a=t.length;n!==a;++n){const a=t[n],o=i[a.id];!1!==o.needsUpdate&&a.setValue(e,o.value,r)}},To.seqWithValue=function(e,t){const i=[];for(let r=0,n=e.length;r!==n;++r){const n=e[r];n.id in t&&i.push(n)}return i};let Ao=0;function Co(e,t,i){const r=e.getShaderParameter(t,35713),n=e.getShaderInfoLog(t).trim();if(r&&""===n)return"";const a=parseInt(/ERROR: 0:(\d+)/.exec(n)[1]);return i.toUpperCase()+"\n\n"+n+"\n\n"+function(e,t){const i=e.split("\n"),r=[],n=Math.max(t-6,0),a=Math.min(t+6,i.length);for(let e=n;e<a;e++)r.push(e+1+": "+i[e]);return r.join("\n")}(e.getShaderSource(t),a)}function Lo(e,t){const i=function(e){switch(e){case zt:return["Linear","( value )"];case It:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",e),["Linear","( value )"]}}(t);return"vec4 "+e+"( vec4 value ) { return LinearTo"+i[0]+i[1]+"; }"}function Ro(e){return""!==e}function Po(e,t){return e.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function Do(e,t){return e.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}const Fo=/^[ \t]*#include +<([\w\d./]+)>/gm;function zo(e){return e.replace(Fo,Io)}function Io(e,t){const i=Jn[t];if(void 0===i)throw new Error("Can not resolve #include <"+t+">");return zo(i)}const No=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,Uo=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Bo(e){return e.replace(Uo,Vo).replace(No,Oo)}function Oo(e,t,i,r){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),Vo(e,t,i,r)}function Vo(e,t,i,r){let n="";for(let e=parseInt(t);e<parseInt(i);e++)n+=r.replace(/\[\s*i\s*\]/g,"[ "+e+" ]").replace(/UNROLLED_LOOP_INDEX/g,e);return n}function Ho(e){let t="precision "+e.precision+" float;\nprecision "+e.precision+" int;";return"highp"===e.precision?t+="\n#define HIGH_PRECISION":"mediump"===e.precision?t+="\n#define MEDIUM_PRECISION":"lowp"===e.precision&&(t+="\n#define LOW_PRECISION"),t}function Go(e,t,i,r){const n=e.getContext(),a=i.defines;let o=i.vertexShader,s=i.fragmentShader;const l=function(e){let t="SHADOWMAP_TYPE_BASIC";return e.shadowMapType===w?t="SHADOWMAP_TYPE_PCF":e.shadowMapType===b?t="SHADOWMAP_TYPE_PCF_SOFT":e.shadowMapType===M&&(t="SHADOWMAP_TYPE_VSM"),t}(i),h=function(e){let t="ENVMAP_TYPE_CUBE";if(e.envMap)switch(e.envMapMode){case fe:case me:t="ENVMAP_TYPE_CUBE";break;case ye:t="ENVMAP_TYPE_CUBE_UV"}return t}(i),c=function(e){let t="ENVMAP_MODE_REFLECTION";if(e.envMap)switch(e.envMapMode){case me:t="ENVMAP_MODE_REFRACTION"}return t}(i),u=function(e){let t="ENVMAP_BLENDING_NONE";if(e.envMap)switch(e.combine){case ne:t="ENVMAP_BLENDING_MULTIPLY";break;case ae:t="ENVMAP_BLENDING_MIX";break;case oe:t="ENVMAP_BLENDING_ADD"}return t}(i),d=function(e){const t=e.envMapCubeUVHeight;if(null===t)return null;const i=Math.log2(t/32+1)+3,r=1/t;return{texelWidth:1/(3*Math.max(Math.pow(2,i),112)),texelHeight:r,maxMip:i}}(i),p=i.isWebGL2?"":function(e){return[e.extensionDerivatives||e.envMapCubeUVHeight||e.bumpMap||e.tangentSpaceNormalMap||e.clearcoatNormalMap||e.flatShading||"physical"===e.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(e.extensionFragDepth||e.logarithmicDepthBuffer)&&e.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",e.extensionDrawBuffers&&e.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(e.extensionShaderTextureLOD||e.envMap||e.transmission)&&e.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(Ro).join("\n")}(i),f=function(e){const t=[];for(const i in e){const r=e[i];!1!==r&&t.push("#define "+i+" "+r)}return t.join("\n")}(a),m=n.createProgram();let g,v,y=i.glslVersion?"#version "+i.glslVersion+"\n":"";i.isRawShaderMaterial?((g=[f].filter(Ro).join("\n")).length>0&&(g+="\n"),(v=[p,f].filter(Ro).join("\n")).length>0&&(v+="\n")):(g=[Ho(i),"#define SHADER_NAME "+i.shaderName,f,i.instancing?"#define USE_INSTANCING":"",i.instancingColor?"#define USE_INSTANCING_COLOR":"",i.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define MAX_BONES "+i.maxBones,i.useFog&&i.fog?"#define USE_FOG":"",i.useFog&&i.fogExp2?"#define FOG_EXP2":"",i.map?"#define USE_MAP":"",i.envMap?"#define USE_ENVMAP":"",i.envMap?"#define "+c:"",i.lightMap?"#define USE_LIGHTMAP":"",i.aoMap?"#define USE_AOMAP":"",i.emissiveMap?"#define USE_EMISSIVEMAP":"",i.bumpMap?"#define USE_BUMPMAP":"",i.normalMap?"#define USE_NORMALMAP":"",i.normalMap&&i.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",i.normalMap&&i.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",i.clearcoatMap?"#define USE_CLEARCOATMAP":"",i.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",i.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",i.displacementMap&&i.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",i.specularMap?"#define USE_SPECULARMAP":"",i.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",i.specularColorMap?"#define USE_SPECULARCOLORMAP":"",i.roughnessMap?"#define USE_ROUGHNESSMAP":"",i.metalnessMap?"#define USE_METALNESSMAP":"",i.alphaMap?"#define USE_ALPHAMAP":"",i.transmission?"#define USE_TRANSMISSION":"",i.transmissionMap?"#define USE_TRANSMISSIONMAP":"",i.thicknessMap?"#define USE_THICKNESSMAP":"",i.sheenColorMap?"#define USE_SHEENCOLORMAP":"",i.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",i.vertexTangents?"#define USE_TANGENT":"",i.vertexColors?"#define USE_COLOR":"",i.vertexAlphas?"#define USE_COLOR_ALPHA":"",i.vertexUvs?"#define USE_UV":"",i.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",i.flatShading?"#define FLAT_SHADED":"",i.skinning?"#define USE_SKINNING":"",i.useVertexTexture?"#define BONE_TEXTURE":"",i.morphTargets?"#define USE_MORPHTARGETS":"",i.morphNormals&&!1===i.flatShading?"#define USE_MORPHNORMALS":"",i.morphColors&&i.isWebGL2?"#define USE_MORPHCOLORS":"",i.morphTargetsCount>0&&i.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",i.morphTargetsCount>0&&i.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+i.morphTextureStride:"",i.morphTargetsCount>0&&i.isWebGL2?"#define MORPHTARGETS_COUNT "+i.morphTargetsCount:"",i.doubleSided?"#define DOUBLE_SIDED":"",i.flipSided?"#define FLIP_SIDED":"",i.shadowMapEnabled?"#define USE_SHADOWMAP":"",i.shadowMapEnabled?"#define "+l:"",i.sizeAttenuation?"#define USE_SIZEATTENUATION":"",i.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",i.logarithmicDepthBuffer&&i.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","\tattribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","\tattribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","\tattribute vec4 color;","#elif defined( USE_COLOR )","\tattribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(Ro).join("\n"),v=[p,Ho(i),"#define SHADER_NAME "+i.shaderName,f,i.useFog&&i.fog?"#define USE_FOG":"",i.useFog&&i.fogExp2?"#define FOG_EXP2":"",i.map?"#define USE_MAP":"",i.matcap?"#define USE_MATCAP":"",i.envMap?"#define USE_ENVMAP":"",i.envMap?"#define "+h:"",i.envMap?"#define "+c:"",i.envMap?"#define "+u:"",d?"#define CUBEUV_TEXEL_WIDTH "+d.texelWidth:"",d?"#define CUBEUV_TEXEL_HEIGHT "+d.texelHeight:"",d?"#define CUBEUV_MAX_MIP "+d.maxMip+".0":"",i.lightMap?"#define USE_LIGHTMAP":"",i.aoMap?"#define USE_AOMAP":"",i.emissiveMap?"#define USE_EMISSIVEMAP":"",i.bumpMap?"#define USE_BUMPMAP":"",i.normalMap?"#define USE_NORMALMAP":"",i.normalMap&&i.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",i.normalMap&&i.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",i.clearcoat?"#define USE_CLEARCOAT":"",i.clearcoatMap?"#define USE_CLEARCOATMAP":"",i.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",i.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",i.specularMap?"#define USE_SPECULARMAP":"",i.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",i.specularColorMap?"#define USE_SPECULARCOLORMAP":"",i.roughnessMap?"#define USE_ROUGHNESSMAP":"",i.metalnessMap?"#define USE_METALNESSMAP":"",i.alphaMap?"#define USE_ALPHAMAP":"",i.alphaTest?"#define USE_ALPHATEST":"",i.sheen?"#define USE_SHEEN":"",i.sheenColorMap?"#define USE_SHEENCOLORMAP":"",i.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",i.transmission?"#define USE_TRANSMISSION":"",i.transmissionMap?"#define USE_TRANSMISSIONMAP":"",i.thicknessMap?"#define USE_THICKNESSMAP":"",i.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",i.vertexTangents?"#define USE_TANGENT":"",i.vertexColors||i.instancingColor?"#define USE_COLOR":"",i.vertexAlphas?"#define USE_COLOR_ALPHA":"",i.vertexUvs?"#define USE_UV":"",i.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",i.gradientMap?"#define USE_GRADIENTMAP":"",i.flatShading?"#define FLAT_SHADED":"",i.doubleSided?"#define DOUBLE_SIDED":"",i.flipSided?"#define FLIP_SIDED":"",i.shadowMapEnabled?"#define USE_SHADOWMAP":"",i.shadowMapEnabled?"#define "+l:"",i.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",i.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",i.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",i.logarithmicDepthBuffer&&i.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",i.toneMapping!==se?"#define TONE_MAPPING":"",i.toneMapping!==se?Jn.tonemapping_pars_fragment:"",i.toneMapping!==se?function(e,t){let i;switch(t){case le:i="Linear";break;case he:i="Reinhard";break;case ce:i="OptimizedCineon";break;case ue:i="ACESFilmic";break;case de:i="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",t),i="Linear"}return"vec3 "+e+"( vec3 color ) { return "+i+"ToneMapping( color ); }"}("toneMapping",i.toneMapping):"",i.dithering?"#define DITHERING":"",i.opaque?"#define OPAQUE":"",Jn.encodings_pars_fragment,Lo("linearToOutputTexel",i.outputEncoding),i.depthPacking?"#define DEPTH_PACKING "+i.depthPacking:"","\n"].filter(Ro).join("\n")),o=Do(o=Po(o=zo(o),i),i),s=Do(s=Po(s=zo(s),i),i),o=Bo(o),s=Bo(s),i.isWebGL2&&!0!==i.isRawShaderMaterial&&(y="#version 300 es\n",g=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+g,v=["#define varying in",i.glslVersion===Xt?"":"layout(location = 0) out highp vec4 pc_fragColor;",i.glslVersion===Xt?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+v);const x=y+v+s,_=Eo(n,35633,y+g+o),S=Eo(n,35632,x);if(n.attachShader(m,_),n.attachShader(m,S),void 0!==i.index0AttributeName?n.bindAttribLocation(m,0,i.index0AttributeName):!0===i.morphTargets&&n.bindAttribLocation(m,0,"position"),n.linkProgram(m),e.debug.checkShaderErrors){const e=n.getProgramInfoLog(m).trim(),t=n.getShaderInfoLog(_).trim(),i=n.getShaderInfoLog(S).trim();let r=!0,a=!0;if(!1===n.getProgramParameter(m,35714)){r=!1;const t=Co(n,_,"vertex"),i=Co(n,S,"fragment");console.error("THREE.WebGLProgram: Shader Error "+n.getError()+" - VALIDATE_STATUS "+n.getProgramParameter(m,35715)+"\n\nProgram Info Log: "+e+"\n"+t+"\n"+i)}else""!==e?console.warn("THREE.WebGLProgram: Program Info Log:",e):""!==t&&""!==i||(a=!1);a&&(this.diagnostics={runnable:r,programLog:e,vertexShader:{log:t,prefix:g},fragmentShader:{log:i,prefix:v}})}let T,E;return n.deleteShader(_),n.deleteShader(S),this.getUniforms=function(){return void 0===T&&(T=new To(n,m)),T},this.getAttributes=function(){return void 0===E&&(E=function(e,t){const i={},r=e.getProgramParameter(t,35721);for(let n=0;n<r;n++){const r=e.getActiveAttrib(t,n),a=r.name;let o=1;35674===r.type&&(o=2),35675===r.type&&(o=3),35676===r.type&&(o=4),i[a]={type:r.type,location:e.getAttribLocation(t,a),locationSize:o}}return i}(n,m)),E},this.destroy=function(){r.releaseStatesOfProgram(this),n.deleteProgram(m),this.program=void 0},this.name=i.shaderName,this.id=Ao++,this.cacheKey=t,this.usedTimes=1,this.program=m,this.vertexShader=_,this.fragmentShader=S,this}let ko=0;class Wo{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,i=e.fragmentShader,r=this._getShaderStage(t),n=this._getShaderStage(i),a=this._getShaderCacheForMaterial(e);return!1===a.has(r)&&(a.add(r),r.usedTimes++),!1===a.has(n)&&(a.add(n),n.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const e of t)e.usedTimes--,0===e.usedTimes&&this.shaderCache.delete(e.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;return!1===t.has(e)&&t.set(e,new Set),t.get(e)}_getShaderStage(e){const t=this.shaderCache;if(!1===t.has(e)){const i=new jo(e);t.set(e,i)}return t.get(e)}}class jo{constructor(e){this.id=ko++,this.code=e,this.usedTimes=0}}function Xo(e,t,i,r,n,a,o){const s=new yr,l=new Wo,h=[],c=n.isWebGL2,u=n.logarithmicDepthBuffer,d=n.floatVertexTextures,p=n.maxVertexUniforms,f=n.vertexTextures;let m=n.precision;const g={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};return{getParameters:function(a,s,h,v,y){const x=v.fog,_=y.geometry,w=a.isMeshStandardMaterial?v.environment:null,b=(a.isMeshStandardMaterial?i:t).get(a.envMap||w),M=b&&b.mapping===ye?b.image.height:null,S=g[a.type],A=y.isSkinnedMesh?function(e){const t=e.skeleton.bones;if(d)return 1024;{const e=p,i=Math.floor((e-20)/4),r=Math.min(i,t.length);return r<t.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+t.length+" bones. This GPU supports "+r+"."),0):r}}(y):0;null!==a.precision&&(m=n.getMaxPrecision(a.precision))!==a.precision&&console.warn("THREE.WebGLProgram.getParameters:",a.precision,"not supported, using",m,"instead.");const C=_.morphAttributes.position||_.morphAttributes.normal||_.morphAttributes.color,R=void 0!==C?C.length:0;let P,D,F,z,I=0;if(void 0!==_.morphAttributes.position&&(I=1),void 0!==_.morphAttributes.normal&&(I=2),void 0!==_.morphAttributes.color&&(I=3),S){const e=$n[S];P=e.vertexShader,D=e.fragmentShader}else P=a.vertexShader,D=a.fragmentShader,l.update(a),F=l.getVertexShaderID(a),z=l.getFragmentShaderID(a);const N=e.getRenderTarget(),U=a.alphaTest>0,B=a.clearcoat>0;return{isWebGL2:c,shaderID:S,shaderName:a.type,vertexShader:P,fragmentShader:D,defines:a.defines,customVertexShaderID:F,customFragmentShaderID:z,isRawShaderMaterial:!0===a.isRawShaderMaterial,glslVersion:a.glslVersion,precision:m,instancing:!0===y.isInstancedMesh,instancingColor:!0===y.isInstancedMesh&&null!==y.instanceColor,supportsVertexTextures:f,outputEncoding:null===N?e.outputEncoding:!0===N.isXRRenderTarget?N.texture.encoding:zt,map:!!a.map,matcap:!!a.matcap,envMap:!!b,envMapMode:b&&b.mapping,envMapCubeUVHeight:M,lightMap:!!a.lightMap,aoMap:!!a.aoMap,emissiveMap:!!a.emissiveMap,bumpMap:!!a.bumpMap,normalMap:!!a.normalMap,objectSpaceNormalMap:a.normalMapType===Ot,tangentSpaceNormalMap:a.normalMapType===Bt,decodeVideoTexture:!!a.map&&!0===a.map.isVideoTexture&&a.map.encoding===It,clearcoat:B,clearcoatMap:B&&!!a.clearcoatMap,clearcoatRoughnessMap:B&&!!a.clearcoatRoughnessMap,clearcoatNormalMap:B&&!!a.clearcoatNormalMap,displacementMap:!!a.displacementMap,roughnessMap:!!a.roughnessMap,metalnessMap:!!a.metalnessMap,specularMap:!!a.specularMap,specularIntensityMap:!!a.specularIntensityMap,specularColorMap:!!a.specularColorMap,opaque:!1===a.transparent&&a.blending===L,alphaMap:!!a.alphaMap,alphaTest:U,gradientMap:!!a.gradientMap,sheen:a.sheen>0,sheenColorMap:!!a.sheenColorMap,sheenRoughnessMap:!!a.sheenRoughnessMap,transmission:a.transmission>0,transmissionMap:!!a.transmissionMap,thicknessMap:!!a.thicknessMap,combine:a.combine,vertexTangents:!!a.normalMap&&!!_.attributes.tangent,vertexColors:a.vertexColors,vertexAlphas:!0===a.vertexColors&&!!_.attributes.color&&4===_.attributes.color.itemSize,vertexUvs:!!(a.map||a.bumpMap||a.normalMap||a.specularMap||a.alphaMap||a.emissiveMap||a.roughnessMap||a.metalnessMap||a.clearcoatMap||a.clearcoatRoughnessMap||a.clearcoatNormalMap||a.displacementMap||a.transmissionMap||a.thicknessMap||a.specularIntensityMap||a.specularColorMap||a.sheenColorMap||a.sheenRoughnessMap),uvsVertexOnly:!(a.map||a.bumpMap||a.normalMap||a.specularMap||a.alphaMap||a.emissiveMap||a.roughnessMap||a.metalnessMap||a.clearcoatNormalMap||a.transmission>0||a.transmissionMap||a.thicknessMap||a.specularIntensityMap||a.specularColorMap||a.sheen>0||a.sheenColorMap||a.sheenRoughnessMap||!a.displacementMap),fog:!!x,useFog:a.fog,fogExp2:x&&x.isFogExp2,flatShading:!!a.flatShading,sizeAttenuation:a.sizeAttenuation,logarithmicDepthBuffer:u,skinning:!0===y.isSkinnedMesh&&A>0,maxBones:A,useVertexTexture:d,morphTargets:void 0!==_.morphAttributes.position,morphNormals:void 0!==_.morphAttributes.normal,morphColors:void 0!==_.morphAttributes.color,morphTargetsCount:R,morphTextureStride:I,numDirLights:s.directional.length,numPointLights:s.point.length,numSpotLights:s.spot.length,numRectAreaLights:s.rectArea.length,numHemiLights:s.hemi.length,numDirLightShadows:s.directionalShadowMap.length,numPointLightShadows:s.pointShadowMap.length,numSpotLightShadows:s.spotShadowMap.length,numClippingPlanes:o.numPlanes,numClipIntersection:o.numIntersection,dithering:a.dithering,shadowMapEnabled:e.shadowMap.enabled&&h.length>0,shadowMapType:e.shadowMap.type,toneMapping:a.toneMapped?e.toneMapping:se,physicallyCorrectLights:e.physicallyCorrectLights,premultipliedAlpha:a.premultipliedAlpha,doubleSided:a.side===E,flipSided:a.side===T,depthPacking:void 0!==a.depthPacking&&a.depthPacking,index0AttributeName:a.index0AttributeName,extensionDerivatives:a.extensions&&a.extensions.derivatives,extensionFragDepth:a.extensions&&a.extensions.fragDepth,extensionDrawBuffers:a.extensions&&a.extensions.drawBuffers,extensionShaderTextureLOD:a.extensions&&a.extensions.shaderTextureLOD,rendererExtensionFragDepth:c||r.has("EXT_frag_depth"),rendererExtensionDrawBuffers:c||r.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:c||r.has("EXT_shader_texture_lod"),customProgramCacheKey:a.customProgramCacheKey()}},getProgramCacheKey:function(t){const i=[];if(t.shaderID?i.push(t.shaderID):(i.push(t.customVertexShaderID),i.push(t.customFragmentShaderID)),void 0!==t.defines)for(const e in t.defines)i.push(e),i.push(t.defines[e]);return!1===t.isRawShaderMaterial&&(function(e,t){e.push(t.precision),e.push(t.outputEncoding),e.push(t.envMapMode),e.push(t.envMapCubeUVHeight),e.push(t.combine),e.push(t.vertexUvs),e.push(t.fogExp2),e.push(t.sizeAttenuation),e.push(t.maxBones),e.push(t.morphTargetsCount),e.push(t.morphAttributeCount),e.push(t.numDirLights),e.push(t.numPointLights),e.push(t.numSpotLights),e.push(t.numHemiLights),e.push(t.numRectAreaLights),e.push(t.numDirLightShadows),e.push(t.numPointLightShadows),e.push(t.numSpotLightShadows),e.push(t.shadowMapType),e.push(t.toneMapping),e.push(t.numClippingPlanes),e.push(t.numClipIntersection)}(i,t),function(e,t){s.disableAll(),t.isWebGL2&&s.enable(0),t.supportsVertexTextures&&s.enable(1),t.instancing&&s.enable(2),t.instancingColor&&s.enable(3),t.map&&s.enable(4),t.matcap&&s.enable(5),t.envMap&&s.enable(6),t.lightMap&&s.enable(7),t.aoMap&&s.enable(8),t.emissiveMap&&s.enable(9),t.bumpMap&&s.enable(10),t.normalMap&&s.enable(11),t.objectSpaceNormalMap&&s.enable(12),t.tangentSpaceNormalMap&&s.enable(13),t.clearcoat&&s.enable(14),t.clearcoatMap&&s.enable(15),t.clearcoatRoughnessMap&&s.enable(16),t.clearcoatNormalMap&&s.enable(17),t.displacementMap&&s.enable(18),t.specularMap&&s.enable(19),t.roughnessMap&&s.enable(20),t.metalnessMap&&s.enable(21),t.gradientMap&&s.enable(22),t.alphaMap&&s.enable(23),t.alphaTest&&s.enable(24),t.vertexColors&&s.enable(25),t.vertexAlphas&&s.enable(26),t.vertexUvs&&s.enable(27),t.vertexTangents&&s.enable(28),t.uvsVertexOnly&&s.enable(29),t.fog&&s.enable(30),e.push(s.mask),s.disableAll(),t.useFog&&s.enable(0),t.flatShading&&s.enable(1),t.logarithmicDepthBuffer&&s.enable(2),t.skinning&&s.enable(3),t.useVertexTexture&&s.enable(4),t.morphTargets&&s.enable(5),t.morphNormals&&s.enable(6),t.morphColors&&s.enable(7),t.premultipliedAlpha&&s.enable(8),t.shadowMapEnabled&&s.enable(9),t.physicallyCorrectLights&&s.enable(10),t.doubleSided&&s.enable(11),t.flipSided&&s.enable(12),t.depthPacking&&s.enable(13),t.dithering&&s.enable(14),t.specularIntensityMap&&s.enable(15),t.specularColorMap&&s.enable(16),t.transmission&&s.enable(17),t.transmissionMap&&s.enable(18),t.thicknessMap&&s.enable(19),t.sheen&&s.enable(20),t.sheenColorMap&&s.enable(21),t.sheenRoughnessMap&&s.enable(22),t.decodeVideoTexture&&s.enable(23),t.opaque&&s.enable(24),e.push(s.mask)}(i,t),i.push(e.outputEncoding)),i.push(t.customProgramCacheKey),i.join()},getUniforms:function(e){const t=g[e.type];let i;if(t){const e=$n[t];i=Rn.clone(e.uniforms)}else i=e.uniforms;return i},acquireProgram:function(t,i){let r;for(let e=0,t=h.length;e<t;e++){const t=h[e];if(t.cacheKey===i){++(r=t).usedTimes;break}}return void 0===r&&(r=new Go(e,i,t,a),h.push(r)),r},releaseProgram:function(e){if(0==--e.usedTimes){const t=h.indexOf(e);h[t]=h[h.length-1],h.pop(),e.destroy()}},releaseShaderCache:function(e){l.remove(e)},programs:h,dispose:function(){l.dispose()}}}function qo(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.material.id!==t.material.id?e.material.id-t.material.id:e.z!==t.z?e.z-t.z:e.id-t.id}function Yo(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.z!==t.z?t.z-e.z:e.id-t.id}function Ko(){const e=[];let t=0;const i=[],r=[],n=[];function a(i,r,n,a,o,s){let l=e[t];return void 0===l?(l={id:i.id,object:i,geometry:r,material:n,groupOrder:a,renderOrder:i.renderOrder,z:o,group:s},e[t]=l):(l.id=i.id,l.object=i,l.geometry=r,l.material=n,l.groupOrder=a,l.renderOrder=i.renderOrder,l.z=o,l.group=s),t++,l}return{opaque:i,transmissive:r,transparent:n,init:function(){t=0,i.length=0,r.length=0,n.length=0},push:function(e,t,o,s,l,h){const c=a(e,t,o,s,l,h);o.transmission>0?r.push(c):!0===o.transparent?n.push(c):i.push(c)},unshift:function(e,t,o,s,l,h){const c=a(e,t,o,s,l,h);o.transmission>0?r.unshift(c):!0===o.transparent?n.unshift(c):i.unshift(c)},finish:function(){for(let i=t,r=e.length;i<r;i++){const t=e[i];if(null===t.id)break;t.id=null,t.object=null,t.geometry=null,t.material=null,t.group=null}},sort:function(e,t){i.length>1&&i.sort(e||qo),r.length>1&&r.sort(t||Yo),n.length>1&&n.sort(t||Yo)}}}let Zo=0;function Jo(e,t){return(t.castShadow?1:0)-(e.castShadow?1:0)}function Qo(e,t){const i=new function(){const e={};return{get:function(t){if(void 0!==e[t.id])return e[t.id];let i;switch(t.type){case"DirectionalLight":i={direction:new Ri,color:new yi};break;case"SpotLight":i={position:new Ri,direction:new Ri,color:new yi,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":i={position:new Ri,color:new yi,distance:0,decay:0};break;case"HemisphereLight":i={direction:new Ri,skyColor:new yi,groundColor:new yi};break;case"RectAreaLight":i={color:new yi,position:new Ri,halfWidth:new Ri,halfHeight:new Ri}}return e[t.id]=i,i}}},r=function(){const e={};return{get:function(t){if(void 0!==e[t.id])return e[t.id];let i;switch(t.type){case"DirectionalLight":case"SpotLight":i={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ni};break;case"PointLight":i={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ni,shadowCameraNear:1,shadowCameraFar:1e3}}return e[t.id]=i,i}}}(),n={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let e=0;e<9;e++)n.probe.push(new Ri);const a=new Ri,o=new sr,s=new sr;return{setup:function(a,o){let s=0,l=0,h=0;for(let e=0;e<9;e++)n.probe[e].set(0,0,0);let c=0,u=0,d=0,p=0,f=0,m=0,g=0,v=0;a.sort(Jo);const y=!0!==o?Math.PI:1;for(let e=0,t=a.length;e<t;e++){const t=a[e],o=t.color,x=t.intensity,_=t.distance,w=t.shadow&&t.shadow.map?t.shadow.map.texture:null;if(t.isAmbientLight)s+=o.r*x*y,l+=o.g*x*y,h+=o.b*x*y;else if(t.isLightProbe)for(let e=0;e<9;e++)n.probe[e].addScaledVector(t.sh.coefficients[e],x);else if(t.isDirectionalLight){const e=i.get(t);if(e.color.copy(t.color).multiplyScalar(t.intensity*y),t.castShadow){const e=t.shadow,i=r.get(t);i.shadowBias=e.bias,i.shadowNormalBias=e.normalBias,i.shadowRadius=e.radius,i.shadowMapSize=e.mapSize,n.directionalShadow[c]=i,n.directionalShadowMap[c]=w,n.directionalShadowMatrix[c]=t.shadow.matrix,m++}n.directional[c]=e,c++}else if(t.isSpotLight){const e=i.get(t);if(e.position.setFromMatrixPosition(t.matrixWorld),e.color.copy(o).multiplyScalar(x*y),e.distance=_,e.coneCos=Math.cos(t.angle),e.penumbraCos=Math.cos(t.angle*(1-t.penumbra)),e.decay=t.decay,t.castShadow){const e=t.shadow,i=r.get(t);i.shadowBias=e.bias,i.shadowNormalBias=e.normalBias,i.shadowRadius=e.radius,i.shadowMapSize=e.mapSize,n.spotShadow[d]=i,n.spotShadowMap[d]=w,n.spotShadowMatrix[d]=t.shadow.matrix,v++}n.spot[d]=e,d++}else if(t.isRectAreaLight){const e=i.get(t);e.color.copy(o).multiplyScalar(x),e.halfWidth.set(.5*t.width,0,0),e.halfHeight.set(0,.5*t.height,0),n.rectArea[p]=e,p++}else if(t.isPointLight){const e=i.get(t);if(e.color.copy(t.color).multiplyScalar(t.intensity*y),e.distance=t.distance,e.decay=t.decay,t.castShadow){const e=t.shadow,i=r.get(t);i.shadowBias=e.bias,i.shadowNormalBias=e.normalBias,i.shadowRadius=e.radius,i.shadowMapSize=e.mapSize,i.shadowCameraNear=e.camera.near,i.shadowCameraFar=e.camera.far,n.pointShadow[u]=i,n.pointShadowMap[u]=w,n.pointShadowMatrix[u]=t.shadow.matrix,g++}n.point[u]=e,u++}else if(t.isHemisphereLight){const e=i.get(t);e.skyColor.copy(t.color).multiplyScalar(x*y),e.groundColor.copy(t.groundColor).multiplyScalar(x*y),n.hemi[f]=e,f++}}p>0&&(t.isWebGL2?(n.rectAreaLTC1=Qn.LTC_FLOAT_1,n.rectAreaLTC2=Qn.LTC_FLOAT_2):!0===e.has("OES_texture_float_linear")?(n.rectAreaLTC1=Qn.LTC_FLOAT_1,n.rectAreaLTC2=Qn.LTC_FLOAT_2):!0===e.has("OES_texture_half_float_linear")?(n.rectAreaLTC1=Qn.LTC_HALF_1,n.rectAreaLTC2=Qn.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),n.ambient[0]=s,n.ambient[1]=l,n.ambient[2]=h;const x=n.hash;x.directionalLength===c&&x.pointLength===u&&x.spotLength===d&&x.rectAreaLength===p&&x.hemiLength===f&&x.numDirectionalShadows===m&&x.numPointShadows===g&&x.numSpotShadows===v||(n.directional.length=c,n.spot.length=d,n.rectArea.length=p,n.point.length=u,n.hemi.length=f,n.directionalShadow.length=m,n.directionalShadowMap.length=m,n.pointShadow.length=g,n.pointShadowMap.length=g,n.spotShadow.length=v,n.spotShadowMap.length=v,n.directionalShadowMatrix.length=m,n.pointShadowMatrix.length=g,n.spotShadowMatrix.length=v,x.directionalLength=c,x.pointLength=u,x.spotLength=d,x.rectAreaLength=p,x.hemiLength=f,x.numDirectionalShadows=m,x.numPointShadows=g,x.numSpotShadows=v,n.version=Zo++)},setupView:function(e,t){let i=0,r=0,l=0,h=0,c=0;const u=t.matrixWorldInverse;for(let t=0,d=e.length;t<d;t++){const d=e[t];if(d.isDirectionalLight){const e=n.directional[i];e.direction.setFromMatrixPosition(d.matrixWorld),a.setFromMatrixPosition(d.target.matrixWorld),e.direction.sub(a),e.direction.transformDirection(u),i++}else if(d.isSpotLight){const e=n.spot[l];e.position.setFromMatrixPosition(d.matrixWorld),e.position.applyMatrix4(u),e.direction.setFromMatrixPosition(d.matrixWorld),a.setFromMatrixPosition(d.target.matrixWorld),e.direction.sub(a),e.direction.transformDirection(u),l++}else if(d.isRectAreaLight){const e=n.rectArea[h];e.position.setFromMatrixPosition(d.matrixWorld),e.position.applyMatrix4(u),s.identity(),o.copy(d.matrixWorld),o.premultiply(u),s.extractRotation(o),e.halfWidth.set(.5*d.width,0,0),e.halfHeight.set(0,.5*d.height,0),e.halfWidth.applyMatrix4(s),e.halfHeight.applyMatrix4(s),h++}else if(d.isPointLight){const e=n.point[r];e.position.setFromMatrixPosition(d.matrixWorld),e.position.applyMatrix4(u),r++}else if(d.isHemisphereLight){const e=n.hemi[c];e.direction.setFromMatrixPosition(d.matrixWorld),e.direction.transformDirection(u),e.direction.normalize(),c++}}},state:n}}function $o(e,t){const i=new Qo(e,t),r=[],n=[];return{init:function(){r.length=0,n.length=0},state:{lightsArray:r,shadowsArray:n,lights:i},setupLights:function(e){i.setup(r,e)},setupLightsView:function(e){i.setupView(r,e)},pushLight:function(e){r.push(e)},pushShadow:function(e){n.push(e)}}}class es extends jr{constructor(e){super(),this.type="MeshDepthMaterial",this.depthPacking=Nt,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}es.prototype.isMeshDepthMaterial=!0;class ts extends jr{constructor(e){super(),this.type="MeshDistanceMaterial",this.referencePosition=new Ri,this.nearDistance=1,this.farDistance=1e3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.setValues(e)}copy(e){return super.copy(e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}ts.prototype.isMeshDistanceMaterial=!0;const is="void main() {\n\tgl_Position = vec4( position, 1.0 );\n}",rs="uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n\tconst float samples = float( VSM_SAMPLES );\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\n\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\n\tfor ( float i = 0.0; i < samples; i ++ ) {\n\t\tfloat uvOffset = uvStart + i * uvStride;\n\t\t#ifdef HORIZONTAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean / samples;\n\tsquared_mean = squared_mean / samples;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}";function ns(e,t,i){let r=new qn;const n=new ni,a=new ni,o=new Ti,s=new es({depthPacking:Ut}),l=new ts,h={},c=i.maxTextureSize,u={0:T,1:S,2:E},d=new Fn({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new ni},radius:{value:4}},vertexShader:is,fragmentShader:rs}),p=d.clone();p.defines.HORIZONTAL_PASS=1;const f=new sn;f.setAttribute("position",new Kr(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const m=new Tn(f,d),g=this;function v(i,r){const n=t.update(m);d.defines.VSM_SAMPLES!==i.blurSamples&&(d.defines.VSM_SAMPLES=i.blurSamples,p.defines.VSM_SAMPLES=i.blurSamples,d.needsUpdate=!0,p.needsUpdate=!0),d.uniforms.shadow_pass.value=i.map.texture,d.uniforms.resolution.value=i.mapSize,d.uniforms.radius.value=i.radius,e.setRenderTarget(i.mapPass),e.clear(),e.renderBufferDirect(r,null,n,d,m,null),p.uniforms.shadow_pass.value=i.mapPass.texture,p.uniforms.resolution.value=i.mapSize,p.uniforms.radius.value=i.radius,e.setRenderTarget(i.map),e.clear(),e.renderBufferDirect(r,null,n,p,m,null)}function y(t,i,r,n,a,o){let c=null;const d=!0===r.isPointLight?t.customDistanceMaterial:t.customDepthMaterial;if(c=void 0!==d?d:!0===r.isPointLight?l:s,e.localClippingEnabled&&!0===i.clipShadows&&0!==i.clippingPlanes.length||i.displacementMap&&0!==i.displacementScale||i.alphaMap&&i.alphaTest>0){const e=c.uuid,t=i.uuid;let r=h[e];void 0===r&&(r={},h[e]=r);let n=r[t];void 0===n&&(n=c.clone(),r[t]=n),c=n}return c.visible=i.visible,c.wireframe=i.wireframe,c.side=o===M?null!==i.shadowSide?i.shadowSide:i.side:null!==i.shadowSide?i.shadowSide:u[i.side],c.alphaMap=i.alphaMap,c.alphaTest=i.alphaTest,c.clipShadows=i.clipShadows,c.clippingPlanes=i.clippingPlanes,c.clipIntersection=i.clipIntersection,c.displacementMap=i.displacementMap,c.displacementScale=i.displacementScale,c.displacementBias=i.displacementBias,c.wireframeLinewidth=i.wireframeLinewidth,c.linewidth=i.linewidth,!0===r.isPointLight&&!0===c.isMeshDistanceMaterial&&(c.referencePosition.setFromMatrixPosition(r.matrixWorld),c.nearDistance=n,c.farDistance=a),c}function x(i,n,a,o,s){if(!1===i.visible)return;if(i.layers.test(n.layers)&&(i.isMesh||i.isLine||i.isPoints)&&(i.castShadow||i.receiveShadow&&s===M)&&(!i.frustumCulled||r.intersectsObject(i))){i.modelViewMatrix.multiplyMatrices(a.matrixWorldInverse,i.matrixWorld);const r=t.update(i),n=i.material;if(Array.isArray(n)){const t=r.groups;for(let l=0,h=t.length;l<h;l++){const h=t[l],c=n[h.materialIndex];if(c&&c.visible){const t=y(i,c,o,a.near,a.far,s);e.renderBufferDirect(a,null,r,t,i,h)}}}else if(n.visible){const t=y(i,n,o,a.near,a.far,s);e.renderBufferDirect(a,null,r,t,i,null)}}const l=i.children;for(let e=0,t=l.length;e<t;e++)x(l[e],n,a,o,s)}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=w,this.render=function(t,i,s){if(!1===g.enabled)return;if(!1===g.autoUpdate&&!1===g.needsUpdate)return;if(0===t.length)return;const l=e.getRenderTarget(),h=e.getActiveCubeFace(),u=e.getActiveMipmapLevel(),d=e.state;d.setBlending(C),d.buffers.color.setClear(1,1,1,1),d.buffers.depth.setTest(!0),d.setScissorTest(!1);for(let l=0,h=t.length;l<h;l++){const h=t[l],u=h.shadow;if(void 0===u){console.warn("THREE.WebGLShadowMap:",h,"has no shadow.");continue}if(!1===u.autoUpdate&&!1===u.needsUpdate)continue;n.copy(u.mapSize);const p=u.getFrameExtents();if(n.multiply(p),a.copy(u.mapSize),(n.x>c||n.y>c)&&(n.x>c&&(a.x=Math.floor(c/p.x),n.x=a.x*p.x,u.mapSize.x=a.x),n.y>c&&(a.y=Math.floor(c/p.y),n.y=a.y*p.y,u.mapSize.y=a.y)),null!==u.map||u.isPointLightShadow||this.type!==M||(u.map=new Ei(n.x,n.y),u.map.texture.name=h.name+".shadowMap",u.mapPass=new Ei(n.x,n.y),u.camera.updateProjectionMatrix()),null===u.map){const e={minFilter:be,magFilter:be,format:He};u.map=new Ei(n.x,n.y,e),u.map.texture.name=h.name+".shadowMap",u.camera.updateProjectionMatrix()}e.setRenderTarget(u.map),e.clear();const f=u.getViewportCount();for(let e=0;e<f;e++){const t=u.getViewport(e);o.set(a.x*t.x,a.y*t.y,a.x*t.z,a.y*t.w),d.viewport(o),u.updateMatrices(h,e),r=u.getFrustum(),x(i,s,u.camera,h,this.type)}u.isPointLightShadow||this.type!==M||v(u,s),u.needsUpdate=!1}g.needsUpdate=!1,e.setRenderTarget(l,h,u)}}function as(e,t,i,r,n,a,o){const s=n.isWebGL2,l=n.maxTextures,h=n.maxCubemapSize,c=n.maxTextureSize,u=n.maxSamples,d=t.has("WEBGL_multisampled_render_to_texture")?t.get("WEBGL_multisampled_render_to_texture"):null,p=/OculusBrowser/g.test(navigator.userAgent),f=new WeakMap;let m;const g=new WeakMap;let v=!1;try{v="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(e){}function y(e,t){return v?new OffscreenCanvas(e,t):si("canvas")}function x(e,t,i,r){let n=1;if((e.width>r||e.height>r)&&(n=r/Math.max(e.width,e.height)),n<1||!0===t){if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap){const r=t?ri:Math.floor,a=r(n*e.width),o=r(n*e.height);void 0===m&&(m=y(a,o));const s=i?y(a,o):m;return s.width=a,s.height=o,s.getContext("2d").drawImage(e,0,0,a,o),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+e.width+"x"+e.height+") to ("+a+"x"+o+")."),s}return"data"in e&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+e.width+"x"+e.height+")."),e}return e}function _(e){return ii(e.width)&&ii(e.height)}function w(e,t){return e.generateMipmaps&&t&&e.minFilter!==be&&e.minFilter!==Te}function b(t){e.generateMipmap(t)}function M(i,r,n,a,o=!1){if(!1===s)return r;if(null!==i){if(void 0!==e[i])return e[i];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+i+"'")}let l=r;return 6403===r&&(5126===n&&(l=33326),5131===n&&(l=33325),5121===n&&(l=33321)),33319===r&&(5126===n&&(l=33328),5131===n&&(l=33327),5121===n&&(l=33323)),6408===r&&(5126===n&&(l=34836),5131===n&&(l=34842),5121===n&&(l=a===It&&!1===o?35907:32856),32819===n&&(l=32854),32820===n&&(l=32855)),33325!==l&&33326!==l&&33327!==l&&33328!==l&&34842!==l&&34836!==l||t.get("EXT_color_buffer_float"),l}function S(e,t,i){return!0===w(e,i)||e.isFramebufferTexture&&e.minFilter!==be&&e.minFilter!==Te?Math.log2(Math.max(t.width,t.height))+1:void 0!==e.mipmaps&&e.mipmaps.length>0?e.mipmaps.length:e.isCompressedTexture&&Array.isArray(e.image)?t.mipmaps.length:1}function T(e){return e===be||e===Me||e===Se?9728:9729}function E(e){const t=e.target;t.removeEventListener("dispose",E),function(e){const t=r.get(e);if(void 0===t.__webglInit)return;const i=e.source,n=g.get(i);if(n){const r=n[t.__cacheKey];r.usedTimes--,0===r.usedTimes&&C(e),0===Object.keys(n).length&&g.delete(i)}r.remove(e)}(t),t.isVideoTexture&&f.delete(t)}function A(t){const i=t.target;i.removeEventListener("dispose",A),function(t){const i=t.texture,n=r.get(t),a=r.get(i);void 0!==a.__webglTexture&&(e.deleteTexture(a.__webglTexture),o.memory.textures--);t.depthTexture&&t.depthTexture.dispose();if(t.isWebGLCubeRenderTarget)for(let t=0;t<6;t++)e.deleteFramebuffer(n.__webglFramebuffer[t]),n.__webglDepthbuffer&&e.deleteRenderbuffer(n.__webglDepthbuffer[t]);else e.deleteFramebuffer(n.__webglFramebuffer),n.__webglDepthbuffer&&e.deleteRenderbuffer(n.__webglDepthbuffer),n.__webglMultisampledFramebuffer&&e.deleteFramebuffer(n.__webglMultisampledFramebuffer),n.__webglColorRenderbuffer&&e.deleteRenderbuffer(n.__webglColorRenderbuffer),n.__webglDepthRenderbuffer&&e.deleteRenderbuffer(n.__webglDepthRenderbuffer);if(t.isWebGLMultipleRenderTargets)for(let t=0,n=i.length;t<n;t++){const n=r.get(i[t]);n.__webglTexture&&(e.deleteTexture(n.__webglTexture),o.memory.textures--),r.remove(i[t])}r.remove(i),r.remove(t)}(i)}function C(t){const i=r.get(t);e.deleteTexture(i.__webglTexture);const n=t.source;delete g.get(n)[i.__cacheKey],o.memory.textures--}let L=0;function R(e,t){const n=r.get(e);if(e.isVideoTexture&&function(e){const t=o.render.frame;f.get(e)!==t&&(f.set(e,t),e.update())}(e),!1===e.isRenderTargetTexture&&e.version>0&&n.__version!==e.version){const i=e.image;if(null===i)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else{if(!1!==i.complete)return void I(n,e,t);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}}i.activeTexture(33984+t),i.bindTexture(3553,n.__webglTexture)}const P={[xe]:10497,[_e]:33071,[we]:33648},D={[be]:9728,[Me]:9984,[Se]:9986,[Te]:9729,[Ee]:9985,[Ae]:9987};function F(i,a,o){if(o?(e.texParameteri(i,10242,P[a.wrapS]),e.texParameteri(i,10243,P[a.wrapT]),32879!==i&&35866!==i||e.texParameteri(i,32882,P[a.wrapR]),e.texParameteri(i,10240,D[a.magFilter]),e.texParameteri(i,10241,D[a.minFilter])):(e.texParameteri(i,10242,33071),e.texParameteri(i,10243,33071),32879!==i&&35866!==i||e.texParameteri(i,32882,33071),a.wrapS===_e&&a.wrapT===_e||console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),e.texParameteri(i,10240,T(a.magFilter)),e.texParameteri(i,10241,T(a.minFilter)),a.minFilter!==be&&a.minFilter!==Te&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),!0===t.has("EXT_texture_filter_anisotropic")){const o=t.get("EXT_texture_filter_anisotropic");if(a.type===ze&&!1===t.has("OES_texture_float_linear"))return;if(!1===s&&a.type===Ie&&!1===t.has("OES_texture_half_float_linear"))return;(a.anisotropy>1||r.get(a).__currentAnisotropy)&&(e.texParameterf(i,o.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(a.anisotropy,n.getMaxAnisotropy())),r.get(a).__currentAnisotropy=a.anisotropy)}}function z(t,i){let r=!1;void 0===t.__webglInit&&(t.__webglInit=!0,i.addEventListener("dispose",E));const n=i.source;let a=g.get(n);void 0===a&&(a={},g.set(n,a));const s=function(e){const t=[];return t.push(e.wrapS),t.push(e.wrapT),t.push(e.magFilter),t.push(e.minFilter),t.push(e.anisotropy),t.push(e.internalFormat),t.push(e.format),t.push(e.type),t.push(e.generateMipmaps),t.push(e.premultiplyAlpha),t.push(e.flipY),t.push(e.unpackAlignment),t.push(e.encoding),t.join()}(i);if(s!==t.__cacheKey){void 0===a[s]&&(a[s]={texture:e.createTexture(),usedTimes:0},o.memory.textures++,r=!0),a[s].usedTimes++;const n=a[t.__cacheKey];void 0!==n&&(a[t.__cacheKey].usedTimes--,0===n.usedTimes&&C(i)),t.__cacheKey=s,t.__webglTexture=a[s].texture}return r}function I(t,r,n){let o=3553;r.isDataArrayTexture&&(o=35866),r.isData3DTexture&&(o=32879);const l=z(t,r),h=r.source;if(i.activeTexture(33984+n),i.bindTexture(o,t.__webglTexture),h.version!==h.__currentVersion||!0===l){e.pixelStorei(37440,r.flipY),e.pixelStorei(37441,r.premultiplyAlpha),e.pixelStorei(3317,r.unpackAlignment),e.pixelStorei(37443,0);const n=function(e){return!s&&(e.wrapS!==_e||e.wrapT!==_e||e.minFilter!==be&&e.minFilter!==Te)}(r)&&!1===_(r.image);let l=x(r.image,n,!1,c);const u=_(l=H(r,l))||s,d=a.convert(r.format,r.encoding);let p,f=a.convert(r.type),m=M(r.internalFormat,d,f,r.encoding,r.isVideoTexture);F(o,r,u);const g=r.mipmaps,v=s&&!0!==r.isVideoTexture,y=void 0===t.__version,T=S(r,l,u);if(r.isDepthTexture)m=6402,s?m=r.type===ze?36012:r.type===Fe?33190:r.type===Be?35056:33189:r.type===ze&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),r.format===We&&6402===m&&r.type!==Pe&&r.type!==Fe&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),r.type=Pe,f=a.convert(r.type)),r.format===je&&6402===m&&(m=34041,r.type!==Be&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),r.type=Be,f=a.convert(r.type))),v&&y?i.texStorage2D(3553,1,m,l.width,l.height):i.texImage2D(3553,0,m,l.width,l.height,0,d,f,null);else if(r.isDataTexture)if(g.length>0&&u){v&&y&&i.texStorage2D(3553,T,m,g[0].width,g[0].height);for(let e=0,t=g.length;e<t;e++)p=g[e],v?i.texSubImage2D(3553,e,0,0,p.width,p.height,d,f,p.data):i.texImage2D(3553,e,m,p.width,p.height,0,d,f,p.data);r.generateMipmaps=!1}else v?(y&&i.texStorage2D(3553,T,m,l.width,l.height),i.texSubImage2D(3553,0,0,0,l.width,l.height,d,f,l.data)):i.texImage2D(3553,0,m,l.width,l.height,0,d,f,l.data);else if(r.isCompressedTexture){v&&y&&i.texStorage2D(3553,T,m,g[0].width,g[0].height);for(let e=0,t=g.length;e<t;e++)p=g[e],r.format!==He?null!==d?v?i.compressedTexSubImage2D(3553,e,0,0,p.width,p.height,d,p.data):i.compressedTexImage2D(3553,e,m,p.width,p.height,0,p.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):v?i.texSubImage2D(3553,e,0,0,p.width,p.height,d,f,p.data):i.texImage2D(3553,e,m,p.width,p.height,0,d,f,p.data)}else if(r.isDataArrayTexture)v?(y&&i.texStorage3D(35866,T,m,l.width,l.height,l.depth),i.texSubImage3D(35866,0,0,0,0,l.width,l.height,l.depth,d,f,l.data)):i.texImage3D(35866,0,m,l.width,l.height,l.depth,0,d,f,l.data);else if(r.isData3DTexture)v?(y&&i.texStorage3D(32879,T,m,l.width,l.height,l.depth),i.texSubImage3D(32879,0,0,0,0,l.width,l.height,l.depth,d,f,l.data)):i.texImage3D(32879,0,m,l.width,l.height,l.depth,0,d,f,l.data);else if(r.isFramebufferTexture)v&&y?i.texStorage2D(3553,T,m,l.width,l.height):i.texImage2D(3553,0,m,l.width,l.height,0,d,f,null);else if(g.length>0&&u){v&&y&&i.texStorage2D(3553,T,m,g[0].width,g[0].height);for(let e=0,t=g.length;e<t;e++)p=g[e],v?i.texSubImage2D(3553,e,0,0,d,f,p):i.texImage2D(3553,e,m,d,f,p);r.generateMipmaps=!1}else v?(y&&i.texStorage2D(3553,T,m,l.width,l.height),i.texSubImage2D(3553,0,0,0,d,f,l)):i.texImage2D(3553,0,m,d,f,l);w(r,u)&&b(o),h.__currentVersion=h.version,r.onUpdate&&r.onUpdate(r)}t.__version=r.version}function N(t,n,o,s,l){const h=a.convert(o.format,o.encoding),c=a.convert(o.type),u=M(o.internalFormat,h,c,o.encoding);r.get(n).__hasExternalTextures||(32879===l||35866===l?i.texImage3D(l,0,u,n.width,n.height,n.depth,0,h,c,null):i.texImage2D(l,0,u,n.width,n.height,0,h,c,null)),i.bindFramebuffer(36160,t),V(n)?d.framebufferTexture2DMultisampleEXT(36160,s,l,r.get(o).__webglTexture,0,O(n)):e.framebufferTexture2D(36160,s,l,r.get(o).__webglTexture,0),i.bindFramebuffer(36160,null)}function U(t,i,r){if(e.bindRenderbuffer(36161,t),i.depthBuffer&&!i.stencilBuffer){let n=33189;if(r||V(i)){const t=i.depthTexture;t&&t.isDepthTexture&&(t.type===ze?n=36012:t.type===Fe&&(n=33190));const r=O(i);V(i)?d.renderbufferStorageMultisampleEXT(36161,r,n,i.width,i.height):e.renderbufferStorageMultisample(36161,r,n,i.width,i.height)}else e.renderbufferStorage(36161,n,i.width,i.height);e.framebufferRenderbuffer(36160,36096,36161,t)}else if(i.depthBuffer&&i.stencilBuffer){const n=O(i);r&&!1===V(i)?e.renderbufferStorageMultisample(36161,n,35056,i.width,i.height):V(i)?d.renderbufferStorageMultisampleEXT(36161,n,35056,i.width,i.height):e.renderbufferStorage(36161,34041,i.width,i.height),e.framebufferRenderbuffer(36160,33306,36161,t)}else{const t=!0===i.isWebGLMultipleRenderTargets?i.texture[0]:i.texture,n=a.convert(t.format,t.encoding),o=a.convert(t.type),s=M(t.internalFormat,n,o,t.encoding),l=O(i);r&&!1===V(i)?e.renderbufferStorageMultisample(36161,l,s,i.width,i.height):V(i)?d.renderbufferStorageMultisampleEXT(36161,l,s,i.width,i.height):e.renderbufferStorage(36161,s,i.width,i.height)}e.bindRenderbuffer(36161,null)}function B(t){const n=r.get(t),a=!0===t.isWebGLCubeRenderTarget;if(t.depthTexture&&!n.__autoAllocateDepthBuffer){if(a)throw new Error("target.depthTexture not supported in Cube render targets");!function(t,n){if(n&&n.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(i.bindFramebuffer(36160,t),!n.depthTexture||!n.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");r.get(n.depthTexture).__webglTexture&&n.depthTexture.image.width===n.width&&n.depthTexture.image.height===n.height||(n.depthTexture.image.width=n.width,n.depthTexture.image.height=n.height,n.depthTexture.needsUpdate=!0),R(n.depthTexture,0);const a=r.get(n.depthTexture).__webglTexture,o=O(n);if(n.depthTexture.format===We)V(n)?d.framebufferTexture2DMultisampleEXT(36160,36096,3553,a,0,o):e.framebufferTexture2D(36160,36096,3553,a,0);else{if(n.depthTexture.format!==je)throw new Error("Unknown depthTexture format");V(n)?d.framebufferTexture2DMultisampleEXT(36160,33306,3553,a,0,o):e.framebufferTexture2D(36160,33306,3553,a,0)}}(n.__webglFramebuffer,t)}else if(a){n.__webglDepthbuffer=[];for(let r=0;r<6;r++)i.bindFramebuffer(36160,n.__webglFramebuffer[r]),n.__webglDepthbuffer[r]=e.createRenderbuffer(),U(n.__webglDepthbuffer[r],t,!1)}else i.bindFramebuffer(36160,n.__webglFramebuffer),n.__webglDepthbuffer=e.createRenderbuffer(),U(n.__webglDepthbuffer,t,!1);i.bindFramebuffer(36160,null)}function O(e){return Math.min(u,e.samples)}function V(e){const i=r.get(e);return s&&e.samples>0&&!0===t.has("WEBGL_multisampled_render_to_texture")&&!1!==i.__useRenderToTexture}function H(e,i){const r=e.encoding,n=e.format,a=e.type;return!0===e.isCompressedTexture||!0===e.isVideoTexture||e.format===qt?i:(r!==zt&&(r===It?!1===s?!0===t.has("EXT_sRGB")&&n===He?(e.format=qt,e.minFilter=Te,e.generateMipmaps=!1):i=_i.sRGBToLinear(i):n===He&&a===Ce||console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture encoding:",r)),i)}this.allocateTextureUnit=function(){const e=L;return e>=l&&console.warn("THREE.WebGLTextures: Trying to use "+e+" texture units while this GPU supports only "+l),L+=1,e},this.resetTextureUnits=function(){L=0},this.setTexture2D=R,this.setTexture2DArray=function(e,t){const n=r.get(e);e.version>0&&n.__version!==e.version?I(n,e,t):(i.activeTexture(33984+t),i.bindTexture(35866,n.__webglTexture))},this.setTexture3D=function(e,t){const n=r.get(e);e.version>0&&n.__version!==e.version?I(n,e,t):(i.activeTexture(33984+t),i.bindTexture(32879,n.__webglTexture))},this.setTextureCube=function(t,n){const o=r.get(t);t.version>0&&o.__version!==t.version?function(t,r,n){if(6!==r.image.length)return;const o=z(t,r),l=r.source;if(i.activeTexture(33984+n),i.bindTexture(34067,t.__webglTexture),l.version!==l.__currentVersion||!0===o){e.pixelStorei(37440,r.flipY),e.pixelStorei(37441,r.premultiplyAlpha),e.pixelStorei(3317,r.unpackAlignment),e.pixelStorei(37443,0);const n=r.isCompressedTexture||r.image[0].isCompressedTexture,o=r.image[0]&&r.image[0].isDataTexture,c=[];for(let e=0;e<6;e++)c[e]=n||o?o?r.image[e].image:r.image[e]:x(r.image[e],!1,!0,h),c[e]=H(r,c[e]);const u=c[0],d=_(u)||s,p=a.convert(r.format,r.encoding),f=a.convert(r.type),m=M(r.internalFormat,p,f,r.encoding),g=s&&!0!==r.isVideoTexture,v=void 0===t.__version;let y,T=S(r,u,d);if(F(34067,r,d),n){g&&v&&i.texStorage2D(34067,T,m,u.width,u.height);for(let e=0;e<6;e++){y=c[e].mipmaps;for(let t=0;t<y.length;t++){const n=y[t];r.format!==He?null!==p?g?i.compressedTexSubImage2D(34069+e,t,0,0,n.width,n.height,p,n.data):i.compressedTexImage2D(34069+e,t,m,n.width,n.height,0,n.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):g?i.texSubImage2D(34069+e,t,0,0,n.width,n.height,p,f,n.data):i.texImage2D(34069+e,t,m,n.width,n.height,0,p,f,n.data)}}}else{y=r.mipmaps,g&&v&&(y.length>0&&T++,i.texStorage2D(34067,T,m,c[0].width,c[0].height));for(let e=0;e<6;e++)if(o){g?i.texSubImage2D(34069+e,0,0,0,c[e].width,c[e].height,p,f,c[e].data):i.texImage2D(34069+e,0,m,c[e].width,c[e].height,0,p,f,c[e].data);for(let t=0;t<y.length;t++){const r=y[t],n=r.image[e].image;g?i.texSubImage2D(34069+e,t+1,0,0,n.width,n.height,p,f,n.data):i.texImage2D(34069+e,t+1,m,n.width,n.height,0,p,f,n.data)}}else{g?i.texSubImage2D(34069+e,0,0,0,p,f,c[e]):i.texImage2D(34069+e,0,m,p,f,c[e]);for(let t=0;t<y.length;t++){const r=y[t];g?i.texSubImage2D(34069+e,t+1,0,0,p,f,r.image[e]):i.texImage2D(34069+e,t+1,m,p,f,r.image[e])}}}w(r,d)&&b(34067),l.__currentVersion=l.version,r.onUpdate&&r.onUpdate(r)}t.__version=r.version}(o,t,n):(i.activeTexture(33984+n),i.bindTexture(34067,o.__webglTexture))},this.rebindTextures=function(e,t,i){const n=r.get(e);void 0!==t&&N(n.__webglFramebuffer,e,e.texture,36064,3553),void 0!==i&&B(e)},this.setupRenderTarget=function(t){const l=t.texture,h=r.get(t),c=r.get(l);t.addEventListener("dispose",A),!0!==t.isWebGLMultipleRenderTargets&&(void 0===c.__webglTexture&&(c.__webglTexture=e.createTexture()),c.__version=l.version,o.memory.textures++);const u=!0===t.isWebGLCubeRenderTarget,d=!0===t.isWebGLMultipleRenderTargets,p=_(t)||s;if(u){h.__webglFramebuffer=[];for(let t=0;t<6;t++)h.__webglFramebuffer[t]=e.createFramebuffer()}else if(h.__webglFramebuffer=e.createFramebuffer(),d)if(n.drawBuffers){const i=t.texture;for(let t=0,n=i.length;t<n;t++){const n=r.get(i[t]);void 0===n.__webglTexture&&(n.__webglTexture=e.createTexture(),o.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");else if(s&&t.samples>0&&!1===V(t)){h.__webglMultisampledFramebuffer=e.createFramebuffer(),h.__webglColorRenderbuffer=e.createRenderbuffer(),e.bindRenderbuffer(36161,h.__webglColorRenderbuffer);const r=a.convert(l.format,l.encoding),n=a.convert(l.type),o=M(l.internalFormat,r,n,l.encoding),s=O(t);e.renderbufferStorageMultisample(36161,s,o,t.width,t.height),i.bindFramebuffer(36160,h.__webglMultisampledFramebuffer),e.framebufferRenderbuffer(36160,36064,36161,h.__webglColorRenderbuffer),e.bindRenderbuffer(36161,null),t.depthBuffer&&(h.__webglDepthRenderbuffer=e.createRenderbuffer(),U(h.__webglDepthRenderbuffer,t,!0)),i.bindFramebuffer(36160,null)}if(u){i.bindTexture(34067,c.__webglTexture),F(34067,l,p);for(let e=0;e<6;e++)N(h.__webglFramebuffer[e],t,l,36064,34069+e);w(l,p)&&b(34067),i.unbindTexture()}else if(d){const e=t.texture;for(let n=0,a=e.length;n<a;n++){const a=e[n],o=r.get(a);i.bindTexture(3553,o.__webglTexture),F(3553,a,p),N(h.__webglFramebuffer,t,a,36064+n,3553),w(a,p)&&b(3553)}i.unbindTexture()}else{let e=3553;(t.isWebGL3DRenderTarget||t.isWebGLArrayRenderTarget)&&(s?e=t.isWebGL3DRenderTarget?32879:35866:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),i.bindTexture(e,c.__webglTexture),F(e,l,p),N(h.__webglFramebuffer,t,l,36064,e),w(l,p)&&b(e),i.unbindTexture()}t.depthBuffer&&B(t)},this.updateRenderTargetMipmap=function(e){const t=_(e)||s,n=!0===e.isWebGLMultipleRenderTargets?e.texture:[e.texture];for(let a=0,o=n.length;a<o;a++){const o=n[a];if(w(o,t)){const t=e.isWebGLCubeRenderTarget?34067:3553,n=r.get(o).__webglTexture;i.bindTexture(t,n),b(t),i.unbindTexture()}}},this.updateMultisampleRenderTarget=function(t){if(s&&t.samples>0&&!1===V(t)){const n=t.width,a=t.height;let o=16384;const s=[36064],l=t.stencilBuffer?33306:36096;t.depthBuffer&&s.push(l);const h=r.get(t),c=void 0!==h.__ignoreDepthValues&&h.__ignoreDepthValues;!1===c&&(t.depthBuffer&&(o|=256),t.stencilBuffer&&(o|=1024)),i.bindFramebuffer(36008,h.__webglMultisampledFramebuffer),i.bindFramebuffer(36009,h.__webglFramebuffer),!0===c&&(e.invalidateFramebuffer(36008,[l]),e.invalidateFramebuffer(36009,[l])),e.blitFramebuffer(0,0,n,a,0,0,n,a,o,9728),p&&e.invalidateFramebuffer(36008,s),i.bindFramebuffer(36008,null),i.bindFramebuffer(36009,h.__webglMultisampledFramebuffer)}},this.setupDepthRenderbuffer=B,this.setupFrameBufferTexture=N,this.useMultisampledRTT=V}class os extends In{constructor(e=[]){super(),this.cameras=e}}os.prototype.isArrayCamera=!0;class ss extends Dr{constructor(){super(),this.type="Group"}}ss.prototype.isGroup=!0;const ls={type:"move"};class hs{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return null===this._hand&&(this._hand=new ss,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return null===this._targetRay&&(this._targetRay=new ss,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new Ri,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new Ri),this._targetRay}getGripSpace(){return null===this._grip&&(this._grip=new ss,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new Ri,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new Ri),this._grip}dispatchEvent(e){return null!==this._targetRay&&this._targetRay.dispatchEvent(e),null!==this._grip&&this._grip.dispatchEvent(e),null!==this._hand&&this._hand.dispatchEvent(e),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this}update(e,t,i){let r=null,n=null,a=null;const o=this._targetRay,s=this._grip,l=this._hand;if(e&&"visible-blurred"!==t.session.visibilityState)if(null!==o&&null!==(r=t.getPose(e.targetRaySpace,i))&&(o.matrix.fromArray(r.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),r.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(r.linearVelocity)):o.hasLinearVelocity=!1,r.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(r.angularVelocity)):o.hasAngularVelocity=!1,this.dispatchEvent(ls)),l&&e.hand){a=!0;for(const r of e.hand.values()){const e=t.getJointPose(r,i);if(void 0===l.joints[r.jointName]){const e=new ss;e.matrixAutoUpdate=!1,e.visible=!1,l.joints[r.jointName]=e,l.add(e)}const n=l.joints[r.jointName];null!==e&&(n.matrix.fromArray(e.transform.matrix),n.matrix.decompose(n.position,n.rotation,n.scale),n.jointRadius=e.radius),n.visible=null!==e}const r=l.joints["index-finger-tip"],n=l.joints["thumb-tip"],o=r.position.distanceTo(n.position),s=.02,h=.005;l.inputState.pinching&&o>s+h?(l.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!l.inputState.pinching&&o<=s-h&&(l.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else null!==s&&e.gripSpace&&null!==(n=t.getPose(e.gripSpace,i))&&(s.matrix.fromArray(n.transform.matrix),s.matrix.decompose(s.position,s.rotation,s.scale),n.linearVelocity?(s.hasLinearVelocity=!0,s.linearVelocity.copy(n.linearVelocity)):s.hasLinearVelocity=!1,n.angularVelocity?(s.hasAngularVelocity=!0,s.angularVelocity.copy(n.angularVelocity)):s.hasAngularVelocity=!1);return null!==o&&(o.visible=null!==r),null!==s&&(s.visible=null!==n),null!==l&&(l.visible=null!==a),this}}class cs extends Si{constructor(e,t,i,r,n,a,o,s,l,h){if((h=void 0!==h?h:We)!==We&&h!==je)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===i&&h===We&&(i=Pe),void 0===i&&h===je&&(i=Be),super(null,r,n,a,o,s,h,i,l),this.image={width:e,height:t},this.magFilter=void 0!==o?o:be,this.minFilter=void 0!==s?s:be,this.flipY=!1,this.generateMipmaps=!1}}cs.prototype.isDepthTexture=!0;class us extends Yt{constructor(e,t){super();const i=this;let r=null,n=1,a=null,o="local-floor",s=null,l=null,h=null,c=null,u=null;const d=t.getContextAttributes();let p=null,f=null;const m=[],g=new Map,v=new In;v.layers.enable(1),v.viewport=new Ti;const y=new In;y.layers.enable(2),y.viewport=new Ti;const x=[v,y],_=new os;_.layers.enable(1),_.layers.enable(2);let w=null,b=null;function M(e){const t=g.get(e.inputSource);t&&t.dispatchEvent({type:e.type,data:e.inputSource})}function S(){g.forEach(function(e,t){e.disconnect(t)}),g.clear(),w=null,b=null,e.setRenderTarget(p),c=null,h=null,l=null,r=null,f=null,R.stop(),i.isPresenting=!1,i.dispatchEvent({type:"sessionend"})}function T(e){const t=r.inputSources;for(let e=0;e<m.length;e++)g.set(t[e],m[e]);for(let t=0;t<e.removed.length;t++){const i=e.removed[t],r=g.get(i);r&&(r.dispatchEvent({type:"disconnected",data:i}),g.delete(i))}for(let t=0;t<e.added.length;t++){const i=e.added[t],r=g.get(i);r&&r.dispatchEvent({type:"connected",data:i})}}this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(e){let t=m[e];return void 0===t&&(t=new hs,m[e]=t),t.getTargetRaySpace()},this.getControllerGrip=function(e){let t=m[e];return void 0===t&&(t=new hs,m[e]=t),t.getGripSpace()},this.getHand=function(e){let t=m[e];return void 0===t&&(t=new hs,m[e]=t),t.getHandSpace()},this.setFramebufferScaleFactor=function(e){n=e,!0===i.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(e){o=e,!0===i.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return a},this.getBaseLayer=function(){return null!==h?h:c},this.getBinding=function(){return l},this.getFrame=function(){return u},this.getSession=function(){return r},this.setSession=async function(s){if(null!==(r=s)){if(p=e.getRenderTarget(),r.addEventListener("select",M),r.addEventListener("selectstart",M),r.addEventListener("selectend",M),r.addEventListener("squeeze",M),r.addEventListener("squeezestart",M),r.addEventListener("squeezeend",M),r.addEventListener("end",S),r.addEventListener("inputsourceschange",T),!0!==d.xrCompatible&&await t.makeXRCompatible(),void 0===r.renderState.layers||!1===e.capabilities.isWebGL2){const i={antialias:void 0!==r.renderState.layers||d.antialias,alpha:d.alpha,depth:d.depth,stencil:d.stencil,framebufferScaleFactor:n};c=new XRWebGLLayer(r,t,i),r.updateRenderState({baseLayer:c}),f=new Ei(c.framebufferWidth,c.framebufferHeight,{format:He,type:Ce,encoding:e.outputEncoding})}else{let i=null,a=null,o=null;d.depth&&(o=d.stencil?35056:33190,i=d.stencil?je:We,a=d.stencil?Be:Pe);const s={colorFormat:e.outputEncoding===It?35907:32856,depthFormat:o,scaleFactor:n};l=new XRWebGLBinding(r,t),h=l.createProjectionLayer(s),r.updateRenderState({layers:[h]}),f=new Ei(h.textureWidth,h.textureHeight,{format:He,type:Ce,depthTexture:new cs(h.textureWidth,h.textureHeight,a,void 0,void 0,void 0,void 0,void 0,void 0,i),stencilBuffer:d.stencil,encoding:e.outputEncoding,samples:d.antialias?4:0}),e.properties.get(f).__ignoreDepthValues=h.ignoreDepthValues}f.isXRRenderTarget=!0,this.setFoveation(1),a=await r.requestReferenceSpace(o),R.setContext(r),R.start(),i.isPresenting=!0,i.dispatchEvent({type:"sessionstart"})}};const E=new Ri,A=new Ri;function C(e,t){null===t?e.matrixWorld.copy(e.matrix):e.matrixWorld.multiplyMatrices(t.matrixWorld,e.matrix),e.matrixWorldInverse.copy(e.matrixWorld).invert()}this.updateCamera=function(e){if(null===r)return;_.near=y.near=v.near=e.near,_.far=y.far=v.far=e.far,w===_.near&&b===_.far||(r.updateRenderState({depthNear:_.near,depthFar:_.far}),w=_.near,b=_.far);const t=e.parent,i=_.cameras;C(_,t);for(let e=0;e<i.length;e++)C(i[e],t);_.matrixWorld.decompose(_.position,_.quaternion,_.scale),e.position.copy(_.position),e.quaternion.copy(_.quaternion),e.scale.copy(_.scale),e.matrix.copy(_.matrix),e.matrixWorld.copy(_.matrixWorld);const n=e.children;for(let e=0,t=n.length;e<t;e++)n[e].updateMatrixWorld(!0);2===i.length?function(e,t,i){E.setFromMatrixPosition(t.matrixWorld),A.setFromMatrixPosition(i.matrixWorld);const r=E.distanceTo(A),n=t.projectionMatrix.elements,a=i.projectionMatrix.elements,o=n[14]/(n[10]-1),s=n[14]/(n[10]+1),l=(n[9]+1)/n[5],h=(n[9]-1)/n[5],c=(n[8]-1)/n[0],u=(a[8]+1)/a[0],d=o*c,p=o*u,f=r/(-c+u),m=f*-c;t.matrixWorld.decompose(e.position,e.quaternion,e.scale),e.translateX(m),e.translateZ(f),e.matrixWorld.compose(e.position,e.quaternion,e.scale),e.matrixWorldInverse.copy(e.matrixWorld).invert();const g=o+f,v=s+f,y=d-m,x=p+(r-m),_=l*s/v*g,w=h*s/v*g;e.projectionMatrix.makePerspective(y,x,_,w,g,v)}(_,v,y):_.projectionMatrix.copy(v.projectionMatrix)},this.getCamera=function(){return _},this.getFoveation=function(){return null!==h?h.fixedFoveation:null!==c?c.fixedFoveation:void 0},this.setFoveation=function(e){null!==h&&(h.fixedFoveation=e),null!==c&&void 0!==c.fixedFoveation&&(c.fixedFoveation=e)};let L=null;const R=new Yn;R.setAnimationLoop(function(t,i){if(s=i.getViewerPose(a),u=i,null!==s){const t=s.views;null!==c&&(e.setRenderTargetFramebuffer(f,c.framebuffer),e.setRenderTarget(f));let i=!1;t.length!==_.cameras.length&&(_.cameras.length=0,i=!0);for(let r=0;r<t.length;r++){const n=t[r];let a=null;if(null!==c)a=c.getViewport(n);else{const t=l.getViewSubImage(h,n);a=t.viewport,0===r&&(e.setRenderTargetTextures(f,t.colorTexture,h.ignoreDepthValues?void 0:t.depthStencilTexture),e.setRenderTarget(f))}const o=x[r];o.matrix.fromArray(n.transform.matrix),o.projectionMatrix.fromArray(n.projectionMatrix),o.viewport.set(a.x,a.y,a.width,a.height),0===r&&_.matrix.copy(o.matrix),!0===i&&_.cameras.push(o)}}const n=r.inputSources;for(let e=0;e<m.length;e++){const t=m[e],r=n[e];t.update(r,i,a)}L&&L(t,i),u=null}),this.setAnimationLoop=function(e){L=e},this.dispose=function(){}}}function ds(e,t){function i(i,r){i.opacity.value=r.opacity,r.color&&i.diffuse.value.copy(r.color),r.emissive&&i.emissive.value.copy(r.emissive).multiplyScalar(r.emissiveIntensity),r.map&&(i.map.value=r.map),r.alphaMap&&(i.alphaMap.value=r.alphaMap),r.bumpMap&&(i.bumpMap.value=r.bumpMap,i.bumpScale.value=r.bumpScale,r.side===T&&(i.bumpScale.value*=-1)),r.displacementMap&&(i.displacementMap.value=r.displacementMap,i.displacementScale.value=r.displacementScale,i.displacementBias.value=r.displacementBias),r.emissiveMap&&(i.emissiveMap.value=r.emissiveMap),r.normalMap&&(i.normalMap.value=r.normalMap,i.normalScale.value.copy(r.normalScale),r.side===T&&i.normalScale.value.negate()),r.specularMap&&(i.specularMap.value=r.specularMap),r.alphaTest>0&&(i.alphaTest.value=r.alphaTest);const n=t.get(r).envMap;if(n&&(i.envMap.value=n,i.flipEnvMap.value=n.isCubeTexture&&!1===n.isRenderTargetTexture?-1:1,i.reflectivity.value=r.reflectivity,i.ior.value=r.ior,i.refractionRatio.value=r.refractionRatio),r.lightMap){i.lightMap.value=r.lightMap;const t=!0!==e.physicallyCorrectLights?Math.PI:1;i.lightMapIntensity.value=r.lightMapIntensity*t}let a,o;r.aoMap&&(i.aoMap.value=r.aoMap,i.aoMapIntensity.value=r.aoMapIntensity),r.map?a=r.map:r.specularMap?a=r.specularMap:r.displacementMap?a=r.displacementMap:r.normalMap?a=r.normalMap:r.bumpMap?a=r.bumpMap:r.roughnessMap?a=r.roughnessMap:r.metalnessMap?a=r.metalnessMap:r.alphaMap?a=r.alphaMap:r.emissiveMap?a=r.emissiveMap:r.clearcoatMap?a=r.clearcoatMap:r.clearcoatNormalMap?a=r.clearcoatNormalMap:r.clearcoatRoughnessMap?a=r.clearcoatRoughnessMap:r.specularIntensityMap?a=r.specularIntensityMap:r.specularColorMap?a=r.specularColorMap:r.transmissionMap?a=r.transmissionMap:r.thicknessMap?a=r.thicknessMap:r.sheenColorMap?a=r.sheenColorMap:r.sheenRoughnessMap&&(a=r.sheenRoughnessMap),void 0!==a&&(a.isWebGLRenderTarget&&(a=a.texture),!0===a.matrixAutoUpdate&&a.updateMatrix(),i.uvTransform.value.copy(a.matrix)),r.aoMap?o=r.aoMap:r.lightMap&&(o=r.lightMap),void 0!==o&&(o.isWebGLRenderTarget&&(o=o.texture),!0===o.matrixAutoUpdate&&o.updateMatrix(),i.uv2Transform.value.copy(o.matrix))}return{refreshFogUniforms:function(e,t){e.fogColor.value.copy(t.color),t.isFog?(e.fogNear.value=t.near,e.fogFar.value=t.far):t.isFogExp2&&(e.fogDensity.value=t.density)},refreshMaterialUniforms:function(e,r,n,a,o){r.isMeshBasicMaterial?i(e,r):r.isMeshLambertMaterial?i(e,r):r.isMeshToonMaterial?(i(e,r),function(e,t){t.gradientMap&&(e.gradientMap.value=t.gradientMap)}(e,r)):r.isMeshPhongMaterial?(i(e,r),function(e,t){e.specular.value.copy(t.specular),e.shininess.value=Math.max(t.shininess,1e-4)}(e,r)):r.isMeshStandardMaterial?(i(e,r),function(e,i){e.roughness.value=i.roughness,e.metalness.value=i.metalness,i.roughnessMap&&(e.roughnessMap.value=i.roughnessMap),i.metalnessMap&&(e.metalnessMap.value=i.metalnessMap),t.get(i).envMap&&(e.envMapIntensity.value=i.envMapIntensity)}(e,r),r.isMeshPhysicalMaterial&&function(e,t,i){e.ior.value=t.ior,t.sheen>0&&(e.sheenColor.value.copy(t.sheenColor).multiplyScalar(t.sheen),e.sheenRoughness.value=t.sheenRoughness,t.sheenColorMap&&(e.sheenColorMap.value=t.sheenColorMap),t.sheenRoughnessMap&&(e.sheenRoughnessMap.value=t.sheenRoughnessMap)),t.clearcoat>0&&(e.clearcoat.value=t.clearcoat,e.clearcoatRoughness.value=t.clearcoatRoughness,t.clearcoatMap&&(e.clearcoatMap.value=t.clearcoatMap),t.clearcoatRoughnessMap&&(e.clearcoatRoughnessMap.value=t.clearcoatRoughnessMap),t.clearcoatNormalMap&&(e.clearcoatNormalScale.value.copy(t.clearcoatNormalScale),e.clearcoatNormalMap.value=t.clearcoatNormalMap,t.side===T&&e.clearcoatNormalScale.value.negate())),t.transmission>0&&(e.transmission.value=t.transmission,e.transmissionSamplerMap.value=i.texture,e.transmissionSamplerSize.value.set(i.width,i.height),t.transmissionMap&&(e.transmissionMap.value=t.transmissionMap),e.thickness.value=t.thickness,t.thicknessMap&&(e.thicknessMap.value=t.thicknessMap),e.attenuationDistance.value=t.attenuationDistance,e.attenuationColor.value.copy(t.attenuationColor)),e.specularIntensity.value=t.specularIntensity,e.specularColor.value.copy(t.specularColor),t.specularIntensityMap&&(e.specularIntensityMap.value=t.specularIntensityMap),t.specularColorMap&&(e.specularColorMap.value=t.specularColorMap)}(e,r,o)):r.isMeshMatcapMaterial?(i(e,r),function(e,t){t.matcap&&(e.matcap.value=t.matcap)}(e,r)):r.isMeshDepthMaterial?i(e,r):r.isMeshDistanceMaterial?(i(e,r),function(e,t){e.referencePosition.value.copy(t.referencePosition),e.nearDistance.value=t.nearDistance,e.farDistance.value=t.farDistance}(e,r)):r.isMeshNormalMaterial?i(e,r):r.isLineBasicMaterial?(function(e,t){e.diffuse.value.copy(t.color),e.opacity.value=t.opacity}(e,r),r.isLineDashedMaterial&&function(e,t){e.dashSize.value=t.dashSize,e.totalSize.value=t.dashSize+t.gapSize,e.scale.value=t.scale}(e,r)):r.isPointsMaterial?function(e,t,i,r){let n;e.diffuse.value.copy(t.color),e.opacity.value=t.opacity,e.size.value=t.size*i,e.scale.value=.5*r,t.map&&(e.map.value=t.map),t.alphaMap&&(e.alphaMap.value=t.alphaMap),t.alphaTest>0&&(e.alphaTest.value=t.alphaTest),t.map?n=t.map:t.alphaMap&&(n=t.alphaMap),void 0!==n&&(!0===n.matrixAutoUpdate&&n.updateMatrix(),e.uvTransform.value.copy(n.matrix))}(e,r,n,a):r.isSpriteMaterial?function(e,t){let i;e.diffuse.value.copy(t.color),e.opacity.value=t.opacity,e.rotation.value=t.rotation,t.map&&(e.map.value=t.map),t.alphaMap&&(e.alphaMap.value=t.alphaMap),t.alphaTest>0&&(e.alphaTest.value=t.alphaTest),t.map?i=t.map:t.alphaMap&&(i=t.alphaMap),void 0!==i&&(!0===i.matrixAutoUpdate&&i.updateMatrix(),e.uvTransform.value.copy(i.matrix))}(e,r):r.isShadowMaterial?(e.color.value.copy(r.color),e.opacity.value=r.opacity):r.isShaderMaterial&&(r.uniformsNeedUpdate=!1)}}}function ps(e={}){const t=void 0!==e.canvas?e.canvas:function(){const e=si("canvas");return e.style.display="block",e}(),i=void 0!==e.context?e.context:null,r=void 0===e.depth||e.depth,n=void 0===e.stencil||e.stencil,a=void 0!==e.antialias&&e.antialias,o=void 0===e.premultipliedAlpha||e.premultipliedAlpha,s=void 0!==e.preserveDrawingBuffer&&e.preserveDrawingBuffer,l=void 0!==e.powerPreference?e.powerPreference:"default",h=void 0!==e.failIfMajorPerformanceCaveat&&e.failIfMajorPerformanceCaveat;let c;c=void 0!==e.context?i.getContextAttributes().alpha:void 0!==e.alpha&&e.alpha;let u=null,d=null;const p=[],f=[];this.domElement=t,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputEncoding=zt,this.physicallyCorrectLights=!1,this.toneMapping=se,this.toneMappingExposure=1;const m=this;let g=!1,w=0,b=0,M=null,A=-1,ne=null;const ae=new Ti,oe=new Ti;let le=null,he=t.width,ce=t.height,ue=1,de=null,pe=null;const xe=new Ti(0,0,he,ce),_e=new Ti(0,0,he,ce);let we=!1;const be=new qn;let Me=!1,Se=!1,Te=null;const Ee=new sr,Mt=new ni,St=new Ri,Tt={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function Et(){return null===M?ue:1}let At,Ct,Lt,Rt,Pt,Dt,Ft,Nt,Ut,Bt,Ot,Vt,Ht,Gt,kt,Wt,jt,Xt,Yt,Kt,Zt,Jt,Qt,$t=i;function ei(e,i){for(let r=0;r<e.length;r++){const n=e[r],a=t.getContext(n,i);if(null!==a)return a}return null}try{const e={alpha:!0,depth:r,stencil:n,antialias:a,premultipliedAlpha:o,preserveDrawingBuffer:s,powerPreference:l,failIfMajorPerformanceCaveat:h};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${v}`),t.addEventListener("webglcontextlost",li,!1),t.addEventListener("webglcontextrestored",hi,!1),null===$t){const t=["webgl2","webgl","experimental-webgl"];if(!0===m.isWebGL1Renderer&&t.shift(),null===($t=ei(t,e)))throw ei(t)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}void 0===$t.getShaderPrecisionFormat&&($t.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(e){throw console.error("THREE.WebGLRenderer: "+e.message),e}function ti(){At=new function(e){const t={};function i(i){if(void 0!==t[i])return t[i];let r;switch(i){case"WEBGL_depth_texture":r=e.getExtension("WEBGL_depth_texture")||e.getExtension("MOZ_WEBGL_depth_texture")||e.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":r=e.getExtension("EXT_texture_filter_anisotropic")||e.getExtension("MOZ_EXT_texture_filter_anisotropic")||e.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":r=e.getExtension("WEBGL_compressed_texture_s3tc")||e.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":r=e.getExtension("WEBGL_compressed_texture_pvrtc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:r=e.getExtension(i)}return t[i]=r,r}return{has:function(e){return null!==i(e)},init:function(e){e.isWebGL2?i("EXT_color_buffer_float"):(i("WEBGL_depth_texture"),i("OES_texture_float"),i("OES_texture_half_float"),i("OES_texture_half_float_linear"),i("OES_standard_derivatives"),i("OES_element_index_uint"),i("OES_vertex_array_object"),i("ANGLE_instanced_arrays")),i("OES_texture_float_linear"),i("EXT_color_buffer_half_float"),i("WEBGL_multisampled_render_to_texture")},get:function(e){const t=i(e);return null===t&&console.warn("THREE.WebGLRenderer: "+e+" extension not supported."),t}}}($t),Ct=new function(e,t,i){let r;function n(t){if("highp"===t){if(e.getShaderPrecisionFormat(35633,36338).precision>0&&e.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";t="mediump"}return"mediump"===t&&e.getShaderPrecisionFormat(35633,36337).precision>0&&e.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const a="undefined"!=typeof WebGL2RenderingContext&&e instanceof WebGL2RenderingContext||"undefined"!=typeof WebGL2ComputeRenderingContext&&e instanceof WebGL2ComputeRenderingContext;let o=void 0!==i.precision?i.precision:"highp";const s=n(o);s!==o&&(console.warn("THREE.WebGLRenderer:",o,"not supported, using",s,"instead."),o=s);const l=a||t.has("WEBGL_draw_buffers"),h=!0===i.logarithmicDepthBuffer,c=e.getParameter(34930),u=e.getParameter(35660),d=e.getParameter(3379),p=e.getParameter(34076),f=e.getParameter(34921),m=e.getParameter(36347),g=e.getParameter(36348),v=e.getParameter(36349),y=u>0,x=a||t.has("OES_texture_float");return{isWebGL2:a,drawBuffers:l,getMaxAnisotropy:function(){if(void 0!==r)return r;if(!0===t.has("EXT_texture_filter_anisotropic")){const i=t.get("EXT_texture_filter_anisotropic");r=e.getParameter(i.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else r=0;return r},getMaxPrecision:n,precision:o,logarithmicDepthBuffer:h,maxTextures:c,maxVertexTextures:u,maxTextureSize:d,maxCubemapSize:p,maxAttributes:f,maxVertexUniforms:m,maxVaryings:g,maxFragmentUniforms:v,vertexTextures:y,floatFragmentTextures:x,floatVertexTextures:y&&x,maxSamples:a?e.getParameter(36183):0}}($t,At,e),At.init(Ct),Jt=new function(e,t,i){const r=i.isWebGL2;return{convert:function(e,i=null){let n;if(e===Ce)return 5121;if(e===Ne)return 32819;if(e===Ue)return 32820;if(e===Le)return 5120;if(e===Re)return 5122;if(e===Pe)return 5123;if(e===De)return 5124;if(e===Fe)return 5125;if(e===ze)return 5126;if(e===Ie)return r?5131:null!==(n=t.get("OES_texture_half_float"))?n.HALF_FLOAT_OES:null;if(e===Oe)return 6406;if(e===He)return 6408;if(e===Ge)return 6409;if(e===ke)return 6410;if(e===We)return 6402;if(e===je)return 34041;if(e===Xe)return 6403;if(e===Ve)return console.warn("THREE.WebGLRenderer: THREE.RGBFormat has been removed. Use THREE.RGBAFormat instead. https://github.com/mrdoob/three.js/pull/23228"),6408;if(e===qt)return null!==(n=t.get("EXT_sRGB"))?n.SRGB_ALPHA_EXT:null;if(e===qe)return 36244;if(e===Ye)return 33319;if(e===Ke)return 33320;if(e===Ze)return 36249;if(e===Je||e===Qe||e===$e||e===et)if(i===It){if(null===(n=t.get("WEBGL_compressed_texture_s3tc_srgb")))return null;if(e===Je)return n.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(e===Qe)return n.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(e===$e)return n.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(e===et)return n.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else{if(null===(n=t.get("WEBGL_compressed_texture_s3tc")))return null;if(e===Je)return n.COMPRESSED_RGB_S3TC_DXT1_EXT;if(e===Qe)return n.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(e===$e)return n.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(e===et)return n.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(e===tt||e===it||e===rt||e===nt){if(null===(n=t.get("WEBGL_compressed_texture_pvrtc")))return null;if(e===tt)return n.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(e===it)return n.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(e===rt)return n.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(e===nt)return n.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(e===at)return null!==(n=t.get("WEBGL_compressed_texture_etc1"))?n.COMPRESSED_RGB_ETC1_WEBGL:null;if(e===ot||e===st){if(null===(n=t.get("WEBGL_compressed_texture_etc")))return null;if(e===ot)return i===It?n.COMPRESSED_SRGB8_ETC2:n.COMPRESSED_RGB8_ETC2;if(e===st)return i===It?n.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:n.COMPRESSED_RGBA8_ETC2_EAC}if(e===lt||e===ht||e===ct||e===ut||e===dt||e===pt||e===ft||e===mt||e===gt||e===vt||e===yt||e===xt||e===_t||e===wt){if(null===(n=t.get("WEBGL_compressed_texture_astc")))return null;if(e===lt)return i===It?n.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:n.COMPRESSED_RGBA_ASTC_4x4_KHR;if(e===ht)return i===It?n.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:n.COMPRESSED_RGBA_ASTC_5x4_KHR;if(e===ct)return i===It?n.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:n.COMPRESSED_RGBA_ASTC_5x5_KHR;if(e===ut)return i===It?n.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:n.COMPRESSED_RGBA_ASTC_6x5_KHR;if(e===dt)return i===It?n.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:n.COMPRESSED_RGBA_ASTC_6x6_KHR;if(e===pt)return i===It?n.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:n.COMPRESSED_RGBA_ASTC_8x5_KHR;if(e===ft)return i===It?n.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:n.COMPRESSED_RGBA_ASTC_8x6_KHR;if(e===mt)return i===It?n.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:n.COMPRESSED_RGBA_ASTC_8x8_KHR;if(e===gt)return i===It?n.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:n.COMPRESSED_RGBA_ASTC_10x5_KHR;if(e===vt)return i===It?n.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:n.COMPRESSED_RGBA_ASTC_10x6_KHR;if(e===yt)return i===It?n.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:n.COMPRESSED_RGBA_ASTC_10x8_KHR;if(e===xt)return i===It?n.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:n.COMPRESSED_RGBA_ASTC_10x10_KHR;if(e===_t)return i===It?n.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:n.COMPRESSED_RGBA_ASTC_12x10_KHR;if(e===wt)return i===It?n.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:n.COMPRESSED_RGBA_ASTC_12x12_KHR}if(e===bt){if(null===(n=t.get("EXT_texture_compression_bptc")))return null;if(e===bt)return i===It?n.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:n.COMPRESSED_RGBA_BPTC_UNORM_EXT}return e===Be?r?34042:null!==(n=t.get("WEBGL_depth_texture"))?n.UNSIGNED_INT_24_8_WEBGL:null:void 0}}}($t,At,Ct),Lt=new function(e,t,i){const r=i.isWebGL2,n=new function(){let t=!1;const i=new Ti;let r=null;const n=new Ti(0,0,0,0);return{setMask:function(i){r===i||t||(e.colorMask(i,i,i,i),r=i)},setLocked:function(e){t=e},setClear:function(t,r,a,o,s){!0===s&&(t*=o,r*=o,a*=o),i.set(t,r,a,o),!1===n.equals(i)&&(e.clearColor(t,r,a,o),n.copy(i))},reset:function(){t=!1,r=null,n.set(-1,0,0,0)}}},a=new function(){let t=!1,i=null,r=null,n=null;return{setTest:function(e){e?xe(2929):_e(2929)},setMask:function(r){i===r||t||(e.depthMask(r),i=r)},setFunc:function(t){if(r!==t){if(t)switch(t){case Z:e.depthFunc(512);break;case J:e.depthFunc(519);break;case Q:e.depthFunc(513);break;case $:e.depthFunc(515);break;case ee:e.depthFunc(514);break;case te:e.depthFunc(518);break;case ie:e.depthFunc(516);break;case re:e.depthFunc(517);break;default:e.depthFunc(515)}else e.depthFunc(515);r=t}},setLocked:function(e){t=e},setClear:function(t){n!==t&&(e.clearDepth(t),n=t)},reset:function(){t=!1,i=null,r=null,n=null}}},o=new function(){let t=!1,i=null,r=null,n=null,a=null,o=null,s=null,l=null,h=null;return{setTest:function(e){t||(e?xe(2960):_e(2960))},setMask:function(r){i===r||t||(e.stencilMask(r),i=r)},setFunc:function(t,i,o){r===t&&n===i&&a===o||(e.stencilFunc(t,i,o),r=t,n=i,a=o)},setOp:function(t,i,r){o===t&&s===i&&l===r||(e.stencilOp(t,i,r),o=t,s=i,l=r)},setLocked:function(e){t=e},setClear:function(t){h!==t&&(e.clearStencil(t),h=t)},reset:function(){t=!1,i=null,r=null,n=null,a=null,o=null,s=null,l=null,h=null}}};let s={},l={},h=new WeakMap,c=[],u=null,d=!1,p=null,f=null,m=null,g=null,v=null,w=null,b=null,M=!1,S=null,A=null,ne=null,ae=null,oe=null;const se=e.getParameter(35661);let le=!1,he=0;const ce=e.getParameter(7938);-1!==ce.indexOf("WebGL")?(he=parseFloat(/^WebGL (\d)/.exec(ce)[1]),le=he>=1):-1!==ce.indexOf("OpenGL ES")&&(he=parseFloat(/^OpenGL ES (\d)/.exec(ce)[1]),le=he>=2);let ue=null,de={};const pe=e.getParameter(3088),fe=e.getParameter(2978),me=(new Ti).fromArray(pe),ge=(new Ti).fromArray(fe);function ve(t,i,r){const n=new Uint8Array(4),a=e.createTexture();e.bindTexture(t,a),e.texParameteri(t,10241,9728),e.texParameteri(t,10240,9728);for(let t=0;t<r;t++)e.texImage2D(i+t,0,6408,1,1,0,6408,5121,n);return a}const ye={};function xe(t){!0!==s[t]&&(e.enable(t),s[t]=!0)}function _e(t){!1!==s[t]&&(e.disable(t),s[t]=!1)}ye[3553]=ve(3553,3553,1),ye[34067]=ve(34067,34069,6),n.setClear(0,0,0,1),a.setClear(1),o.setClear(0),xe(2929),a.setFunc($),Se(!1),Te(x),xe(2884),Me(C);const we={[z]:32774,[I]:32778,[N]:32779};if(r)we[U]=32775,we[B]=32776;else{const e=t.get("EXT_blend_minmax");null!==e&&(we[U]=e.MIN_EXT,we[B]=e.MAX_EXT)}const be={[O]:0,[V]:1,[H]:768,[k]:770,[K]:776,[q]:774,[j]:772,[G]:769,[W]:771,[Y]:775,[X]:773};function Me(t,i,r,n,a,o,s,l){if(t!==C){if(!1===d&&(xe(3042),d=!0),t===F)a=a||i,o=o||r,s=s||n,i===f&&a===v||(e.blendEquationSeparate(we[i],we[a]),f=i,v=a),r===m&&n===g&&o===w&&s===b||(e.blendFuncSeparate(be[r],be[n],be[o],be[s]),m=r,g=n,w=o,b=s),p=t,M=null;else if(t!==p||l!==M){if(f===z&&v===z||(e.blendEquation(32774),f=z,v=z),l)switch(t){case L:e.blendFuncSeparate(1,771,1,771);break;case R:e.blendFunc(1,1);break;case P:e.blendFuncSeparate(0,769,0,1);break;case D:e.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",t)}else switch(t){case L:e.blendFuncSeparate(770,771,1,771);break;case R:e.blendFunc(770,1);break;case P:e.blendFuncSeparate(0,769,0,1);break;case D:e.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",t)}m=null,g=null,w=null,b=null,p=t,M=l}}else!0===d&&(_e(3042),d=!1)}function Se(t){S!==t&&(t?e.frontFace(2304):e.frontFace(2305),S=t)}function Te(t){t!==y?(xe(2884),t!==A&&(t===x?e.cullFace(1029):t===_?e.cullFace(1028):e.cullFace(1032))):_e(2884),A=t}function Ee(t,i,r){t?(xe(32823),ae===i&&oe===r||(e.polygonOffset(i,r),ae=i,oe=r)):_e(32823)}function Ae(t){void 0===t&&(t=33984+se-1),ue!==t&&(e.activeTexture(t),ue=t)}return{buffers:{color:n,depth:a,stencil:o},enable:xe,disable:_e,bindFramebuffer:function(t,i){return l[t]!==i&&(e.bindFramebuffer(t,i),l[t]=i,r&&(36009===t&&(l[36160]=i),36160===t&&(l[36009]=i)),!0)},drawBuffers:function(r,n){let a=c,o=!1;if(r)if(void 0===(a=h.get(n))&&(a=[],h.set(n,a)),r.isWebGLMultipleRenderTargets){const e=r.texture;if(a.length!==e.length||36064!==a[0]){for(let t=0,i=e.length;t<i;t++)a[t]=36064+t;a.length=e.length,o=!0}}else 36064!==a[0]&&(a[0]=36064,o=!0);else 1029!==a[0]&&(a[0]=1029,o=!0);o&&(i.isWebGL2?e.drawBuffers(a):t.get("WEBGL_draw_buffers").drawBuffersWEBGL(a))},useProgram:function(t){return u!==t&&(e.useProgram(t),u=t,!0)},setBlending:Me,setMaterial:function(e,t){e.side===E?_e(2884):xe(2884);let i=e.side===T;t&&(i=!i),Se(i),e.blending===L&&!1===e.transparent?Me(C):Me(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.premultipliedAlpha),a.setFunc(e.depthFunc),a.setTest(e.depthTest),a.setMask(e.depthWrite),n.setMask(e.colorWrite);const r=e.stencilWrite;o.setTest(r),r&&(o.setMask(e.stencilWriteMask),o.setFunc(e.stencilFunc,e.stencilRef,e.stencilFuncMask),o.setOp(e.stencilFail,e.stencilZFail,e.stencilZPass)),Ee(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits),!0===e.alphaToCoverage?xe(32926):_e(32926)},setFlipSided:Se,setCullFace:Te,setLineWidth:function(t){t!==ne&&(le&&e.lineWidth(t),ne=t)},setPolygonOffset:Ee,setScissorTest:function(e){e?xe(3089):_e(3089)},activeTexture:Ae,bindTexture:function(t,i){null===ue&&Ae();let r=de[ue];void 0===r&&(r={type:void 0,texture:void 0},de[ue]=r),r.type===t&&r.texture===i||(e.bindTexture(t,i||ye[t]),r.type=t,r.texture=i)},unbindTexture:function(){const t=de[ue];void 0!==t&&void 0!==t.type&&(e.bindTexture(t.type,null),t.type=void 0,t.texture=void 0)},compressedTexImage2D:function(){try{e.compressedTexImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texImage2D:function(){try{e.texImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texImage3D:function(){try{e.texImage3D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texStorage2D:function(){try{e.texStorage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texStorage3D:function(){try{e.texStorage3D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texSubImage2D:function(){try{e.texSubImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texSubImage3D:function(){try{e.texSubImage3D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},compressedTexSubImage2D:function(){try{e.compressedTexSubImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},scissor:function(t){!1===me.equals(t)&&(e.scissor(t.x,t.y,t.z,t.w),me.copy(t))},viewport:function(t){!1===ge.equals(t)&&(e.viewport(t.x,t.y,t.z,t.w),ge.copy(t))},reset:function(){e.disable(3042),e.disable(2884),e.disable(2929),e.disable(32823),e.disable(3089),e.disable(2960),e.disable(32926),e.blendEquation(32774),e.blendFunc(1,0),e.blendFuncSeparate(1,0,1,0),e.colorMask(!0,!0,!0,!0),e.clearColor(0,0,0,0),e.depthMask(!0),e.depthFunc(513),e.clearDepth(1),e.stencilMask(4294967295),e.stencilFunc(519,0,4294967295),e.stencilOp(7680,7680,7680),e.clearStencil(0),e.cullFace(1029),e.frontFace(2305),e.polygonOffset(0,0),e.activeTexture(33984),e.bindFramebuffer(36160,null),!0===r&&(e.bindFramebuffer(36009,null),e.bindFramebuffer(36008,null)),e.useProgram(null),e.lineWidth(1),e.scissor(0,0,e.canvas.width,e.canvas.height),e.viewport(0,0,e.canvas.width,e.canvas.height),s={},ue=null,de={},l={},h=new WeakMap,c=[],u=null,d=!1,p=null,f=null,m=null,g=null,v=null,w=null,b=null,M=!1,S=null,A=null,ne=null,ae=null,oe=null,me.set(0,0,e.canvas.width,e.canvas.height),ge.set(0,0,e.canvas.width,e.canvas.height),n.reset(),a.reset(),o.reset()}}}($t,At,Ct),Rt=new function(e){const t={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:t,programs:null,autoReset:!0,reset:function(){t.frame++,t.calls=0,t.triangles=0,t.points=0,t.lines=0},update:function(e,i,r){switch(t.calls++,i){case 4:t.triangles+=r*(e/3);break;case 1:t.lines+=r*(e/2);break;case 3:t.lines+=r*(e-1);break;case 2:t.lines+=r*e;break;case 0:t.points+=r*e;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",i)}}}}($t),Pt=new function(){let e=new WeakMap;return{get:function(t){let i=e.get(t);return void 0===i&&(i={},e.set(t,i)),i},remove:function(t){e.delete(t)},update:function(t,i,r){e.get(t)[i]=r},dispose:function(){e=new WeakMap}}},Dt=new as($t,At,Lt,Pt,Ct,Jt,Rt),Ft=new function(e){let t=new WeakMap;function i(e,t){return t===ge?e.mapping=fe:t===ve&&(e.mapping=me),e}function r(e){const i=e.target;i.removeEventListener("dispose",r);const n=t.get(i);void 0!==n&&(t.delete(i),n.dispose())}return{get:function(n){if(n&&n.isTexture&&!1===n.isRenderTargetTexture){const a=n.mapping;if(a===ge||a===ve){if(t.has(n))return i(t.get(n).texture,n.mapping);{const a=n.image;if(a&&a.height>0){const o=new Vn(a.height/2);return o.fromEquirectangularTexture(e,n),t.set(n,o),n.addEventListener("dispose",r),i(o.texture,n.mapping)}return null}}}return n},dispose:function(){t=new WeakMap}}}(m),Nt=new va(m),Ut=new Kn($t,Ct),Qt=new ea($t,At,Ut,Ct),Bt=new function(e,t,i,r){const n={},a=new WeakMap;function o(e){const s=e.target;null!==s.index&&t.remove(s.index);for(const e in s.attributes)t.remove(s.attributes[e]);s.removeEventListener("dispose",o),delete n[s.id];const l=a.get(s);l&&(t.remove(l),a.delete(s)),r.releaseStatesOfGeometry(s),!0===s.isInstancedBufferGeometry&&delete s._maxInstanceCount,i.memory.geometries--}function s(e){const i=[],r=e.index,n=e.attributes.position;let o=0;if(null!==r){const e=r.array;o=r.version;for(let t=0,r=e.length;t<r;t+=3){const r=e[t+0],n=e[t+1],a=e[t+2];i.push(r,n,n,a,a,r)}}else{const e=n.array;o=n.version;for(let t=0,r=e.length/3-1;t<r;t+=3){const e=t+0,r=t+1,n=t+2;i.push(e,r,r,n,n,e)}}const s=new(oi(i)?Jr:Zr)(i,1);s.version=o;const l=a.get(e);l&&t.remove(l),a.set(e,s)}return{get:function(e,t){return!0===n[t.id]?t:(t.addEventListener("dispose",o),n[t.id]=!0,i.memory.geometries++,t)},update:function(e){const i=e.attributes;for(const e in i)t.update(i[e],34962);const r=e.morphAttributes;for(const e in r){const i=r[e];for(let e=0,r=i.length;e<r;e++)t.update(i[e],34962)}},getWireframeAttribute:function(e){const t=a.get(e);if(t){const i=e.index;null!==i&&t.version<i.version&&s(e)}else s(e);return a.get(e)}}}($t,Ut,Rt,Qt),Ot=new function(e,t,i,r){let n=new WeakMap;function a(e){const t=e.target;t.removeEventListener("dispose",a),i.remove(t.instanceMatrix),null!==t.instanceColor&&i.remove(t.instanceColor)}return{update:function(e){const o=r.render.frame,s=e.geometry,l=t.get(e,s);return n.get(l)!==o&&(t.update(l),n.set(l,o)),e.isInstancedMesh&&(!1===e.hasEventListener("dispose",a)&&e.addEventListener("dispose",a),i.update(e.instanceMatrix,34962),null!==e.instanceColor&&i.update(e.instanceColor,34962)),l},dispose:function(){n=new WeakMap}}}($t,Bt,Ut,Rt),Yt=new function(e,t,i){const r={},n=new Float32Array(8),a=new WeakMap,o=new Ti,s=[];for(let e=0;e<8;e++)s[e]=[e,0];return{update:function(l,h,c,u){const d=l.morphTargetInfluences;if(!0===t.isWebGL2){const r=h.morphAttributes.position||h.morphAttributes.normal||h.morphAttributes.color,n=void 0!==r?r.length:0;let s=a.get(h);if(void 0===s||s.count!==n){void 0!==s&&s.texture.dispose();const e=void 0!==h.morphAttributes.position,i=void 0!==h.morphAttributes.normal,r=void 0!==h.morphAttributes.color,l=h.morphAttributes.position||[],c=h.morphAttributes.normal||[],u=h.morphAttributes.color||[];let d=0;!0===e&&(d=1),!0===i&&(d=2),!0===r&&(d=3);let p=h.attributes.position.count*d,f=1;p>t.maxTextureSize&&(f=Math.ceil(p/t.maxTextureSize),p=t.maxTextureSize);const m=new Float32Array(p*f*4*n),g=new Ai(m,p,f,n);g.type=ze,g.needsUpdate=!0;const v=4*d;for(let t=0;t<n;t++){const n=l[t],a=c[t],s=u[t],h=p*f*4*t;for(let t=0;t<n.count;t++){const l=t*v;!0===e&&(o.fromBufferAttribute(n,t),!0===n.normalized&&_a(o,n),m[h+l+0]=o.x,m[h+l+1]=o.y,m[h+l+2]=o.z,m[h+l+3]=0),!0===i&&(o.fromBufferAttribute(a,t),!0===a.normalized&&_a(o,a),m[h+l+4]=o.x,m[h+l+5]=o.y,m[h+l+6]=o.z,m[h+l+7]=0),!0===r&&(o.fromBufferAttribute(s,t),!0===s.normalized&&_a(o,s),m[h+l+8]=o.x,m[h+l+9]=o.y,m[h+l+10]=o.z,m[h+l+11]=4===s.itemSize?o.w:1)}}s={count:n,texture:g,size:new ni(p,f)},a.set(h,s),h.addEventListener("dispose",function e(){g.dispose(),a.delete(h),h.removeEventListener("dispose",e)})}let l=0;for(let e=0;e<d.length;e++)l+=d[e];const c=h.morphTargetsRelative?1:1-l;u.getUniforms().setValue(e,"morphTargetBaseInfluence",c),u.getUniforms().setValue(e,"morphTargetInfluences",d),u.getUniforms().setValue(e,"morphTargetsTexture",s.texture,i),u.getUniforms().setValue(e,"morphTargetsTextureSize",s.size)}else{const t=void 0===d?0:d.length;let i=r[h.id];if(void 0===i||i.length!==t){i=[];for(let e=0;e<t;e++)i[e]=[e,0];r[h.id]=i}for(let e=0;e<t;e++){const t=i[e];t[0]=e,t[1]=d[e]}i.sort(xa);for(let e=0;e<8;e++)e<t&&i[e][1]?(s[e][0]=i[e][0],s[e][1]=i[e][1]):(s[e][0]=Number.MAX_SAFE_INTEGER,s[e][1]=0);s.sort(ya);const a=h.morphAttributes.position,o=h.morphAttributes.normal;let l=0;for(let e=0;e<8;e++){const t=s[e],i=t[0],r=t[1];i!==Number.MAX_SAFE_INTEGER&&r?(a&&h.getAttribute("morphTarget"+e)!==a[i]&&h.setAttribute("morphTarget"+e,a[i]),o&&h.getAttribute("morphNormal"+e)!==o[i]&&h.setAttribute("morphNormal"+e,o[i]),n[e]=r,l+=r):(a&&!0===h.hasAttribute("morphTarget"+e)&&h.deleteAttribute("morphTarget"+e),o&&!0===h.hasAttribute("morphNormal"+e)&&h.deleteAttribute("morphNormal"+e),n[e]=0)}const c=h.morphTargetsRelative?1:1-l;u.getUniforms().setValue(e,"morphTargetBaseInfluence",c),u.getUniforms().setValue(e,"morphTargetInfluences",n)}}}}($t,Ct,Dt),Wt=new function(e){const t=this;let i=null,r=0,n=!1,a=!1;const o=new Wn,s=new ai,l={value:null,needsUpdate:!1};function h(){l.value!==i&&(l.value=i,l.needsUpdate=r>0),t.numPlanes=r,t.numIntersection=0}function c(e,i,r,n){const a=null!==e?e.length:0;let h=null;if(0!==a){if(h=l.value,!0!==n||null===h){const t=r+4*a,n=i.matrixWorldInverse;s.getNormalMatrix(n),(null===h||h.length<t)&&(h=new Float32Array(t));for(let t=0,i=r;t!==a;++t,i+=4)o.copy(e[t]).applyMatrix4(n,s),o.normal.toArray(h,i),h[i+3]=o.constant}l.value=h,l.needsUpdate=!0}return t.numPlanes=a,t.numIntersection=0,h}this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(e,t,a){const o=0!==e.length||t||0!==r||n;return n=t,i=c(e,a,0),r=e.length,o},this.beginShadows=function(){a=!0,c(null)},this.endShadows=function(){a=!1,h()},this.setState=function(t,o,s){const u=t.clippingPlanes,d=t.clipIntersection,p=t.clipShadows,f=e.get(t);if(!n||null===u||0===u.length||a&&!p)a?c(null):h();else{const e=a?0:r,t=4*e;let n=f.clippingState||null;l.value=n,n=c(u,o,t,s);for(let e=0;e!==t;++e)n[e]=i[e];f.clippingState=n,this.numIntersection=d?this.numPlanes:0,this.numPlanes+=e}}}(Pt),Vt=new Xo(m,Ft,Nt,At,Ct,Qt,Wt),Ht=new ds(m,Pt),Gt=new function(){let e=new WeakMap;return{get:function(t,i){let r;return!1===e.has(t)?(r=new Ko,e.set(t,[r])):i>=e.get(t).length?(r=new Ko,e.get(t).push(r)):r=e.get(t)[i],r},dispose:function(){e=new WeakMap}}},kt=new function(e,t){let i=new WeakMap;return{get:function(r,n=0){let a;return!1===i.has(r)?(a=new $o(e,t),i.set(r,[a])):n>=i.get(r).length?(a=new $o(e,t),i.get(r).push(a)):a=i.get(r)[n],a},dispose:function(){i=new WeakMap}}}(At,Ct),Xt=new function(e,t,i,r,n,a){const o=new yi(0);let s,l,h=!0===n?0:1,c=null,u=0,d=null;function p(e,t){i.buffers.color.setClear(e.r,e.g,e.b,t,a)}return{getClearColor:function(){return o},setClearColor:function(e,t=1){o.set(e),p(o,h=t)},getClearAlpha:function(){return h},setClearAlpha:function(e){p(o,h=e)},render:function(i,n){let a=!1,f=!0===n.isScene?n.background:null;f&&f.isTexture&&(f=t.get(f));const m=e.xr,g=m.getSession&&m.getSession();g&&"additive"===g.environmentBlendMode&&(f=null),null===f?p(o,h):f&&f.isColor&&(p(f,1),a=!0),(e.autoClear||a)&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),f&&(f.isCubeTexture||f.mapping===ye)?(void 0===l&&((l=new Tn(new An(1,1,1),new Fn({name:"BackgroundCubeMaterial",uniforms:Cn($n.cube.uniforms),vertexShader:$n.cube.vertexShader,fragmentShader:$n.cube.fragmentShader,side:T,depthTest:!1,depthWrite:!1,fog:!1}))).geometry.deleteAttribute("normal"),l.geometry.deleteAttribute("uv"),l.onBeforeRender=function(e,t,i){this.matrixWorld.copyPosition(i.matrixWorld)},Object.defineProperty(l.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),r.update(l)),l.material.uniforms.envMap.value=f,l.material.uniforms.flipEnvMap.value=f.isCubeTexture&&!1===f.isRenderTargetTexture?-1:1,c===f&&u===f.version&&d===e.toneMapping||(l.material.needsUpdate=!0,c=f,u=f.version,d=e.toneMapping),i.unshift(l,l.geometry,l.material,0,0,null)):f&&f.isTexture&&(void 0===s&&((s=new Tn(new Zn(2,2),new Fn({name:"BackgroundMaterial",uniforms:Cn($n.background.uniforms),vertexShader:$n.background.vertexShader,fragmentShader:$n.background.fragmentShader,side:S,depthTest:!1,depthWrite:!1,fog:!1}))).geometry.deleteAttribute("normal"),Object.defineProperty(s.material,"map",{get:function(){return this.uniforms.t2D.value}}),r.update(s)),s.material.uniforms.t2D.value=f,!0===f.matrixAutoUpdate&&f.updateMatrix(),s.material.uniforms.uvTransform.value.copy(f.matrix),c===f&&u===f.version&&d===e.toneMapping||(s.material.needsUpdate=!0,c=f,u=f.version,d=e.toneMapping),i.unshift(s,s.geometry,s.material,0,0,null))}}}(m,Ft,Lt,Ot,c,o),jt=new ns(m,Ot,Ct),Kt=new function(e,t,i,r){const n=r.isWebGL2;let a;this.setMode=function(e){a=e},this.render=function(t,r){e.drawArrays(a,t,r),i.update(r,a,1)},this.renderInstances=function(r,o,s){if(0===s)return;let l,h;if(n)l=e,h="drawArraysInstanced";else if(h="drawArraysInstancedANGLE",null===(l=t.get("ANGLE_instanced_arrays")))return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");l[h](a,r,o,s),i.update(o,a,s)}}($t,At,Rt,Ct),Zt=new function(e,t,i,r){const n=r.isWebGL2;let a,o,s;this.setMode=function(e){a=e},this.setIndex=function(e){o=e.type,s=e.bytesPerElement},this.render=function(t,r){e.drawElements(a,r,o,t*s),i.update(r,a,1)},this.renderInstances=function(r,l,h){if(0===h)return;let c,u;if(n)c=e,u="drawElementsInstanced";else if(u="drawElementsInstancedANGLE",null===(c=t.get("ANGLE_instanced_arrays")))return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");c[u](a,l,o,r*s,h),i.update(l,a,h)}}($t,At,Rt,Ct),Rt.programs=Vt.programs,m.capabilities=Ct,m.extensions=At,m.properties=Pt,m.renderLists=Gt,m.shadowMap=jt,m.state=Lt,m.info=Rt}ti();const ii=new us(m,$t);function li(e){e.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),g=!0}function hi(){console.log("THREE.WebGLRenderer: Context Restored."),g=!1;const e=Rt.autoReset,t=jt.enabled,i=jt.autoUpdate,r=jt.needsUpdate,n=jt.type;ti(),Rt.autoReset=e,jt.enabled=t,jt.autoUpdate=i,jt.needsUpdate=r,jt.type=n}function ci(e){const t=e.target;t.removeEventListener("dispose",ci),function(e){(function(e){const t=Pt.get(e).programs;void 0!==t&&(t.forEach(function(e){Vt.releaseProgram(e)}),e.isShaderMaterial&&Vt.releaseShaderCache(e))})(e),Pt.remove(e)}(t)}this.xr=ii,this.getContext=function(){return $t},this.getContextAttributes=function(){return $t.getContextAttributes()},this.forceContextLoss=function(){const e=At.get("WEBGL_lose_context");e&&e.loseContext()},this.forceContextRestore=function(){const e=At.get("WEBGL_lose_context");e&&e.restoreContext()},this.getPixelRatio=function(){return ue},this.setPixelRatio=function(e){void 0!==e&&(ue=e,this.setSize(he,ce,!1))},this.getSize=function(e){return e.set(he,ce)},this.setSize=function(e,i,r){ii.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(he=e,ce=i,t.width=Math.floor(e*ue),t.height=Math.floor(i*ue),!1!==r&&(t.style.width=e+"px",t.style.height=i+"px"),this.setViewport(0,0,e,i))},this.getDrawingBufferSize=function(e){return e.set(he*ue,ce*ue).floor()},this.setDrawingBufferSize=function(e,i,r){he=e,ce=i,ue=r,t.width=Math.floor(e*r),t.height=Math.floor(i*r),this.setViewport(0,0,e,i)},this.getCurrentViewport=function(e){return e.copy(ae)},this.getViewport=function(e){return e.copy(xe)},this.setViewport=function(e,t,i,r){e.isVector4?xe.set(e.x,e.y,e.z,e.w):xe.set(e,t,i,r),Lt.viewport(ae.copy(xe).multiplyScalar(ue).floor())},this.getScissor=function(e){return e.copy(_e)},this.setScissor=function(e,t,i,r){e.isVector4?_e.set(e.x,e.y,e.z,e.w):_e.set(e,t,i,r),Lt.scissor(oe.copy(_e).multiplyScalar(ue).floor())},this.getScissorTest=function(){return we},this.setScissorTest=function(e){Lt.setScissorTest(we=e)},this.setOpaqueSort=function(e){de=e},this.setTransparentSort=function(e){pe=e},this.getClearColor=function(e){return e.copy(Xt.getClearColor())},this.setClearColor=function(){Xt.setClearColor.apply(Xt,arguments)},this.getClearAlpha=function(){return Xt.getClearAlpha()},this.setClearAlpha=function(){Xt.setClearAlpha.apply(Xt,arguments)},this.clear=function(e=!0,t=!0,i=!0){let r=0;e&&(r|=16384),t&&(r|=256),i&&(r|=1024),$t.clear(r)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",li,!1),t.removeEventListener("webglcontextrestored",hi,!1),Gt.dispose(),kt.dispose(),Pt.dispose(),Ft.dispose(),Nt.dispose(),Ot.dispose(),Qt.dispose(),Vt.dispose(),ii.dispose(),ii.removeEventListener("sessionstart",di),ii.removeEventListener("sessionend",pi),Te&&(Te.dispose(),Te=null),fi.stop()},this.renderBufferDirect=function(e,t,i,r,n,a){null===t&&(t=Tt);const o=n.isMesh&&n.matrixWorld.determinant()<0,s=function(e,t,i,r,n){!0!==t.isScene&&(t=Tt);Dt.resetTextureUnits();const a=t.fog,o=r.isMeshStandardMaterial?t.environment:null,s=null===M?m.outputEncoding:!0===M.isXRRenderTarget?M.texture.encoding:zt,l=(r.isMeshStandardMaterial?Nt:Ft).get(r.envMap||o),h=!0===r.vertexColors&&!!i.attributes.color&&4===i.attributes.color.itemSize,c=!!r.normalMap&&!!i.attributes.tangent,u=!!i.morphAttributes.position,p=!!i.morphAttributes.normal,f=!!i.morphAttributes.color,g=r.toneMapped?m.toneMapping:se,v=i.morphAttributes.position||i.morphAttributes.normal||i.morphAttributes.color,y=void 0!==v?v.length:0,x=Pt.get(r),_=d.state.lights;if(!0===Me&&(!0===Se||e!==ne)){const t=e===ne&&r.id===A;Wt.setState(r,e,t)}let w=!1;r.version===x.__version?x.needsLights&&x.lightsStateVersion!==_.state.version?w=!0:x.outputEncoding!==s?w=!0:n.isInstancedMesh&&!1===x.instancing?w=!0:n.isInstancedMesh||!0!==x.instancing?n.isSkinnedMesh&&!1===x.skinning?w=!0:n.isSkinnedMesh||!0!==x.skinning?x.envMap!==l?w=!0:r.fog&&x.fog!==a?w=!0:void 0===x.numClippingPlanes||x.numClippingPlanes===Wt.numPlanes&&x.numIntersection===Wt.numIntersection?x.vertexAlphas!==h?w=!0:x.vertexTangents!==c?w=!0:x.morphTargets!==u?w=!0:x.morphNormals!==p?w=!0:x.morphColors!==f?w=!0:x.toneMapping!==g?w=!0:!0===Ct.isWebGL2&&x.morphTargetsCount!==y&&(w=!0):w=!0:w=!0:w=!0:(w=!0,x.__version=r.version);let b=x.currentProgram;!0===w&&(b=xi(r,t,n));let S=!1,T=!1,E=!1;const C=b.getUniforms(),L=x.uniforms;Lt.useProgram(b.program)&&(S=!0,T=!0,E=!0);r.id!==A&&(A=r.id,T=!0);if(S||ne!==e){if(C.setValue($t,"projectionMatrix",e.projectionMatrix),Ct.logarithmicDepthBuffer&&C.setValue($t,"logDepthBufFC",2/(Math.log(e.far+1)/Math.LN2)),ne!==e&&(ne=e,T=!0,E=!0),r.isShaderMaterial||r.isMeshPhongMaterial||r.isMeshToonMaterial||r.isMeshStandardMaterial||r.envMap){const t=C.map.cameraPosition;void 0!==t&&t.setValue($t,St.setFromMatrixPosition(e.matrixWorld))}(r.isMeshPhongMaterial||r.isMeshToonMaterial||r.isMeshLambertMaterial||r.isMeshBasicMaterial||r.isMeshStandardMaterial||r.isShaderMaterial)&&C.setValue($t,"isOrthographic",!0===e.isOrthographicCamera),(r.isMeshPhongMaterial||r.isMeshToonMaterial||r.isMeshLambertMaterial||r.isMeshBasicMaterial||r.isMeshStandardMaterial||r.isShaderMaterial||r.isShadowMaterial||n.isSkinnedMesh)&&C.setValue($t,"viewMatrix",e.matrixWorldInverse)}if(n.isSkinnedMesh){C.setOptional($t,n,"bindMatrix"),C.setOptional($t,n,"bindMatrixInverse");const e=n.skeleton;e&&(Ct.floatVertexTextures?(null===e.boneTexture&&e.computeBoneTexture(),C.setValue($t,"boneTexture",e.boneTexture,Dt),C.setValue($t,"boneTextureSize",e.boneTextureSize)):C.setOptional($t,e,"boneMatrices"))}const R=i.morphAttributes;(void 0!==R.position||void 0!==R.normal||void 0!==R.color&&!0===Ct.isWebGL2)&&Yt.update(n,i,r,b);(T||x.receiveShadow!==n.receiveShadow)&&(x.receiveShadow=n.receiveShadow,C.setValue($t,"receiveShadow",n.receiveShadow));T&&(C.setValue($t,"toneMappingExposure",m.toneMappingExposure),x.needsLights&&(D=E,(P=L).ambientLightColor.needsUpdate=D,P.lightProbe.needsUpdate=D,P.directionalLights.needsUpdate=D,P.directionalLightShadows.needsUpdate=D,P.pointLights.needsUpdate=D,P.pointLightShadows.needsUpdate=D,P.spotLights.needsUpdate=D,P.spotLightShadows.needsUpdate=D,P.rectAreaLights.needsUpdate=D,P.hemisphereLights.needsUpdate=D),a&&r.fog&&Ht.refreshFogUniforms(L,a),Ht.refreshMaterialUniforms(L,r,ue,ce,Te),To.upload($t,x.uniformsList,L,Dt));var P,D;r.isShaderMaterial&&!0===r.uniformsNeedUpdate&&(To.upload($t,x.uniformsList,L,Dt),r.uniformsNeedUpdate=!1);r.isSpriteMaterial&&C.setValue($t,"center",n.center);return C.setValue($t,"modelViewMatrix",n.modelViewMatrix),C.setValue($t,"normalMatrix",n.normalMatrix),C.setValue($t,"modelMatrix",n.matrixWorld),b}(e,t,i,r,n);Lt.setMaterial(r,o);let l=i.index;const h=i.attributes.position;if(null===l){if(void 0===h||0===h.count)return}else if(0===l.count)return;let c,u=1;!0===r.wireframe&&(l=Bt.getWireframeAttribute(i),u=2),Qt.setup(n,r,s,i,l);let p=Kt;null!==l&&(c=Ut.get(l),(p=Zt).setIndex(c));const f=null!==l?l.count:h.count,g=i.drawRange.start*u,v=i.drawRange.count*u,y=null!==a?a.start*u:0,x=null!==a?a.count*u:1/0,_=Math.max(g,y),w=Math.min(f,g+v,y+x)-1,b=Math.max(0,w-_+1);if(0!==b){if(n.isMesh)!0===r.wireframe?(Lt.setLineWidth(r.wireframeLinewidth*Et()),p.setMode(1)):p.setMode(4);else if(n.isLine){let e=r.linewidth;void 0===e&&(e=1),Lt.setLineWidth(e*Et()),n.isLineSegments?p.setMode(1):n.isLineLoop?p.setMode(2):p.setMode(3)}else n.isPoints?p.setMode(0):n.isSprite&&p.setMode(4);if(n.isInstancedMesh)p.renderInstances(_,b,n.count);else if(i.isInstancedBufferGeometry){const e=Math.min(i.instanceCount,i._maxInstanceCount);p.renderInstances(_,b,e)}else p.render(_,b)}},this.compile=function(e,t){(d=kt.get(e)).init(),f.push(d),e.traverseVisible(function(e){e.isLight&&e.layers.test(t.layers)&&(d.pushLight(e),e.castShadow&&d.pushShadow(e))}),d.setupLights(m.physicallyCorrectLights),e.traverse(function(t){const i=t.material;if(i)if(Array.isArray(i))for(let r=0;r<i.length;r++){xi(i[r],e,t)}else xi(i,e,t)}),f.pop(),d=null};let ui=null;function di(){fi.stop()}function pi(){fi.start()}const fi=new Yn;function mi(e,t,i,r){const n=e.opaque,o=e.transmissive,s=e.transparent;d.setupLightsView(i),o.length>0&&function(e,t,i){const r=Ct.isWebGL2;null===Te&&(Te=new Ei(1,1,{generateMipmaps:!0,type:null!==Jt.convert(Ie)?Ie:Ce,minFilter:Ae,samples:r&&!0===a?4:0}));m.getDrawingBufferSize(Mt),r?Te.setSize(Mt.x,Mt.y):Te.setSize(ri(Mt.x),ri(Mt.y));const n=m.getRenderTarget();m.setRenderTarget(Te),m.clear();const o=m.toneMapping;m.toneMapping=se,gi(e,t,i),m.toneMapping=o,Dt.updateMultisampleRenderTarget(Te),Dt.updateRenderTargetMipmap(Te),m.setRenderTarget(n)}(n,t,i),r&&Lt.viewport(ae.copy(r)),n.length>0&&gi(n,t,i),o.length>0&&gi(o,t,i),s.length>0&&gi(s,t,i),Lt.buffers.depth.setTest(!0),Lt.buffers.depth.setMask(!0),Lt.buffers.color.setMask(!0),Lt.setPolygonOffset(!1)}function gi(e,t,i){const r=!0===t.isScene?t.overrideMaterial:null;for(let n=0,a=e.length;n<a;n++){const a=e[n],o=a.object,s=a.geometry,l=null===r?a.material:r,h=a.group;o.layers.test(i.layers)&&vi(o,t,i,s,l,h)}}function vi(e,t,i,r,n,a){e.onBeforeRender(m,t,i,r,n,a),e.modelViewMatrix.multiplyMatrices(i.matrixWorldInverse,e.matrixWorld),e.normalMatrix.getNormalMatrix(e.modelViewMatrix),n.onBeforeRender(m,t,i,r,e,a),!0===n.transparent&&n.side===E?(n.side=T,n.needsUpdate=!0,m.renderBufferDirect(i,t,r,n,e,a),n.side=S,n.needsUpdate=!0,m.renderBufferDirect(i,t,r,n,e,a),n.side=E):m.renderBufferDirect(i,t,r,n,e,a),e.onAfterRender(m,t,i,r,n,a)}function xi(e,t,i){!0!==t.isScene&&(t=Tt);const r=Pt.get(e),n=d.state.lights,a=d.state.shadowsArray,o=n.state.version,s=Vt.getParameters(e,n.state,a,t,i),l=Vt.getProgramCacheKey(s);let h=r.programs;r.environment=e.isMeshStandardMaterial?t.environment:null,r.fog=t.fog,r.envMap=(e.isMeshStandardMaterial?Nt:Ft).get(e.envMap||r.environment),void 0===h&&(e.addEventListener("dispose",ci),h=new Map,r.programs=h);let c=h.get(l);if(void 0!==c){if(r.currentProgram===c&&r.lightsStateVersion===o)return _i(e,s),c}else s.uniforms=Vt.getUniforms(e),e.onBuild(i,s,m),e.onBeforeCompile(s,m),c=Vt.acquireProgram(s,l),h.set(l,c),r.uniforms=s.uniforms;const u=r.uniforms;(e.isShaderMaterial||e.isRawShaderMaterial)&&!0!==e.clipping||(u.clippingPlanes=Wt.uniform),_i(e,s),r.needsLights=function(e){return e.isMeshLambertMaterial||e.isMeshToonMaterial||e.isMeshPhongMaterial||e.isMeshStandardMaterial||e.isShadowMaterial||e.isShaderMaterial&&!0===e.lights}(e),r.lightsStateVersion=o,r.needsLights&&(u.ambientLightColor.value=n.state.ambient,u.lightProbe.value=n.state.probe,u.directionalLights.value=n.state.directional,u.directionalLightShadows.value=n.state.directionalShadow,u.spotLights.value=n.state.spot,u.spotLightShadows.value=n.state.spotShadow,u.rectAreaLights.value=n.state.rectArea,u.ltc_1.value=n.state.rectAreaLTC1,u.ltc_2.value=n.state.rectAreaLTC2,u.pointLights.value=n.state.point,u.pointLightShadows.value=n.state.pointShadow,u.hemisphereLights.value=n.state.hemi,u.directionalShadowMap.value=n.state.directionalShadowMap,u.directionalShadowMatrix.value=n.state.directionalShadowMatrix,u.spotShadowMap.value=n.state.spotShadowMap,u.spotShadowMatrix.value=n.state.spotShadowMatrix,u.pointShadowMap.value=n.state.pointShadowMap,u.pointShadowMatrix.value=n.state.pointShadowMatrix);const p=c.getUniforms(),f=To.seqWithValue(p.seq,u);return r.currentProgram=c,r.uniformsList=f,c}function _i(e,t){const i=Pt.get(e);i.outputEncoding=t.outputEncoding,i.instancing=t.instancing,i.skinning=t.skinning,i.morphTargets=t.morphTargets,i.morphNormals=t.morphNormals,i.morphColors=t.morphColors,i.morphTargetsCount=t.morphTargetsCount,i.numClippingPlanes=t.numClippingPlanes,i.numIntersection=t.numClipIntersection,i.vertexAlphas=t.vertexAlphas,i.vertexTangents=t.vertexTangents,i.toneMapping=t.toneMapping}fi.setAnimationLoop(function(e){ui&&ui(e)}),"undefined"!=typeof self&&fi.setContext(self),this.setAnimationLoop=function(e){ui=e,ii.setAnimationLoop(e),null===e?fi.stop():fi.start()},ii.addEventListener("sessionstart",di),ii.addEventListener("sessionend",pi),this.render=function(e,t){if(void 0!==t&&!0!==t.isCamera)return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");if(!0===g)return;!0===e.autoUpdate&&e.updateMatrixWorld(),null===t.parent&&t.updateMatrixWorld(),!0===ii.enabled&&!0===ii.isPresenting&&(!0===ii.cameraAutoUpdate&&ii.updateCamera(t),t=ii.getCamera()),!0===e.isScene&&e.onBeforeRender(m,e,t,M),(d=kt.get(e,f.length)).init(),f.push(d),Ee.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),be.setFromProjectionMatrix(Ee),Se=this.localClippingEnabled,Me=Wt.init(this.clippingPlanes,Se,t),(u=Gt.get(e,p.length)).init(),p.push(u),function e(t,i,r,n){if(!1===t.visible)return;const a=t.layers.test(i.layers);if(a)if(t.isGroup)r=t.renderOrder;else if(t.isLOD)!0===t.autoUpdate&&t.update(i);else if(t.isLight)d.pushLight(t),t.castShadow&&d.pushShadow(t);else if(t.isSprite){if(!t.frustumCulled||be.intersectsSprite(t)){n&&St.setFromMatrixPosition(t.matrixWorld).applyMatrix4(Ee);const e=Ot.update(t),i=t.material;i.visible&&u.push(t,e,i,r,St.z,null)}}else if((t.isMesh||t.isLine||t.isPoints)&&(t.isSkinnedMesh&&t.skeleton.frame!==Rt.render.frame&&(t.skeleton.update(),t.skeleton.frame=Rt.render.frame),!t.frustumCulled||be.intersectsObject(t))){n&&St.setFromMatrixPosition(t.matrixWorld).applyMatrix4(Ee);const e=Ot.update(t),i=t.material;if(Array.isArray(i)){const n=e.groups;for(let a=0,o=n.length;a<o;a++){const o=n[a],s=i[o.materialIndex];s&&s.visible&&u.push(t,e,s,r,St.z,o)}}else i.visible&&u.push(t,e,i,r,St.z,null)}const o=t.children;for(let t=0,a=o.length;t<a;t++)e(o[t],i,r,n)}(e,t,0,m.sortObjects),u.finish(),!0===m.sortObjects&&u.sort(de,pe),!0===Me&&Wt.beginShadows();const i=d.state.shadowsArray;if(jt.render(i,e,t),!0===Me&&Wt.endShadows(),!0===this.info.autoReset&&this.info.reset(),Xt.render(u,e),d.setupLights(m.physicallyCorrectLights),t.isArrayCamera){const i=t.cameras;for(let t=0,r=i.length;t<r;t++){const r=i[t];mi(u,e,r,r.viewport)}}else mi(u,e,t);null!==M&&(Dt.updateMultisampleRenderTarget(M),Dt.updateRenderTargetMipmap(M)),!0===e.isScene&&e.onAfterRender(m,e,t),Qt.resetDefaultState(),A=-1,ne=null,f.pop(),d=f.length>0?f[f.length-1]:null,p.pop(),u=p.length>0?p[p.length-1]:null},this.getActiveCubeFace=function(){return w},this.getActiveMipmapLevel=function(){return b},this.getRenderTarget=function(){return M},this.setRenderTargetTextures=function(e,t,i){Pt.get(e.texture).__webglTexture=t,Pt.get(e.depthTexture).__webglTexture=i;const r=Pt.get(e);r.__hasExternalTextures=!0,r.__hasExternalTextures&&(r.__autoAllocateDepthBuffer=void 0===i,r.__autoAllocateDepthBuffer||!0===At.has("WEBGL_multisampled_render_to_texture")&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),r.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(e,t){const i=Pt.get(e);i.__webglFramebuffer=t,i.__useDefaultFramebuffer=void 0===t},this.setRenderTarget=function(e,t=0,i=0){M=e,w=t,b=i;let r=!0;if(e){const t=Pt.get(e);void 0!==t.__useDefaultFramebuffer?(Lt.bindFramebuffer(36160,null),r=!1):void 0===t.__webglFramebuffer?Dt.setupRenderTarget(e):t.__hasExternalTextures&&Dt.rebindTextures(e,Pt.get(e.texture).__webglTexture,Pt.get(e.depthTexture).__webglTexture)}let n=null,a=!1,o=!1;if(e){const i=e.texture;(i.isData3DTexture||i.isDataArrayTexture)&&(o=!0);const r=Pt.get(e).__webglFramebuffer;e.isWebGLCubeRenderTarget?(n=r[t],a=!0):n=Ct.isWebGL2&&e.samples>0&&!1===Dt.useMultisampledRTT(e)?Pt.get(e).__webglMultisampledFramebuffer:r,ae.copy(e.viewport),oe.copy(e.scissor),le=e.scissorTest}else ae.copy(xe).multiplyScalar(ue).floor(),oe.copy(_e).multiplyScalar(ue).floor(),le=we;if(Lt.bindFramebuffer(36160,n)&&Ct.drawBuffers&&r&&Lt.drawBuffers(e,n),Lt.viewport(ae),Lt.scissor(oe),Lt.setScissorTest(le),a){const r=Pt.get(e.texture);$t.framebufferTexture2D(36160,36064,34069+t,r.__webglTexture,i)}else if(o){const r=Pt.get(e.texture),n=t||0;$t.framebufferTextureLayer(36160,36064,r.__webglTexture,i||0,n)}A=-1},this.readRenderTargetPixels=function(e,t,i,r,n,a,o){if(!e||!e.isWebGLRenderTarget)return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let s=Pt.get(e).__webglFramebuffer;if(e.isWebGLCubeRenderTarget&&void 0!==o&&(s=s[o]),s){Lt.bindFramebuffer(36160,s);try{const o=e.texture,s=o.format,l=o.type;if(s!==He&&Jt.convert(s)!==$t.getParameter(35739))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");const h=l===Ie&&(At.has("EXT_color_buffer_half_float")||Ct.isWebGL2&&At.has("EXT_color_buffer_float"));if(!(l===Ce||Jt.convert(l)===$t.getParameter(35738)||l===ze&&(Ct.isWebGL2||At.has("OES_texture_float")||At.has("WEBGL_color_buffer_float"))||h))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");t>=0&&t<=e.width-r&&i>=0&&i<=e.height-n&&$t.readPixels(t,i,r,n,Jt.convert(s),Jt.convert(l),a)}finally{const e=null!==M?Pt.get(M).__webglFramebuffer:null;Lt.bindFramebuffer(36160,e)}}},this.copyFramebufferToTexture=function(e,t,i=0){if(!0!==t.isFramebufferTexture)return void console.error("THREE.WebGLRenderer: copyFramebufferToTexture() can only be used with FramebufferTexture.");const r=Math.pow(2,-i),n=Math.floor(t.image.width*r),a=Math.floor(t.image.height*r);Dt.setTexture2D(t,0),$t.copyTexSubImage2D(3553,i,0,0,e.x,e.y,n,a),Lt.unbindTexture()},this.copyTextureToTexture=function(e,t,i,r=0){const n=t.image.width,a=t.image.height,o=Jt.convert(i.format),s=Jt.convert(i.type);Dt.setTexture2D(i,0),$t.pixelStorei(37440,i.flipY),$t.pixelStorei(37441,i.premultiplyAlpha),$t.pixelStorei(3317,i.unpackAlignment),t.isDataTexture?$t.texSubImage2D(3553,r,e.x,e.y,n,a,o,s,t.image.data):t.isCompressedTexture?$t.compressedTexSubImage2D(3553,r,e.x,e.y,t.mipmaps[0].width,t.mipmaps[0].height,o,t.mipmaps[0].data):$t.texSubImage2D(3553,r,e.x,e.y,o,s,t.image),0===r&&i.generateMipmaps&&$t.generateMipmap(3553),Lt.unbindTexture()},this.copyTextureToTexture3D=function(e,t,i,r,n=0){if(m.isWebGL1Renderer)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");const a=e.max.x-e.min.x+1,o=e.max.y-e.min.y+1,s=e.max.z-e.min.z+1,l=Jt.convert(r.format),h=Jt.convert(r.type);let c;if(r.isData3DTexture)Dt.setTexture3D(r,0),c=32879;else{if(!r.isDataArrayTexture)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");Dt.setTexture2DArray(r,0),c=35866}$t.pixelStorei(37440,r.flipY),$t.pixelStorei(37441,r.premultiplyAlpha),$t.pixelStorei(3317,r.unpackAlignment);const u=$t.getParameter(3314),d=$t.getParameter(32878),p=$t.getParameter(3316),f=$t.getParameter(3315),g=$t.getParameter(32877),v=i.isCompressedTexture?i.mipmaps[0]:i.image;$t.pixelStorei(3314,v.width),$t.pixelStorei(32878,v.height),$t.pixelStorei(3316,e.min.x),$t.pixelStorei(3315,e.min.y),$t.pixelStorei(32877,e.min.z),i.isDataTexture||i.isData3DTexture?$t.texSubImage3D(c,n,t.x,t.y,t.z,a,o,s,l,h,v.data):i.isCompressedTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),$t.compressedTexSubImage3D(c,n,t.x,t.y,t.z,a,o,s,l,v.data)):$t.texSubImage3D(c,n,t.x,t.y,t.z,a,o,s,l,h,v),$t.pixelStorei(3314,u),$t.pixelStorei(32878,d),$t.pixelStorei(3316,p),$t.pixelStorei(3315,f),$t.pixelStorei(32877,g),0===n&&r.generateMipmaps&&$t.generateMipmap(c),Lt.unbindTexture()},this.initTexture=function(e){Dt.setTexture2D(e,0),Lt.unbindTexture()},this.resetState=function(){w=0,b=0,M=null,Lt.reset(),Qt.reset()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}ps.prototype.isWebGLRenderer=!0;(class extends ps{}).prototype.isWebGL1Renderer=!0;class fs{constructor(e,t=25e-5){this.name="",this.color=new yi(e),this.density=t}clone(){return new fs(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}fs.prototype.isFogExp2=!0;class ms{constructor(e,t=1,i=1e3){this.name="",this.color=new yi(e),this.near=t,this.far=i}clone(){return new ms(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}ms.prototype.isFog=!0;class gs extends Dr{constructor(){super(),this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),null!==e.background&&(this.background=e.background.clone()),null!==e.environment&&(this.environment=e.environment.clone()),null!==e.fog&&(this.fog=e.fog.clone()),null!==e.overrideMaterial&&(this.overrideMaterial=e.overrideMaterial.clone()),this.autoUpdate=e.autoUpdate,this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return null!==this.fog&&(t.object.fog=this.fog.toJSON()),t}}gs.prototype.isScene=!0;class vs{constructor(e,t){this.array=e,this.stride=t,this.count=void 0!==e?e.length/t:0,this.usage=Wt,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=Qt()}onUploadCallback(){}set needsUpdate(e){!0===e&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,i){e*=this.stride,i*=t.stride;for(let r=0,n=this.stride;r<n;r++)this.array[e+r]=t.array[i+r];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=Qt()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),i=new this.constructor(t,this.stride);return i.setUsage(this.usage),i}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=Qt()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}vs.prototype.isInterleavedBuffer=!0;const ys=new Ri;class xs{constructor(e,t,i,r=!1){this.name="",this.data=e,this.itemSize=t,this.offset=i,this.normalized=!0===r}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,i=this.data.count;t<i;t++)ys.fromBufferAttribute(this,t),ys.applyMatrix4(e),this.setXYZ(t,ys.x,ys.y,ys.z);return this}applyNormalMatrix(e){for(let t=0,i=this.count;t<i;t++)ys.fromBufferAttribute(this,t),ys.applyNormalMatrix(e),this.setXYZ(t,ys.x,ys.y,ys.z);return this}transformDirection(e){for(let t=0,i=this.count;t<i;t++)ys.fromBufferAttribute(this,t),ys.transformDirection(e),this.setXYZ(t,ys.x,ys.y,ys.z);return this}setX(e,t){return this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){return this.data.array[e*this.data.stride+this.offset]}getY(e){return this.data.array[e*this.data.stride+this.offset+1]}getZ(e){return this.data.array[e*this.data.stride+this.offset+2]}getW(e){return this.data.array[e*this.data.stride+this.offset+3]}setXY(e,t,i){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=i,this}setXYZ(e,t,i,r){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=i,this.data.array[e+2]=r,this}setXYZW(e,t,i,r,n){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=i,this.data.array[e+2]=r,this.data.array[e+3]=n,this}clone(e){if(void 0===e){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");const e=[];for(let t=0;t<this.count;t++){const i=t*this.data.stride+this.offset;for(let t=0;t<this.itemSize;t++)e.push(this.data.array[i+t])}return new Kr(new this.array.constructor(e),this.itemSize,this.normalized)}return void 0===e.interleavedBuffers&&(e.interleavedBuffers={}),void 0===e.interleavedBuffers[this.data.uuid]&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new xs(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(void 0===e){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");const e=[];for(let t=0;t<this.count;t++){const i=t*this.data.stride+this.offset;for(let t=0;t<this.itemSize;t++)e.push(this.data.array[i+t])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:e,normalized:this.normalized}}return void 0===e.interleavedBuffers&&(e.interleavedBuffers={}),void 0===e.interleavedBuffers[this.data.uuid]&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}xs.prototype.isInterleavedBufferAttribute=!0;class _s extends jr{constructor(e){super(),this.type="SpriteMaterial",this.color=new yi(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this}}let ws;_s.prototype.isSpriteMaterial=!0;const bs=new Ri,Ms=new Ri,Ss=new Ri,Ts=new ni,Es=new ni,As=new sr,Cs=new Ri,Ls=new Ri,Rs=new Ri,Ps=new ni,Ds=new ni,Fs=new ni;class zs extends Dr{constructor(e){if(super(),this.type="Sprite",void 0===ws){ws=new sn;const e=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),t=new vs(e,5);ws.setIndex([0,1,2,0,2,3]),ws.setAttribute("position",new xs(t,3,0,!1)),ws.setAttribute("uv",new xs(t,2,3,!1))}this.geometry=ws,this.material=void 0!==e?e:new _s,this.center=new ni(.5,.5)}raycast(e,t){null===e.camera&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),Ms.setFromMatrixScale(this.matrixWorld),As.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),Ss.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&!1===this.material.sizeAttenuation&&Ms.multiplyScalar(-Ss.z);const i=this.material.rotation;let r,n;0!==i&&(n=Math.cos(i),r=Math.sin(i));const a=this.center;Is(Cs.set(-.5,-.5,0),Ss,a,Ms,r,n),Is(Ls.set(.5,-.5,0),Ss,a,Ms,r,n),Is(Rs.set(.5,.5,0),Ss,a,Ms,r,n),Ps.set(0,0),Ds.set(1,0),Fs.set(1,1);let o=e.ray.intersectTriangle(Cs,Ls,Rs,!1,bs);if(null===o&&(Is(Ls.set(-.5,.5,0),Ss,a,Ms,r,n),Ds.set(0,1),null===(o=e.ray.intersectTriangle(Cs,Rs,Ls,!1,bs))))return;const s=e.ray.origin.distanceTo(bs);s<e.near||s>e.far||t.push({distance:s,point:bs.clone(),uv:kr.getUV(bs,Cs,Ls,Rs,Ps,Ds,Fs,new ni),face:null,object:this})}copy(e){return super.copy(e),void 0!==e.center&&this.center.copy(e.center),this.material=e.material,this}}function Is(e,t,i,r,n,a){Ts.subVectors(e,i).addScalar(.5).multiply(r),void 0!==n?(Es.x=a*Ts.x-n*Ts.y,Es.y=n*Ts.x+a*Ts.y):Es.copy(Ts),e.copy(t),e.x+=Es.x,e.y+=Es.y,e.applyMatrix4(As)}zs.prototype.isSprite=!0;const Ns=new Ri,Us=new Ti,Bs=new Ti,Os=new Ri,Vs=new sr;class Hs extends Tn{constructor(e,t){super(e,t),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new sr,this.bindMatrixInverse=new sr}copy(e){return super.copy(e),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,this}bind(e,t){this.skeleton=e,void 0===t&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const e=new Ti,t=this.geometry.attributes.skinWeight;for(let i=0,r=t.count;i<r;i++){e.fromBufferAttribute(t,i);const r=1/e.manhattanLength();r!==1/0?e.multiplyScalar(r):e.set(1,0,0,0),t.setXYZW(i,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),"attached"===this.bindMode?this.bindMatrixInverse.copy(this.matrixWorld).invert():"detached"===this.bindMode?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}boneTransform(e,t){const i=this.skeleton,r=this.geometry;Us.fromBufferAttribute(r.attributes.skinIndex,e),Bs.fromBufferAttribute(r.attributes.skinWeight,e),Ns.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let e=0;e<4;e++){const r=Bs.getComponent(e);if(0!==r){const n=Us.getComponent(e);Vs.multiplyMatrices(i.bones[n].matrixWorld,i.boneInverses[n]),t.addScaledVector(Os.copy(Ns).applyMatrix4(Vs),r)}}return t.applyMatrix4(this.bindMatrixInverse)}}Hs.prototype.isSkinnedMesh=!0;class Gs extends Dr{constructor(){super(),this.type="Bone"}}Gs.prototype.isBone=!0;class ks extends Si{constructor(e=null,t=1,i=1,r,n,a,o,s,l=be,h=be,c,u){super(null,a,o,s,l,h,r,n,c,u),this.image={data:e,width:t,height:i},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}ks.prototype.isDataTexture=!0;class Ws extends Kr{constructor(e,t,i,r=1){"number"==typeof i&&(r=i,i=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),super(e,t,i),this.meshPerAttribute=r}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}Ws.prototype.isInstancedBufferAttribute=!0;const js=new sr,Xs=new sr,qs=[],Ys=new Tn;class Ks extends Tn{constructor(e,t,i){super(e,t),this.instanceMatrix=new Ws(new Float32Array(16*i),16),this.instanceColor=null,this.count=i,this.frustumCulled=!1}copy(e){return super.copy(e),this.instanceMatrix.copy(e.instanceMatrix),null!==e.instanceColor&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,this}getColorAt(e,t){t.fromArray(this.instanceColor.array,3*e)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,16*e)}raycast(e,t){const i=this.matrixWorld,r=this.count;if(Ys.geometry=this.geometry,Ys.material=this.material,void 0!==Ys.material)for(let n=0;n<r;n++){this.getMatrixAt(n,js),Xs.multiplyMatrices(i,js),Ys.matrixWorld=Xs,Ys.raycast(e,qs);for(let e=0,i=qs.length;e<i;e++){const i=qs[e];i.instanceId=n,i.object=this,t.push(i)}qs.length=0}}setColorAt(e,t){null===this.instanceColor&&(this.instanceColor=new Ws(new Float32Array(3*this.instanceMatrix.count),3)),t.toArray(this.instanceColor.array,3*e)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,16*e)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}Ks.prototype.isInstancedMesh=!0;class Zs extends jr{constructor(e){super(),this.type="LineBasicMaterial",this.color=new yi(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this}}Zs.prototype.isLineBasicMaterial=!0;const Js=new Ri,Qs=new Ri,$s=new sr,el=new or,tl=new Qi;class il extends Dr{constructor(e=new sn,t=new Zs){super(),this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),this.material=e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.isBufferGeometry)if(null===e.index){const t=e.attributes.position,i=[0];for(let e=1,r=t.count;e<r;e++)Js.fromBufferAttribute(t,e-1),Qs.fromBufferAttribute(t,e),i[e]=i[e-1],i[e]+=Js.distanceTo(Qs);e.setAttribute("lineDistance",new Qr(i,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else e.isGeometry&&console.error("THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}raycast(e,t){const i=this.geometry,r=this.matrixWorld,n=e.params.Line.threshold,a=i.drawRange;if(null===i.boundingSphere&&i.computeBoundingSphere(),tl.copy(i.boundingSphere),tl.applyMatrix4(r),tl.radius+=n,!1===e.ray.intersectsSphere(tl))return;$s.copy(r).invert(),el.copy(e.ray).applyMatrix4($s);const o=n/((this.scale.x+this.scale.y+this.scale.z)/3),s=o*o,l=new Ri,h=new Ri,c=new Ri,u=new Ri,d=this.isLineSegments?2:1;if(i.isBufferGeometry){const r=i.index,n=i.attributes.position;if(null!==r){for(let i=Math.max(0,a.start),o=Math.min(r.count,a.start+a.count)-1;i<o;i+=d){const a=r.getX(i),o=r.getX(i+1);if(l.fromBufferAttribute(n,a),h.fromBufferAttribute(n,o),el.distanceSqToSegment(l,h,u,c)>s)continue;u.applyMatrix4(this.matrixWorld);const d=e.ray.origin.distanceTo(u);d<e.near||d>e.far||t.push({distance:d,point:c.clone().applyMatrix4(this.matrixWorld),index:i,face:null,faceIndex:null,object:this})}}else{for(let i=Math.max(0,a.start),r=Math.min(n.count,a.start+a.count)-1;i<r;i+=d){if(l.fromBufferAttribute(n,i),h.fromBufferAttribute(n,i+1),el.distanceSqToSegment(l,h,u,c)>s)continue;u.applyMatrix4(this.matrixWorld);const r=e.ray.origin.distanceTo(u);r<e.near||r>e.far||t.push({distance:r,point:c.clone().applyMatrix4(this.matrixWorld),index:i,face:null,faceIndex:null,object:this})}}}else i.isGeometry&&console.error("THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}updateMorphTargets(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,i=Object.keys(t);if(i.length>0){const e=t[i[0]];if(void 0!==e){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let t=0,i=e.length;t<i;t++){const i=e[t].name||String(t);this.morphTargetInfluences.push(0),this.morphTargetDictionary[i]=t}}}}else{const t=e.morphTargets;void 0!==t&&t.length>0&&console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}il.prototype.isLine=!0;const rl=new Ri,nl=new Ri;class al extends il{constructor(e,t){super(e,t),this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.isBufferGeometry)if(null===e.index){const t=e.attributes.position,i=[];for(let e=0,r=t.count;e<r;e+=2)rl.fromBufferAttribute(t,e),nl.fromBufferAttribute(t,e+1),i[e]=0===e?0:i[e-1],i[e+1]=i[e]+rl.distanceTo(nl);e.setAttribute("lineDistance",new Qr(i,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else e.isGeometry&&console.error("THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}}al.prototype.isLineSegments=!0;class ol extends il{constructor(e,t){super(e,t),this.type="LineLoop"}}ol.prototype.isLineLoop=!0;class sl extends jr{constructor(e){super(),this.type="PointsMaterial",this.color=new yi(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this}}sl.prototype.isPointsMaterial=!0;const ll=new sr,hl=new or,cl=new Qi,ul=new Ri;class dl extends Dr{constructor(e=new sn,t=new sl){super(),this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),this.material=e.material,this.geometry=e.geometry,this}raycast(e,t){const i=this.geometry,r=this.matrixWorld,n=e.params.Points.threshold,a=i.drawRange;if(null===i.boundingSphere&&i.computeBoundingSphere(),cl.copy(i.boundingSphere),cl.applyMatrix4(r),cl.radius+=n,!1===e.ray.intersectsSphere(cl))return;ll.copy(r).invert(),hl.copy(e.ray).applyMatrix4(ll);const o=n/((this.scale.x+this.scale.y+this.scale.z)/3),s=o*o;if(i.isBufferGeometry){const n=i.index,o=i.attributes.position;if(null!==n){for(let i=Math.max(0,a.start),l=Math.min(n.count,a.start+a.count);i<l;i++){const a=n.getX(i);ul.fromBufferAttribute(o,a),pl(ul,a,s,r,e,t,this)}}else{for(let i=Math.max(0,a.start),n=Math.min(o.count,a.start+a.count);i<n;i++)ul.fromBufferAttribute(o,i),pl(ul,i,s,r,e,t,this)}}else console.error("THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}updateMorphTargets(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,i=Object.keys(t);if(i.length>0){const e=t[i[0]];if(void 0!==e){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let t=0,i=e.length;t<i;t++){const i=e[t].name||String(t);this.morphTargetInfluences.push(0),this.morphTargetDictionary[i]=t}}}}else{const t=e.morphTargets;void 0!==t&&t.length>0&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}function pl(e,t,i,r,n,a,o){const s=hl.distanceSqToPoint(e);if(s<i){const i=new Ri;hl.closestPointToPoint(e,i),i.applyMatrix4(r);const l=n.ray.origin.distanceTo(i);if(l<n.near||l>n.far)return;a.push({distance:l,distanceToRay:Math.sqrt(s),point:i,index:t,face:null,object:o})}}dl.prototype.isPoints=!0;(class extends Si{constructor(e,t,i,r,n,a,o,s,l){super(e,t,i,r,n,a,o,s,l),this.minFilter=void 0!==a?a:Te,this.magFilter=void 0!==n?n:Te,this.generateMipmaps=!1;const h=this;"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback(function t(){h.needsUpdate=!0,e.requestVideoFrameCallback(t)})}clone(){return new this.constructor(this.image).copy(this)}update(){const e=this.image;!1=="requestVideoFrameCallback"in e&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}).prototype.isVideoTexture=!0;(class extends Si{constructor(e,t,i){super({width:e,height:t}),this.format=i,this.magFilter=be,this.minFilter=be,this.generateMipmaps=!1,this.needsUpdate=!0}}).prototype.isFramebufferTexture=!0;class fl extends Si{constructor(e,t,i,r,n,a,o,s,l,h,c,u){super(null,a,o,s,l,h,r,n,c,u),this.image={width:t,height:i},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}fl.prototype.isCompressedTexture=!0;(class extends Si{constructor(e,t,i,r,n,a,o,s,l){super(e,t,i,r,n,a,o,s,l),this.needsUpdate=!0}}).prototype.isCanvasTexture=!0;class ml{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,t){const i=this.getUtoTmapping(e);return this.getPoint(i,t)}getPoints(e=5){const t=[];for(let i=0;i<=e;i++)t.push(this.getPoint(i/e));return t}getSpacedPoints(e=5){const t=[];for(let i=0;i<=e;i++)t.push(this.getPointAt(i/e));return t}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let i,r=this.getPoint(0),n=0;t.push(0);for(let a=1;a<=e;a++)n+=(i=this.getPoint(a/e)).distanceTo(r),t.push(n),r=i;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t){const i=this.getLengths();let r=0;const n=i.length;let a;a=t||e*i[n-1];let o,s=0,l=n-1;for(;s<=l;)if((o=i[r=Math.floor(s+(l-s)/2)]-a)<0)s=r+1;else{if(!(o>0)){l=r;break}l=r-1}if(i[r=l]===a)return r/(n-1);const h=i[r];return(r+(a-h)/(i[r+1]-h))/(n-1)}getTangent(e,t){let i=e-1e-4,r=e+1e-4;i<0&&(i=0),r>1&&(r=1);const n=this.getPoint(i),a=this.getPoint(r),o=t||(n.isVector2?new ni:new Ri);return o.copy(a).sub(n).normalize(),o}getTangentAt(e,t){const i=this.getUtoTmapping(e);return this.getTangent(i,t)}computeFrenetFrames(e,t){const i=new Ri,r=[],n=[],a=[],o=new Ri,s=new sr;for(let t=0;t<=e;t++){const i=t/e;r[t]=this.getTangentAt(i,new Ri)}n[0]=new Ri,a[0]=new Ri;let l=Number.MAX_VALUE;const h=Math.abs(r[0].x),c=Math.abs(r[0].y),u=Math.abs(r[0].z);h<=l&&(l=h,i.set(1,0,0)),c<=l&&(l=c,i.set(0,1,0)),u<=l&&i.set(0,0,1),o.crossVectors(r[0],i).normalize(),n[0].crossVectors(r[0],o),a[0].crossVectors(r[0],n[0]);for(let t=1;t<=e;t++){if(n[t]=n[t-1].clone(),a[t]=a[t-1].clone(),o.crossVectors(r[t-1],r[t]),o.length()>Number.EPSILON){o.normalize();const e=Math.acos($t(r[t-1].dot(r[t]),-1,1));n[t].applyMatrix4(s.makeRotationAxis(o,e))}a[t].crossVectors(r[t],n[t])}if(!0===t){let t=Math.acos($t(n[0].dot(n[e]),-1,1));t/=e,r[0].dot(o.crossVectors(n[0],n[e]))>0&&(t=-t);for(let i=1;i<=e;i++)n[i].applyMatrix4(s.makeRotationAxis(r[i],t*i)),a[i].crossVectors(r[i],n[i])}return{tangents:r,normals:n,binormals:a}}clone(){return(new this.constructor).copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class gl extends ml{constructor(e=0,t=0,i=1,r=1,n=0,a=2*Math.PI,o=!1,s=0){super(),this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=i,this.yRadius=r,this.aStartAngle=n,this.aEndAngle=a,this.aClockwise=o,this.aRotation=s}getPoint(e,t){const i=t||new ni,r=2*Math.PI;let n=this.aEndAngle-this.aStartAngle;const a=Math.abs(n)<Number.EPSILON;for(;n<0;)n+=r;for(;n>r;)n-=r;n<Number.EPSILON&&(n=a?0:r),!0!==this.aClockwise||a||(n===r?n=-r:n-=r);const o=this.aStartAngle+e*n;let s=this.aX+this.xRadius*Math.cos(o),l=this.aY+this.yRadius*Math.sin(o);if(0!==this.aRotation){const e=Math.cos(this.aRotation),t=Math.sin(this.aRotation),i=s-this.aX,r=l-this.aY;s=i*e-r*t+this.aX,l=i*t+r*e+this.aY}return i.set(s,l)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}gl.prototype.isEllipseCurve=!0;class vl extends gl{constructor(e,t,i,r,n,a){super(e,t,i,i,r,n,a),this.type="ArcCurve"}}function yl(){let e=0,t=0,i=0,r=0;function n(n,a,o,s){e=n,t=o,i=-3*n+3*a-2*o-s,r=2*n-2*a+o+s}return{initCatmullRom:function(e,t,i,r,a){n(t,i,a*(i-e),a*(r-t))},initNonuniformCatmullRom:function(e,t,i,r,a,o,s){let l=(t-e)/a-(i-e)/(a+o)+(i-t)/o,h=(i-t)/o-(r-t)/(o+s)+(r-i)/s;n(t,i,l*=o,h*=o)},calc:function(n){const a=n*n;return e+t*n+i*a+r*(a*n)}}}vl.prototype.isArcCurve=!0;const xl=new Ri,_l=new yl,wl=new yl,bl=new yl;class Ml extends ml{constructor(e=[],t=!1,i="centripetal",r=.5){super(),this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=i,this.tension=r}getPoint(e,t=new Ri){const i=t,r=this.points,n=r.length,a=(n-(this.closed?0:1))*e;let o,s,l=Math.floor(a),h=a-l;this.closed?l+=l>0?0:(Math.floor(Math.abs(l)/n)+1)*n:0===h&&l===n-1&&(l=n-2,h=1),this.closed||l>0?o=r[(l-1)%n]:(xl.subVectors(r[0],r[1]).add(r[0]),o=xl);const c=r[l%n],u=r[(l+1)%n];if(this.closed||l+2<n?s=r[(l+2)%n]:(xl.subVectors(r[n-1],r[n-2]).add(r[n-1]),s=xl),"centripetal"===this.curveType||"chordal"===this.curveType){const e="chordal"===this.curveType?.5:.25;let t=Math.pow(o.distanceToSquared(c),e),i=Math.pow(c.distanceToSquared(u),e),r=Math.pow(u.distanceToSquared(s),e);i<1e-4&&(i=1),t<1e-4&&(t=i),r<1e-4&&(r=i),_l.initNonuniformCatmullRom(o.x,c.x,u.x,s.x,t,i,r),wl.initNonuniformCatmullRom(o.y,c.y,u.y,s.y,t,i,r),bl.initNonuniformCatmullRom(o.z,c.z,u.z,s.z,t,i,r)}else"catmullrom"===this.curveType&&(_l.initCatmullRom(o.x,c.x,u.x,s.x,this.tension),wl.initCatmullRom(o.y,c.y,u.y,s.y,this.tension),bl.initCatmullRom(o.z,c.z,u.z,s.z,this.tension));return i.set(_l.calc(h),wl.calc(h),bl.calc(h)),i}copy(e){super.copy(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){const i=e.points[t];this.points.push(i.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,i=this.points.length;t<i;t++){const i=this.points[t];e.points.push(i.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){const i=e.points[t];this.points.push((new Ri).fromArray(i))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}function Sl(e,t,i,r,n){const a=.5*(r-t),o=.5*(n-i),s=e*e;return(2*i-2*r+a+o)*(e*s)+(-3*i+3*r-2*a-o)*s+a*e+i}function Tl(e,t,i,r){return function(e,t){const i=1-e;return i*i*t}(e,t)+function(e,t){return 2*(1-e)*e*t}(e,i)+function(e,t){return e*e*t}(e,r)}function El(e,t,i,r,n){return function(e,t){const i=1-e;return i*i*i*t}(e,t)+function(e,t){const i=1-e;return 3*i*i*e*t}(e,i)+function(e,t){return 3*(1-e)*e*e*t}(e,r)+function(e,t){return e*e*e*t}(e,n)}Ml.prototype.isCatmullRomCurve3=!0;class Al extends ml{constructor(e=new ni,t=new ni,i=new ni,r=new ni){super(),this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=i,this.v3=r}getPoint(e,t=new ni){const i=t,r=this.v0,n=this.v1,a=this.v2,o=this.v3;return i.set(El(e,r.x,n.x,a.x,o.x),El(e,r.y,n.y,a.y,o.y)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}Al.prototype.isCubicBezierCurve=!0;class Cl extends ml{constructor(e=new Ri,t=new Ri,i=new Ri,r=new Ri){super(),this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=i,this.v3=r}getPoint(e,t=new Ri){const i=t,r=this.v0,n=this.v1,a=this.v2,o=this.v3;return i.set(El(e,r.x,n.x,a.x,o.x),El(e,r.y,n.y,a.y,o.y),El(e,r.z,n.z,a.z,o.z)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}Cl.prototype.isCubicBezierCurve3=!0;class Ll extends ml{constructor(e=new ni,t=new ni){super(),this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new ni){const i=t;return 1===e?i.copy(this.v2):(i.copy(this.v2).sub(this.v1),i.multiplyScalar(e).add(this.v1)),i}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t){const i=t||new ni;return i.copy(this.v2).sub(this.v1).normalize(),i}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}Ll.prototype.isLineCurve=!0;class Rl extends ml{constructor(e=new ni,t=new ni,i=new ni){super(),this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=i}getPoint(e,t=new ni){const i=t,r=this.v0,n=this.v1,a=this.v2;return i.set(Tl(e,r.x,n.x,a.x),Tl(e,r.y,n.y,a.y)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}Rl.prototype.isQuadraticBezierCurve=!0;class Pl extends ml{constructor(e=new Ri,t=new Ri,i=new Ri){super(),this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=i}getPoint(e,t=new Ri){const i=t,r=this.v0,n=this.v1,a=this.v2;return i.set(Tl(e,r.x,n.x,a.x),Tl(e,r.y,n.y,a.y),Tl(e,r.z,n.z,a.z)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}Pl.prototype.isQuadraticBezierCurve3=!0;class Dl extends ml{constructor(e=[]){super(),this.type="SplineCurve",this.points=e}getPoint(e,t=new ni){const i=t,r=this.points,n=(r.length-1)*e,a=Math.floor(n),o=n-a,s=r[0===a?a:a-1],l=r[a],h=r[a>r.length-2?r.length-1:a+1],c=r[a>r.length-3?r.length-1:a+2];return i.set(Sl(o,s.x,l.x,h.x,c.x),Sl(o,s.y,l.y,h.y,c.y)),i}copy(e){super.copy(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){const i=e.points[t];this.points.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,i=this.points.length;t<i;t++){const i=this.points[t];e.points.push(i.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){const i=e.points[t];this.points.push((new ni).fromArray(i))}return this}}Dl.prototype.isSplineCurve=!0;var Fl=Object.freeze({__proto__:null,ArcCurve:vl,CatmullRomCurve3:Ml,CubicBezierCurve:Al,CubicBezierCurve3:Cl,EllipseCurve:gl,LineCurve:Ll,LineCurve3:class extends ml{constructor(e=new Ri,t=new Ri){super(),this.type="LineCurve3",this.isLineCurve3=!0,this.v1=e,this.v2=t}getPoint(e,t=new Ri){const i=t;return 1===e?i.copy(this.v2):(i.copy(this.v2).sub(this.v1),i.multiplyScalar(e).add(this.v1)),i}getPointAt(e,t){return this.getPoint(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}},QuadraticBezierCurve:Rl,QuadraticBezierCurve3:Pl,SplineCurve:Dl});class zl extends ml{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new Ll(t,e))}getPoint(e,t){const i=e*this.getLength(),r=this.getCurveLengths();let n=0;for(;n<r.length;){if(r[n]>=i){const e=r[n]-i,a=this.curves[n],o=a.getLength(),s=0===o?0:1-e/o;return a.getPointAt(s,t)}n++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let i=0,r=this.curves.length;i<r;i++)t+=this.curves[i].getLength(),e.push(t);return this.cacheLengths=e,e}getSpacedPoints(e=40){const t=[];for(let i=0;i<=e;i++)t.push(this.getPoint(i/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){const t=[];let i;for(let r=0,n=this.curves;r<n.length;r++){const a=n[r],o=a.isEllipseCurve?2*e:a.isLineCurve||a.isLineCurve3?1:a.isSplineCurve?e*a.points.length:e,s=a.getPoints(o);for(let e=0;e<s.length;e++){const r=s[e];i&&i.equals(r)||(t.push(r),i=r)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,i=e.curves.length;t<i;t++){const i=e.curves[t];this.curves.push(i.clone())}return this.autoClose=e.autoClose,this}toJSON(){const e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,i=this.curves.length;t<i;t++){const i=this.curves[t];e.curves.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,i=e.curves.length;t<i;t++){const i=e.curves[t];this.curves.push((new Fl[i.type]).fromJSON(i))}return this}}class Il extends zl{constructor(e){super(),this.type="Path",this.currentPoint=new ni,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,i=e.length;t<i;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){const i=new Ll(this.currentPoint.clone(),new ni(e,t));return this.curves.push(i),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,i,r){const n=new Rl(this.currentPoint.clone(),new ni(e,t),new ni(i,r));return this.curves.push(n),this.currentPoint.set(i,r),this}bezierCurveTo(e,t,i,r,n,a){const o=new Al(this.currentPoint.clone(),new ni(e,t),new ni(i,r),new ni(n,a));return this.curves.push(o),this.currentPoint.set(n,a),this}splineThru(e){const t=[this.currentPoint.clone()].concat(e),i=new Dl(t);return this.curves.push(i),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,i,r,n,a){const o=this.currentPoint.x,s=this.currentPoint.y;return this.absarc(e+o,t+s,i,r,n,a),this}absarc(e,t,i,r,n,a){return this.absellipse(e,t,i,i,r,n,a),this}ellipse(e,t,i,r,n,a,o,s){const l=this.currentPoint.x,h=this.currentPoint.y;return this.absellipse(e+l,t+h,i,r,n,a,o,s),this}absellipse(e,t,i,r,n,a,o,s){const l=new gl(e,t,i,r,n,a,o,s);if(this.curves.length>0){const e=l.getPoint(0);e.equals(this.currentPoint)||this.lineTo(e.x,e.y)}this.curves.push(l);const h=l.getPoint(1);return this.currentPoint.copy(h),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}new Ri,new Ri,new Ri,new kr;class Nl extends Il{constructor(e){super(e),this.uuid=Qt(),this.type="Shape",this.holes=[]}getPointsHoles(e){const t=[];for(let i=0,r=this.holes.length;i<r;i++)t[i]=this.holes[i].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,i=e.holes.length;t<i;t++){const i=e.holes[t];this.holes.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,i=this.holes.length;t<i;t++){const i=this.holes[t];e.holes.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,i=e.holes.length;t<i;t++){const i=e.holes[t];this.holes.push((new Il).fromJSON(i))}return this}}const Ul={triangulate:function(e,t,i=2){const r=t&&t.length,n=r?t[0]*i:e.length;let a=Bl(e,0,n,i,!0);const o=[];if(!a||a.next===a.prev)return o;let s,l,h,c,u,d,p;if(r&&(a=function(e,t,i,r){const n=[];let a,o,s,l,h;for(a=0,o=t.length;a<o;a++)s=t[a]*r,l=a<o-1?t[a+1]*r:e.length,(h=Bl(e,s,l,r,!1))===h.next&&(h.steiner=!0),n.push(Kl(h));for(n.sort(jl),a=0;a<n.length;a++)Xl(n[a],i),i=Ol(i,i.next);return i}(e,t,a,i)),e.length>80*i){s=h=e[0],l=c=e[1];for(let t=i;t<n;t+=i)u=e[t],d=e[t+1],u<s&&(s=u),d<l&&(l=d),u>h&&(h=u),d>c&&(c=d);p=0!==(p=Math.max(h-s,c-l))?1/p:0}return Vl(a,o,i,s,l,p),o}};function Bl(e,t,i,r,n){let a,o;if(n===function(e,t,i,r){let n=0;for(let a=t,o=i-r;a<i;a+=r)n+=(e[o]-e[a])*(e[a+1]+e[o+1]),o=a;return n}(e,t,i,r)>0)for(a=t;a<i;a+=r)o=ah(a,e[a],e[a+1],o);else for(a=i-r;a>=t;a-=r)o=ah(a,e[a],e[a+1],o);return o&&$l(o,o.next)&&(oh(o),o=o.next),o}function Ol(e,t){if(!e)return e;t||(t=e);let i,r=e;do{if(i=!1,r.steiner||!$l(r,r.next)&&0!==Ql(r.prev,r,r.next))r=r.next;else{if(oh(r),(r=t=r.prev)===r.next)break;i=!0}}while(i||r!==t);return t}function Vl(e,t,i,r,n,a,o){if(!e)return;!o&&a&&function(e,t,i,r){let n=e;do{null===n.z&&(n.z=Yl(n.x,n.y,t,i,r)),n.prevZ=n.prev,n.nextZ=n.next,n=n.next}while(n!==e);n.prevZ.nextZ=null,n.prevZ=null,function(e){let t,i,r,n,a,o,s,l,h=1;do{for(i=e,e=null,a=null,o=0;i;){for(o++,r=i,s=0,t=0;t<h&&(s++,r=r.nextZ);t++);for(l=h;s>0||l>0&&r;)0!==s&&(0===l||!r||i.z<=r.z)?(n=i,i=i.nextZ,s--):(n=r,r=r.nextZ,l--),a?a.nextZ=n:e=n,n.prevZ=a,a=n;i=r}a.nextZ=null,h*=2}while(o>1)}(n)}(e,r,n,a);let s,l,h=e;for(;e.prev!==e.next;)if(s=e.prev,l=e.next,a?Gl(e,r,n,a):Hl(e))t.push(s.i/i),t.push(e.i/i),t.push(l.i/i),oh(e),e=l.next,h=l.next;else if((e=l)===h){o?1===o?Vl(e=kl(Ol(e),t,i),t,i,r,n,a,2):2===o&&Wl(e,t,i,r,n,a):Vl(Ol(e),t,i,r,n,a,1);break}}function Hl(e){const t=e.prev,i=e,r=e.next;if(Ql(t,i,r)>=0)return!1;let n=e.next.next;for(;n!==e.prev;){if(Zl(t.x,t.y,i.x,i.y,r.x,r.y,n.x,n.y)&&Ql(n.prev,n,n.next)>=0)return!1;n=n.next}return!0}function Gl(e,t,i,r){const n=e.prev,a=e,o=e.next;if(Ql(n,a,o)>=0)return!1;const s=n.x<a.x?n.x<o.x?n.x:o.x:a.x<o.x?a.x:o.x,l=n.y<a.y?n.y<o.y?n.y:o.y:a.y<o.y?a.y:o.y,h=n.x>a.x?n.x>o.x?n.x:o.x:a.x>o.x?a.x:o.x,c=n.y>a.y?n.y>o.y?n.y:o.y:a.y>o.y?a.y:o.y,u=Yl(s,l,t,i,r),d=Yl(h,c,t,i,r);let p=e.prevZ,f=e.nextZ;for(;p&&p.z>=u&&f&&f.z<=d;){if(p!==e.prev&&p!==e.next&&Zl(n.x,n.y,a.x,a.y,o.x,o.y,p.x,p.y)&&Ql(p.prev,p,p.next)>=0)return!1;if(p=p.prevZ,f!==e.prev&&f!==e.next&&Zl(n.x,n.y,a.x,a.y,o.x,o.y,f.x,f.y)&&Ql(f.prev,f,f.next)>=0)return!1;f=f.nextZ}for(;p&&p.z>=u;){if(p!==e.prev&&p!==e.next&&Zl(n.x,n.y,a.x,a.y,o.x,o.y,p.x,p.y)&&Ql(p.prev,p,p.next)>=0)return!1;p=p.prevZ}for(;f&&f.z<=d;){if(f!==e.prev&&f!==e.next&&Zl(n.x,n.y,a.x,a.y,o.x,o.y,f.x,f.y)&&Ql(f.prev,f,f.next)>=0)return!1;f=f.nextZ}return!0}function kl(e,t,i){let r=e;do{const n=r.prev,a=r.next.next;!$l(n,a)&&eh(n,r,r.next,a)&&rh(n,a)&&rh(a,n)&&(t.push(n.i/i),t.push(r.i/i),t.push(a.i/i),oh(r),oh(r.next),r=e=a),r=r.next}while(r!==e);return Ol(r)}function Wl(e,t,i,r,n,a){let o=e;do{let e=o.next.next;for(;e!==o.prev;){if(o.i!==e.i&&Jl(o,e)){let s=nh(o,e);return o=Ol(o,o.next),s=Ol(s,s.next),Vl(o,t,i,r,n,a),void Vl(s,t,i,r,n,a)}e=e.next}o=o.next}while(o!==e)}function jl(e,t){return e.x-t.x}function Xl(e,t){if(t=function(e,t){let i=t;const r=e.x,n=e.y;let a,o=-1/0;do{if(n<=i.y&&n>=i.next.y&&i.next.y!==i.y){const e=i.x+(n-i.y)*(i.next.x-i.x)/(i.next.y-i.y);if(e<=r&&e>o){if(o=e,e===r){if(n===i.y)return i;if(n===i.next.y)return i.next}a=i.x<i.next.x?i:i.next}}i=i.next}while(i!==t);if(!a)return null;if(r===o)return a;const s=a,l=a.x,h=a.y;let c,u=1/0;i=a;do{r>=i.x&&i.x>=l&&r!==i.x&&Zl(n<h?r:o,n,l,h,n<h?o:r,n,i.x,i.y)&&(c=Math.abs(n-i.y)/(r-i.x),rh(i,e)&&(c<u||c===u&&(i.x>a.x||i.x===a.x&&ql(a,i)))&&(a=i,u=c)),i=i.next}while(i!==s);return a}(e,t)){const i=nh(t,e);Ol(t,t.next),Ol(i,i.next)}}function ql(e,t){return Ql(e.prev,e,t.prev)<0&&Ql(t.next,e,e.next)<0}function Yl(e,t,i,r,n){return(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=32767*(e-i)*n)|e<<8))|e<<4))|e<<2))|e<<1))|(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=32767*(t-r)*n)|t<<8))|t<<4))|t<<2))|t<<1))<<1}function Kl(e){let t=e,i=e;do{(t.x<i.x||t.x===i.x&&t.y<i.y)&&(i=t),t=t.next}while(t!==e);return i}function Zl(e,t,i,r,n,a,o,s){return(n-o)*(t-s)-(e-o)*(a-s)>=0&&(e-o)*(r-s)-(i-o)*(t-s)>=0&&(i-o)*(a-s)-(n-o)*(r-s)>=0}function Jl(e,t){return e.next.i!==t.i&&e.prev.i!==t.i&&!function(e,t){let i=e;do{if(i.i!==e.i&&i.next.i!==e.i&&i.i!==t.i&&i.next.i!==t.i&&eh(i,i.next,e,t))return!0;i=i.next}while(i!==e);return!1}(e,t)&&(rh(e,t)&&rh(t,e)&&function(e,t){let i=e,r=!1;const n=(e.x+t.x)/2,a=(e.y+t.y)/2;do{i.y>a!=i.next.y>a&&i.next.y!==i.y&&n<(i.next.x-i.x)*(a-i.y)/(i.next.y-i.y)+i.x&&(r=!r),i=i.next}while(i!==e);return r}(e,t)&&(Ql(e.prev,e,t.prev)||Ql(e,t.prev,t))||$l(e,t)&&Ql(e.prev,e,e.next)>0&&Ql(t.prev,t,t.next)>0)}function Ql(e,t,i){return(t.y-e.y)*(i.x-t.x)-(t.x-e.x)*(i.y-t.y)}function $l(e,t){return e.x===t.x&&e.y===t.y}function eh(e,t,i,r){const n=ih(Ql(e,t,i)),a=ih(Ql(e,t,r)),o=ih(Ql(i,r,e)),s=ih(Ql(i,r,t));return n!==a&&o!==s||(!(0!==n||!th(e,i,t))||(!(0!==a||!th(e,r,t))||(!(0!==o||!th(i,e,r))||!(0!==s||!th(i,t,r)))))}function th(e,t,i){return t.x<=Math.max(e.x,i.x)&&t.x>=Math.min(e.x,i.x)&&t.y<=Math.max(e.y,i.y)&&t.y>=Math.min(e.y,i.y)}function ih(e){return e>0?1:e<0?-1:0}function rh(e,t){return Ql(e.prev,e,e.next)<0?Ql(e,t,e.next)>=0&&Ql(e,e.prev,t)>=0:Ql(e,t,e.prev)<0||Ql(e,e.next,t)<0}function nh(e,t){const i=new sh(e.i,e.x,e.y),r=new sh(t.i,t.x,t.y),n=e.next,a=t.prev;return e.next=t,t.prev=e,i.next=n,n.prev=i,r.next=i,i.prev=r,a.next=r,r.prev=a,r}function ah(e,t,i,r){const n=new sh(e,t,i);return r?(n.next=r.next,n.prev=r,r.next.prev=n,r.next=n):(n.prev=n,n.next=n),n}function oh(e){e.next.prev=e.prev,e.prev.next=e.next,e.prevZ&&(e.prevZ.nextZ=e.nextZ),e.nextZ&&(e.nextZ.prevZ=e.prevZ)}function sh(e,t,i){this.i=e,this.x=t,this.y=i,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}class lh{static area(e){const t=e.length;let i=0;for(let r=t-1,n=0;n<t;r=n++)i+=e[r].x*e[n].y-e[n].x*e[r].y;return.5*i}static isClockWise(e){return lh.area(e)<0}static triangulateShape(e,t){const i=[],r=[],n=[];hh(e),ch(i,e);let a=e.length;t.forEach(hh);for(let e=0;e<t.length;e++)r.push(a),a+=t[e].length,ch(i,t[e]);const o=Ul.triangulate(i,r);for(let e=0;e<o.length;e+=3)n.push(o.slice(e,e+3));return n}}function hh(e){const t=e.length;t>2&&e[t-1].equals(e[0])&&e.pop()}function ch(e,t){for(let i=0;i<t.length;i++)e.push(t[i].x),e.push(t[i].y)}class uh extends sn{constructor(e=new Nl([new ni(.5,.5),new ni(-.5,.5),new ni(-.5,-.5),new ni(.5,-.5)]),t={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t};const i=this,r=[],n=[];for(let t=0,i=(e=Array.isArray(e)?e:[e]).length;t<i;t++){a(e[t])}function a(e){const a=[],o=void 0!==t.curveSegments?t.curveSegments:12,s=void 0!==t.steps?t.steps:1;let l=void 0!==t.depth?t.depth:1,h=void 0===t.bevelEnabled||t.bevelEnabled,c=void 0!==t.bevelThickness?t.bevelThickness:.2,u=void 0!==t.bevelSize?t.bevelSize:c-.1,d=void 0!==t.bevelOffset?t.bevelOffset:0,p=void 0!==t.bevelSegments?t.bevelSegments:3;const f=t.extrudePath,m=void 0!==t.UVGenerator?t.UVGenerator:dh;void 0!==t.amount&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),l=t.amount);let g,v,y,x,_,w=!1;f&&(g=f.getSpacedPoints(s),w=!0,h=!1,v=f.computeFrenetFrames(s,!1),y=new Ri,x=new Ri,_=new Ri),h||(p=0,c=0,u=0,d=0);const b=e.extractPoints(o);let M=b.shape;const S=b.holes;if(!lh.isClockWise(M)){M=M.reverse();for(let e=0,t=S.length;e<t;e++){const t=S[e];lh.isClockWise(t)&&(S[e]=t.reverse())}}const T=lh.triangulateShape(M,S),E=M;for(let e=0,t=S.length;e<t;e++){const t=S[e];M=M.concat(t)}function A(e,t,i){return t||console.error("THREE.ExtrudeGeometry: vec does not exist"),t.clone().multiplyScalar(i).add(e)}const C=M.length,L=T.length;function R(e,t,i){let r,n,a;const o=e.x-t.x,s=e.y-t.y,l=i.x-e.x,h=i.y-e.y,c=o*o+s*s,u=o*h-s*l;if(Math.abs(u)>Number.EPSILON){const u=Math.sqrt(c),d=Math.sqrt(l*l+h*h),p=t.x-s/u,f=t.y+o/u,m=((i.x-h/d-p)*h-(i.y+l/d-f)*l)/(o*h-s*l),g=(r=p+o*m-e.x)*r+(n=f+s*m-e.y)*n;if(g<=2)return new ni(r,n);a=Math.sqrt(g/2)}else{let e=!1;o>Number.EPSILON?l>Number.EPSILON&&(e=!0):o<-Number.EPSILON?l<-Number.EPSILON&&(e=!0):Math.sign(s)===Math.sign(h)&&(e=!0),e?(r=-s,n=o,a=Math.sqrt(c)):(r=o,n=s,a=Math.sqrt(c/2))}return new ni(r/a,n/a)}const P=[];for(let e=0,t=E.length,i=t-1,r=e+1;e<t;e++,i++,r++)i===t&&(i=0),r===t&&(r=0),P[e]=R(E[e],E[i],E[r]);const D=[];let F,z=P.concat();for(let e=0,t=S.length;e<t;e++){const t=S[e];F=[];for(let e=0,i=t.length,r=i-1,n=e+1;e<i;e++,r++,n++)r===i&&(r=0),n===i&&(n=0),F[e]=R(t[e],t[r],t[n]);D.push(F),z=z.concat(F)}for(let e=0;e<p;e++){const t=e/p,i=c*Math.cos(t*Math.PI/2),r=u*Math.sin(t*Math.PI/2)+d;for(let e=0,t=E.length;e<t;e++){const t=A(E[e],P[e],r);U(t.x,t.y,-i)}for(let e=0,t=S.length;e<t;e++){const t=S[e];F=D[e];for(let e=0,n=t.length;e<n;e++){const n=A(t[e],F[e],r);U(n.x,n.y,-i)}}}const I=u+d;for(let e=0;e<C;e++){const t=h?A(M[e],z[e],I):M[e];w?(x.copy(v.normals[0]).multiplyScalar(t.x),y.copy(v.binormals[0]).multiplyScalar(t.y),_.copy(g[0]).add(x).add(y),U(_.x,_.y,_.z)):U(t.x,t.y,0)}for(let e=1;e<=s;e++)for(let t=0;t<C;t++){const i=h?A(M[t],z[t],I):M[t];w?(x.copy(v.normals[e]).multiplyScalar(i.x),y.copy(v.binormals[e]).multiplyScalar(i.y),_.copy(g[e]).add(x).add(y),U(_.x,_.y,_.z)):U(i.x,i.y,l/s*e)}for(let e=p-1;e>=0;e--){const t=e/p,i=c*Math.cos(t*Math.PI/2),r=u*Math.sin(t*Math.PI/2)+d;for(let e=0,t=E.length;e<t;e++){const t=A(E[e],P[e],r);U(t.x,t.y,l+i)}for(let e=0,t=S.length;e<t;e++){const t=S[e];F=D[e];for(let e=0,n=t.length;e<n;e++){const n=A(t[e],F[e],r);w?U(n.x,n.y+g[s-1].y,g[s-1].x+i):U(n.x,n.y,l+i)}}}function N(e,t){let i=e.length;for(;--i>=0;){const r=i;let n=i-1;n<0&&(n=e.length-1);for(let e=0,i=s+2*p;e<i;e++){const i=C*e,a=C*(e+1);O(t+r+i,t+n+i,t+n+a,t+r+a)}}}function U(e,t,i){a.push(e),a.push(t),a.push(i)}function B(e,t,n){V(e),V(t),V(n);const a=r.length/3,o=m.generateTopUV(i,r,a-3,a-2,a-1);H(o[0]),H(o[1]),H(o[2])}function O(e,t,n,a){V(e),V(t),V(a),V(t),V(n),V(a);const o=r.length/3,s=m.generateSideWallUV(i,r,o-6,o-3,o-2,o-1);H(s[0]),H(s[1]),H(s[3]),H(s[1]),H(s[2]),H(s[3])}function V(e){r.push(a[3*e+0]),r.push(a[3*e+1]),r.push(a[3*e+2])}function H(e){n.push(e.x),n.push(e.y)}!function(){const e=r.length/3;if(h){let e=0,t=C*e;for(let e=0;e<L;e++){const i=T[e];B(i[2]+t,i[1]+t,i[0]+t)}t=C*(e=s+2*p);for(let e=0;e<L;e++){const i=T[e];B(i[0]+t,i[1]+t,i[2]+t)}}else{for(let e=0;e<L;e++){const t=T[e];B(t[2],t[1],t[0])}for(let e=0;e<L;e++){const t=T[e];B(t[0]+C*s,t[1]+C*s,t[2]+C*s)}}i.addGroup(e,r.length/3-e,0)}(),function(){const e=r.length/3;let t=0;N(E,t),t+=E.length;for(let e=0,i=S.length;e<i;e++){const i=S[e];N(i,t),t+=i.length}i.addGroup(e,r.length/3-e,1)}()}this.setAttribute("position",new Qr(r,3)),this.setAttribute("uv",new Qr(n,2)),this.computeVertexNormals()}toJSON(){const e=super.toJSON();return function(e,t,i){if(i.shapes=[],Array.isArray(e))for(let t=0,r=e.length;t<r;t++){const r=e[t];i.shapes.push(r.uuid)}else i.shapes.push(e.uuid);void 0!==t.extrudePath&&(i.options.extrudePath=t.extrudePath.toJSON());return i}(this.parameters.shapes,this.parameters.options,e)}static fromJSON(e,t){const i=[];for(let r=0,n=e.shapes.length;r<n;r++){const n=t[e.shapes[r]];i.push(n)}const r=e.options.extrudePath;return void 0!==r&&(e.options.extrudePath=(new Fl[r.type]).fromJSON(r)),new uh(i,e.options)}}const dh={generateTopUV:function(e,t,i,r,n){const a=t[3*i],o=t[3*i+1],s=t[3*r],l=t[3*r+1],h=t[3*n],c=t[3*n+1];return[new ni(a,o),new ni(s,l),new ni(h,c)]},generateSideWallUV:function(e,t,i,r,n,a){const o=t[3*i],s=t[3*i+1],l=t[3*i+2],h=t[3*r],c=t[3*r+1],u=t[3*r+2],d=t[3*n],p=t[3*n+1],f=t[3*n+2],m=t[3*a],g=t[3*a+1],v=t[3*a+2];return Math.abs(s-c)<Math.abs(o-h)?[new ni(o,1-l),new ni(h,1-u),new ni(d,1-f),new ni(m,1-v)]:[new ni(s,1-l),new ni(c,1-u),new ni(p,1-f),new ni(g,1-v)]}};class ph extends sn{constructor(e=new Nl([new ni(0,.5),new ni(-.5,-.5),new ni(.5,-.5)]),t=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};const i=[],r=[],n=[],a=[];let o=0,s=0;if(!1===Array.isArray(e))l(e);else for(let t=0;t<e.length;t++)l(e[t]),this.addGroup(o,s,t),o+=s,s=0;function l(e){const o=r.length/3,l=e.extractPoints(t);let h=l.shape;const c=l.holes;!1===lh.isClockWise(h)&&(h=h.reverse());for(let e=0,t=c.length;e<t;e++){const t=c[e];!0===lh.isClockWise(t)&&(c[e]=t.reverse())}const u=lh.triangulateShape(h,c);for(let e=0,t=c.length;e<t;e++){const t=c[e];h=h.concat(t)}for(let e=0,t=h.length;e<t;e++){const t=h[e];r.push(t.x,t.y,0),n.push(0,0,1),a.push(t.x,t.y)}for(let e=0,t=u.length;e<t;e++){const t=u[e],r=t[0]+o,n=t[1]+o,a=t[2]+o;i.push(r,n,a),s+=3}}this.setIndex(i),this.setAttribute("position",new Qr(r,3)),this.setAttribute("normal",new Qr(n,3)),this.setAttribute("uv",new Qr(a,2))}toJSON(){const e=super.toJSON();return function(e,t){if(t.shapes=[],Array.isArray(e))for(let i=0,r=e.length;i<r;i++){const r=e[i];t.shapes.push(r.uuid)}else t.shapes.push(e.uuid);return t}(this.parameters.shapes,e)}static fromJSON(e,t){const i=[];for(let r=0,n=e.shapes.length;r<n;r++){const n=t[e.shapes[r]];i.push(n)}return new ph(i,e.curveSegments)}}class fh extends jr{constructor(e){super(),this.type="ShadowMaterial",this.color=new yi(0),this.transparent=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this}}fh.prototype.isShadowMaterial=!0;class mh extends Fn{constructor(e){super(e),this.type="RawShaderMaterial"}}mh.prototype.isRawShaderMaterial=!0;class gh extends jr{constructor(e){super(),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new yi(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new yi(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Bt,this.normalScale=new ni(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this}}gh.prototype.isMeshStandardMaterial=!0;class vh extends gh{constructor(e){super(),this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new ni(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return $t(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(e){this.ior=(1+.4*e)/(1-.4*e)}}),this.sheenColor=new yi(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=0,this.attenuationColor=new yi(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new yi(1,1,1),this.specularColorMap=null,this._sheen=0,this._clearcoat=0,this._transmission=0,this.setValues(e)}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.ior=e.ior,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}vh.prototype.isMeshPhysicalMaterial=!0;class yh extends jr{constructor(e){super(),this.type="MeshPhongMaterial",this.color=new yi(16777215),this.specular=new yi(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new yi(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Bt,this.normalScale=new ni(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=ne,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this}}yh.prototype.isMeshPhongMaterial=!0;class xh extends jr{constructor(e){super(),this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new yi(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new yi(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Bt,this.normalScale=new ni(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this}}xh.prototype.isMeshToonMaterial=!0;class _h extends jr{constructor(e){super(),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Bt,this.normalScale=new ni(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}_h.prototype.isMeshNormalMaterial=!0;class wh extends jr{constructor(e){super(),this.type="MeshLambertMaterial",this.color=new yi(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new yi(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=ne,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this}}wh.prototype.isMeshLambertMaterial=!0;class bh extends jr{constructor(e){super(),this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new yi(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Bt,this.normalScale=new ni(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this}}bh.prototype.isMeshMatcapMaterial=!0;class Mh extends Zs{constructor(e){super(),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}Mh.prototype.isLineDashedMaterial=!0;const Sh={ShadowMaterial:fh,SpriteMaterial:_s,RawShaderMaterial:mh,ShaderMaterial:Fn,PointsMaterial:sl,MeshPhysicalMaterial:vh,MeshStandardMaterial:gh,MeshPhongMaterial:yh,MeshToonMaterial:xh,MeshNormalMaterial:_h,MeshLambertMaterial:wh,MeshDepthMaterial:es,MeshDistanceMaterial:ts,MeshBasicMaterial:Xr,MeshMatcapMaterial:bh,LineDashedMaterial:Mh,LineBasicMaterial:Zs,Material:jr};jr.fromType=function(e){return new Sh[e]};const Th={arraySlice:function(e,t,i){return Th.isTypedArray(e)?new e.constructor(e.subarray(t,void 0!==i?i:e.length)):e.slice(t,i)},convertArray:function(e,t,i){return!e||!i&&e.constructor===t?e:"number"==typeof t.BYTES_PER_ELEMENT?new t(e):Array.prototype.slice.call(e)},isTypedArray:function(e){return ArrayBuffer.isView(e)&&!(e instanceof DataView)},getKeyframeOrder:function(e){const t=e.length,i=new Array(t);for(let e=0;e!==t;++e)i[e]=e;return i.sort(function(t,i){return e[t]-e[i]}),i},sortedArray:function(e,t,i){const r=e.length,n=new e.constructor(r);for(let a=0,o=0;o!==r;++a){const r=i[a]*t;for(let i=0;i!==t;++i)n[o++]=e[r+i]}return n},flattenJSON:function(e,t,i,r){let n=1,a=e[0];for(;void 0!==a&&void 0===a[r];)a=e[n++];if(void 0===a)return;let o=a[r];if(void 0!==o)if(Array.isArray(o))do{void 0!==(o=a[r])&&(t.push(a.time),i.push.apply(i,o)),a=e[n++]}while(void 0!==a);else if(void 0!==o.toArray)do{void 0!==(o=a[r])&&(t.push(a.time),o.toArray(i,i.length)),a=e[n++]}while(void 0!==a);else do{void 0!==(o=a[r])&&(t.push(a.time),i.push(o)),a=e[n++]}while(void 0!==a)},subclip:function(e,t,i,r,n=30){const a=e.clone();a.name=t;const o=[];for(let e=0;e<a.tracks.length;++e){const t=a.tracks[e],s=t.getValueSize(),l=[],h=[];for(let e=0;e<t.times.length;++e){const a=t.times[e]*n;if(!(a<i||a>=r)){l.push(t.times[e]);for(let i=0;i<s;++i)h.push(t.values[e*s+i])}}0!==l.length&&(t.times=Th.convertArray(l,t.times.constructor),t.values=Th.convertArray(h,t.values.constructor),o.push(t))}a.tracks=o;let s=1/0;for(let e=0;e<a.tracks.length;++e)s>a.tracks[e].times[0]&&(s=a.tracks[e].times[0]);for(let e=0;e<a.tracks.length;++e)a.tracks[e].shift(-1*s);return a.resetDuration(),a},makeClipAdditive:function(e,t=0,i=e,r=30){r<=0&&(r=30);const n=i.tracks.length,a=t/r;for(let t=0;t<n;++t){const r=i.tracks[t],n=r.ValueTypeName;if("bool"===n||"string"===n)continue;const o=e.tracks.find(function(e){return e.name===r.name&&e.ValueTypeName===n});if(void 0===o)continue;let s=0;const l=r.getValueSize();r.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(s=l/3);let h=0;const c=o.getValueSize();o.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(h=c/3);const u=r.times.length-1;let d;if(a<=r.times[0]){const e=s,t=l-s;d=Th.arraySlice(r.values,e,t)}else if(a>=r.times[u]){const e=u*l+s,t=e+l-s;d=Th.arraySlice(r.values,e,t)}else{const e=r.createInterpolant(),t=s,i=l-s;e.evaluate(a),d=Th.arraySlice(e.resultBuffer,t,i)}if("quaternion"===n){(new Li).fromArray(d).normalize().conjugate().toArray(d)}const p=o.times.length;for(let e=0;e<p;++e){const t=e*c+h;if("quaternion"===n)Li.multiplyQuaternionsFlat(o.values,t,d,0,o.values,t);else{const e=c-2*h;for(let i=0;i<e;++i)o.values[t+i]-=d[i]}}}return e.blendMode=Ft,e}};class Eh{constructor(e,t,i,r){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=void 0!==r?r:new t.constructor(i),this.sampleValues=t,this.valueSize=i,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let i=this._cachedIndex,r=t[i],n=t[i-1];e:{t:{let a;i:{r:if(!(e<r)){for(let a=i+2;;){if(void 0===r){if(e<n)break r;return i=t.length,this._cachedIndex=i,this.afterEnd_(i-1,e,n)}if(i===a)break;if(n=r,e<(r=t[++i]))break t}a=t.length;break i}if(e>=n)break e;{const o=t[1];e<o&&(i=2,n=o);for(let a=i-2;;){if(void 0===n)return this._cachedIndex=0,this.beforeStart_(0,e,r);if(i===a)break;if(r=n,e>=(n=t[--i-1]))break t}a=i,i=0}}for(;i<a;){const r=i+a>>>1;e<t[r]?a=r:i=r+1}if(r=t[i],void 0===(n=t[i-1]))return this._cachedIndex=0,this.beforeStart_(0,e,r);if(void 0===r)return i=t.length,this._cachedIndex=i,this.afterEnd_(i-1,n,e)}this._cachedIndex=i,this.intervalChanged_(i,n,r)}return this.interpolate_(i,n,e,r)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,i=this.sampleValues,r=this.valueSize,n=e*r;for(let e=0;e!==r;++e)t[e]=i[n+e];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}Eh.prototype.beforeStart_=Eh.prototype.copySampleValue_,Eh.prototype.afterEnd_=Eh.prototype.copySampleValue_;class Ah extends Eh{constructor(e,t,i,r){super(e,t,i,r),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:Lt,endingEnd:Lt}}intervalChanged_(e,t,i){const r=this.parameterPositions;let n=e-2,a=e+1,o=r[n],s=r[a];if(void 0===o)switch(this.getSettings_().endingStart){case Rt:n=e,o=2*t-i;break;case Pt:o=t+r[n=r.length-2]-r[n+1];break;default:n=e,o=i}if(void 0===s)switch(this.getSettings_().endingEnd){case Rt:a=e,s=2*i-t;break;case Pt:a=1,s=i+r[1]-r[0];break;default:a=e-1,s=t}const l=.5*(i-t),h=this.valueSize;this._weightPrev=l/(t-o),this._weightNext=l/(s-i),this._offsetPrev=n*h,this._offsetNext=a*h}interpolate_(e,t,i,r){const n=this.resultBuffer,a=this.sampleValues,o=this.valueSize,s=e*o,l=s-o,h=this._offsetPrev,c=this._offsetNext,u=this._weightPrev,d=this._weightNext,p=(i-t)/(r-t),f=p*p,m=f*p,g=-u*m+2*u*f-u*p,v=(1+u)*m+(-1.5-2*u)*f+(-.5+u)*p+1,y=(-1-d)*m+(1.5+d)*f+.5*p,x=d*m-d*f;for(let e=0;e!==o;++e)n[e]=g*a[h+e]+v*a[l+e]+y*a[s+e]+x*a[c+e];return n}}class Ch extends Eh{constructor(e,t,i,r){super(e,t,i,r)}interpolate_(e,t,i,r){const n=this.resultBuffer,a=this.sampleValues,o=this.valueSize,s=e*o,l=s-o,h=(i-t)/(r-t),c=1-h;for(let e=0;e!==o;++e)n[e]=a[l+e]*c+a[s+e]*h;return n}}class Lh extends Eh{constructor(e,t,i,r){super(e,t,i,r)}interpolate_(e){return this.copySampleValue_(e-1)}}class Rh{constructor(e,t,i,r){if(void 0===e)throw new Error("THREE.KeyframeTrack: track name is undefined");if(void 0===t||0===t.length)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=Th.convertArray(t,this.TimeBufferType),this.values=Th.convertArray(i,this.ValueBufferType),this.setInterpolation(r||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let i;if(t.toJSON!==this.toJSON)i=t.toJSON(e);else{i={name:e.name,times:Th.convertArray(e.times,Array),values:Th.convertArray(e.values,Array)};const t=e.getInterpolation();t!==e.DefaultInterpolation&&(i.interpolation=t)}return i.type=e.ValueTypeName,i}InterpolantFactoryMethodDiscrete(e){return new Lh(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new Ch(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new Ah(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case Et:t=this.InterpolantFactoryMethodDiscrete;break;case At:t=this.InterpolantFactoryMethodLinear;break;case Ct:t=this.InterpolantFactoryMethodSmooth}if(void 0===t){const t="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(e===this.DefaultInterpolation)throw new Error(t);this.setInterpolation(this.DefaultInterpolation)}return console.warn("THREE.KeyframeTrack:",t),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return Et;case this.InterpolantFactoryMethodLinear:return At;case this.InterpolantFactoryMethodSmooth:return Ct}}getValueSize(){return this.values.length/this.times.length}shift(e){if(0!==e){const t=this.times;for(let i=0,r=t.length;i!==r;++i)t[i]+=e}return this}scale(e){if(1!==e){const t=this.times;for(let i=0,r=t.length;i!==r;++i)t[i]*=e}return this}trim(e,t){const i=this.times,r=i.length;let n=0,a=r-1;for(;n!==r&&i[n]<e;)++n;for(;-1!==a&&i[a]>t;)--a;if(++a,0!==n||a!==r){n>=a&&(n=(a=Math.max(a,1))-1);const e=this.getValueSize();this.times=Th.arraySlice(i,n,a),this.values=Th.arraySlice(this.values,n*e,a*e)}return this}validate(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const i=this.times,r=this.values,n=i.length;0===n&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let a=null;for(let t=0;t!==n;t++){const r=i[t];if("number"==typeof r&&isNaN(r)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,t,r),e=!1;break}if(null!==a&&a>r){console.error("THREE.KeyframeTrack: Out of order keys.",this,t,r,a),e=!1;break}a=r}if(void 0!==r&&Th.isTypedArray(r))for(let t=0,i=r.length;t!==i;++t){const i=r[t];if(isNaN(i)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,t,i),e=!1;break}}return e}optimize(){const e=Th.arraySlice(this.times),t=Th.arraySlice(this.values),i=this.getValueSize(),r=this.getInterpolation()===Ct,n=e.length-1;let a=1;for(let o=1;o<n;++o){let n=!1;const s=e[o];if(s!==e[o+1]&&(1!==o||s!==e[0]))if(r)n=!0;else{const e=o*i,r=e-i,a=e+i;for(let o=0;o!==i;++o){const i=t[e+o];if(i!==t[r+o]||i!==t[a+o]){n=!0;break}}}if(n){if(o!==a){e[a]=e[o];const r=o*i,n=a*i;for(let e=0;e!==i;++e)t[n+e]=t[r+e]}++a}}if(n>0){e[a]=e[n];for(let e=n*i,r=a*i,o=0;o!==i;++o)t[r+o]=t[e+o];++a}return a!==e.length?(this.times=Th.arraySlice(e,0,a),this.values=Th.arraySlice(t,0,a*i)):(this.times=e,this.values=t),this}clone(){const e=Th.arraySlice(this.times,0),t=Th.arraySlice(this.values,0),i=new(0,this.constructor)(this.name,e,t);return i.createInterpolant=this.createInterpolant,i}}Rh.prototype.TimeBufferType=Float32Array,Rh.prototype.ValueBufferType=Float32Array,Rh.prototype.DefaultInterpolation=At;class Ph extends Rh{}Ph.prototype.ValueTypeName="bool",Ph.prototype.ValueBufferType=Array,Ph.prototype.DefaultInterpolation=Et,Ph.prototype.InterpolantFactoryMethodLinear=void 0,Ph.prototype.InterpolantFactoryMethodSmooth=void 0;class Dh extends Rh{}Dh.prototype.ValueTypeName="color";class Fh extends Rh{}Fh.prototype.ValueTypeName="number";class zh extends Eh{constructor(e,t,i,r){super(e,t,i,r)}interpolate_(e,t,i,r){const n=this.resultBuffer,a=this.sampleValues,o=this.valueSize,s=(i-t)/(r-t);let l=e*o;for(let e=l+o;l!==e;l+=4)Li.slerpFlat(n,0,a,l-o,a,l,s);return n}}class Ih extends Rh{InterpolantFactoryMethodLinear(e){return new zh(this.times,this.values,this.getValueSize(),e)}}Ih.prototype.ValueTypeName="quaternion",Ih.prototype.DefaultInterpolation=At,Ih.prototype.InterpolantFactoryMethodSmooth=void 0;class Nh extends Rh{}Nh.prototype.ValueTypeName="string",Nh.prototype.ValueBufferType=Array,Nh.prototype.DefaultInterpolation=Et,Nh.prototype.InterpolantFactoryMethodLinear=void 0,Nh.prototype.InterpolantFactoryMethodSmooth=void 0;class Uh extends Rh{}Uh.prototype.ValueTypeName="vector";class Bh{constructor(e,t=-1,i,r=Dt){this.name=e,this.tracks=i,this.duration=t,this.blendMode=r,this.uuid=Qt(),this.duration<0&&this.resetDuration()}static parse(e){const t=[],i=e.tracks,r=1/(e.fps||1);for(let e=0,n=i.length;e!==n;++e)t.push(Oh(i[e]).scale(r));const n=new this(e.name,e.duration,t,e.blendMode);return n.uuid=e.uuid,n}static toJSON(e){const t=[],i=e.tracks,r={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let e=0,r=i.length;e!==r;++e)t.push(Rh.toJSON(i[e]));return r}static CreateFromMorphTargetSequence(e,t,i,r){const n=t.length,a=[];for(let e=0;e<n;e++){let o=[],s=[];o.push((e+n-1)%n,e,(e+1)%n),s.push(0,1,0);const l=Th.getKeyframeOrder(o);o=Th.sortedArray(o,1,l),s=Th.sortedArray(s,1,l),r||0!==o[0]||(o.push(n),s.push(s[0])),a.push(new Fh(".morphTargetInfluences["+t[e].name+"]",o,s).scale(1/i))}return new this(e,-1,a)}static findByName(e,t){let i=e;if(!Array.isArray(e)){const t=e;i=t.geometry&&t.geometry.animations||t.animations}for(let e=0;e<i.length;e++)if(i[e].name===t)return i[e];return null}static CreateClipsFromMorphTargetSequences(e,t,i){const r={},n=/^([\w-]*?)([\d]+)$/;for(let t=0,i=e.length;t<i;t++){const i=e[t],a=i.name.match(n);if(a&&a.length>1){const e=a[1];let t=r[e];t||(r[e]=t=[]),t.push(i)}}const a=[];for(const e in r)a.push(this.CreateFromMorphTargetSequence(e,r[e],t,i));return a}static parseAnimation(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const i=function(e,t,i,r,n){if(0!==i.length){const a=[],o=[];Th.flattenJSON(i,a,o,r),0!==a.length&&n.push(new e(t,a,o))}},r=[],n=e.name||"default",a=e.fps||30,o=e.blendMode;let s=e.length||-1;const l=e.hierarchy||[];for(let e=0;e<l.length;e++){const n=l[e].keys;if(n&&0!==n.length)if(n[0].morphTargets){const e={};let t;for(t=0;t<n.length;t++)if(n[t].morphTargets)for(let i=0;i<n[t].morphTargets.length;i++)e[n[t].morphTargets[i]]=-1;for(const i in e){const e=[],a=[];for(let r=0;r!==n[t].morphTargets.length;++r){const r=n[t];e.push(r.time),a.push(r.morphTarget===i?1:0)}r.push(new Fh(".morphTargetInfluence["+i+"]",e,a))}s=e.length*a}else{const a=".bones["+t[e].name+"]";i(Uh,a+".position",n,"pos",r),i(Ih,a+".quaternion",n,"rot",r),i(Uh,a+".scale",n,"scl",r)}}return 0===r.length?null:new this(n,s,r,o)}resetDuration(){let e=0;for(let t=0,i=this.tracks.length;t!==i;++t){const i=this.tracks[t];e=Math.max(e,i.times[i.times.length-1])}return this.duration=e,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function Oh(e){if(void 0===e.type)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const t=function(e){switch(e.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Fh;case"vector":case"vector2":case"vector3":case"vector4":return Uh;case"color":return Dh;case"quaternion":return Ih;case"bool":case"boolean":return Ph;case"string":return Nh}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+e)}(e.type);if(void 0===e.times){const t=[],i=[];Th.flattenJSON(e.keys,t,i,"value"),e.times=t,e.values=i}return void 0!==t.parse?t.parse(e):new t(e.name,e.times,e.values,e.interpolation)}const Vh={enabled:!1,files:{},add:function(e,t){!1!==this.enabled&&(this.files[e]=t)},get:function(e){if(!1!==this.enabled)return this.files[e]},remove:function(e){delete this.files[e]},clear:function(){this.files={}}};class Hh{constructor(e,t,i){const r=this;let n=!1,a=0,o=0,s=void 0;const l=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=i,this.itemStart=function(e){o++,!1===n&&void 0!==r.onStart&&r.onStart(e,a,o),n=!0},this.itemEnd=function(e){a++,void 0!==r.onProgress&&r.onProgress(e,a,o),a===o&&(n=!1,void 0!==r.onLoad&&r.onLoad())},this.itemError=function(e){void 0!==r.onError&&r.onError(e)},this.resolveURL=function(e){return s?s(e):e},this.setURLModifier=function(e){return s=e,this},this.addHandler=function(e,t){return l.push(e,t),this},this.removeHandler=function(e){const t=l.indexOf(e);return-1!==t&&l.splice(t,2),this},this.getHandler=function(e){for(let t=0,i=l.length;t<i;t+=2){const i=l[t],r=l[t+1];if(i.global&&(i.lastIndex=0),i.test(e))return r}return null}}}const Gh=new Hh;class kh{constructor(e){this.manager=void 0!==e?e:Gh,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const i=this;return new Promise(function(r,n){i.load(e,r,t,n)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}const Wh={};class jh extends kh{constructor(e){super(e)}load(e,t,i,r){void 0===e&&(e=""),void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);const n=Vh.get(e);if(void 0!==n)return this.manager.itemStart(e),setTimeout(()=>{t&&t(n),this.manager.itemEnd(e)},0),n;if(void 0!==Wh[e])return void Wh[e].push({onLoad:t,onProgress:i,onError:r});Wh[e]=[],Wh[e].push({onLoad:t,onProgress:i,onError:r});const a=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),o=this.mimeType,s=this.responseType;fetch(a).then(t=>{if(200===t.status||0===t.status){if(0===t.status&&console.warn("THREE.FileLoader: HTTP Status 0 received."),"undefined"==typeof ReadableStream||void 0===t.body||void 0===t.body.getReader)return t;const i=Wh[e],r=t.body.getReader(),n=t.headers.get("Content-Length"),a=n?parseInt(n):0,o=0!==a;let s=0;const l=new ReadableStream({start(e){!function t(){r.read().then(({done:r,value:n})=>{if(r)e.close();else{s+=n.byteLength;const r=new ProgressEvent("progress",{lengthComputable:o,loaded:s,total:a});for(let e=0,t=i.length;e<t;e++){const t=i[e];t.onProgress&&t.onProgress(r)}e.enqueue(n),t()}})}()}});return new Response(l)}throw Error(`fetch for "${t.url}" responded with ${t.status}: ${t.statusText}`)}).then(e=>{switch(s){case"arraybuffer":return e.arrayBuffer();case"blob":return e.blob();case"document":return e.text().then(e=>{return(new DOMParser).parseFromString(e,o)});case"json":return e.json();default:if(void 0===o)return e.text();{const t=/charset="?([^;"\s]*)"?/i.exec(o),i=t&&t[1]?t[1].toLowerCase():void 0,r=new TextDecoder(i);return e.arrayBuffer().then(e=>r.decode(e))}}}).then(t=>{Vh.add(e,t);const i=Wh[e];delete Wh[e];for(let e=0,r=i.length;e<r;e++){const r=i[e];r.onLoad&&r.onLoad(t)}}).catch(t=>{const i=Wh[e];if(void 0===i)throw this.manager.itemError(e),t;delete Wh[e];for(let e=0,r=i.length;e<r;e++){const r=i[e];r.onError&&r.onError(t)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class Xh extends kh{constructor(e){super(e)}load(e,t,i,r){void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);const n=this,a=Vh.get(e);if(void 0!==a)return n.manager.itemStart(e),setTimeout(function(){t&&t(a),n.manager.itemEnd(e)},0),a;const o=si("img");function s(){h(),Vh.add(e,this),t&&t(this),n.manager.itemEnd(e)}function l(t){h(),r&&r(t),n.manager.itemError(e),n.manager.itemEnd(e)}function h(){o.removeEventListener("load",s,!1),o.removeEventListener("error",l,!1)}return o.addEventListener("load",s,!1),o.addEventListener("error",l,!1),"data:"!==e.slice(0,5)&&void 0!==this.crossOrigin&&(o.crossOrigin=this.crossOrigin),n.manager.itemStart(e),o.src=e,o}}class qh extends Dr{constructor(e,t=1){super(),this.type="Light",this.color=new yi(e),this.intensity=t}dispose(){}copy(e){return super.copy(e),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,void 0!==this.groundColor&&(t.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(t.object.distance=this.distance),void 0!==this.angle&&(t.object.angle=this.angle),void 0!==this.decay&&(t.object.decay=this.decay),void 0!==this.penumbra&&(t.object.penumbra=this.penumbra),void 0!==this.shadow&&(t.object.shadow=this.shadow.toJSON()),t}}qh.prototype.isLight=!0;class Yh extends qh{constructor(e,t,i){super(e,i),this.type="HemisphereLight",this.position.copy(Dr.DefaultUp),this.updateMatrix(),this.groundColor=new yi(t)}copy(e){return qh.prototype.copy.call(this,e),this.groundColor.copy(e.groundColor),this}}Yh.prototype.isHemisphereLight=!0;const Kh=new sr,Zh=new Ri,Jh=new Ri;class Qh{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new ni(512,512),this.map=null,this.mapPass=null,this.matrix=new sr,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new qn,this._frameExtents=new ni(1,1),this._viewportCount=1,this._viewports=[new Ti(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,i=this.matrix;Zh.setFromMatrixPosition(e.matrixWorld),t.position.copy(Zh),Jh.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(Jh),t.updateMatrixWorld(),Kh.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Kh),i.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),i.multiply(t.projectionMatrix),i.multiply(t.matrixWorldInverse)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return(new this.constructor).copy(this)}toJSON(){const e={};return 0!==this.bias&&(e.bias=this.bias),0!==this.normalBias&&(e.normalBias=this.normalBias),1!==this.radius&&(e.radius=this.radius),512===this.mapSize.x&&512===this.mapSize.y||(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class $h extends Qh{constructor(){super(new In(50,1,.5,500)),this.focus=1}updateMatrices(e){const t=this.camera,i=2*Jt*e.angle*this.focus,r=this.mapSize.width/this.mapSize.height,n=e.distance||t.far;i===t.fov&&r===t.aspect&&n===t.far||(t.fov=i,t.aspect=r,t.far=n,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}$h.prototype.isSpotLightShadow=!0;class ec extends qh{constructor(e,t,i=0,r=Math.PI/3,n=0,a=1){super(e,t),this.type="SpotLight",this.position.copy(Dr.DefaultUp),this.updateMatrix(),this.target=new Dr,this.distance=i,this.angle=r,this.penumbra=n,this.decay=a,this.shadow=new $h}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}ec.prototype.isSpotLight=!0;const tc=new sr,ic=new Ri,rc=new Ri;class nc extends Qh{constructor(){super(new In(90,1,.5,500)),this._frameExtents=new ni(4,2),this._viewportCount=6,this._viewports=[new Ti(2,1,1,1),new Ti(0,1,1,1),new Ti(3,1,1,1),new Ti(1,1,1,1),new Ti(3,0,1,1),new Ti(1,0,1,1)],this._cubeDirections=[new Ri(1,0,0),new Ri(-1,0,0),new Ri(0,0,1),new Ri(0,0,-1),new Ri(0,1,0),new Ri(0,-1,0)],this._cubeUps=[new Ri(0,1,0),new Ri(0,1,0),new Ri(0,1,0),new Ri(0,1,0),new Ri(0,0,1),new Ri(0,0,-1)]}updateMatrices(e,t=0){const i=this.camera,r=this.matrix,n=e.distance||i.far;n!==i.far&&(i.far=n,i.updateProjectionMatrix()),ic.setFromMatrixPosition(e.matrixWorld),i.position.copy(ic),rc.copy(i.position),rc.add(this._cubeDirections[t]),i.up.copy(this._cubeUps[t]),i.lookAt(rc),i.updateMatrixWorld(),r.makeTranslation(-ic.x,-ic.y,-ic.z),tc.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),this._frustum.setFromProjectionMatrix(tc)}}nc.prototype.isPointLightShadow=!0;class ac extends qh{constructor(e,t,i=0,r=1){super(e,t),this.type="PointLight",this.distance=i,this.decay=r,this.shadow=new nc}get power(){return 4*this.intensity*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}ac.prototype.isPointLight=!0;class oc extends Qh{constructor(){super(new ta(-5,5,5,-5,.5,500))}}oc.prototype.isDirectionalLightShadow=!0;class sc extends qh{constructor(e,t){super(e,t),this.type="DirectionalLight",this.position.copy(Dr.DefaultUp),this.updateMatrix(),this.target=new Dr,this.shadow=new oc}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}sc.prototype.isDirectionalLight=!0;class lc extends qh{constructor(e,t){super(e,t),this.type="AmbientLight"}}lc.prototype.isAmbientLight=!0;class hc extends qh{constructor(e,t,i=10,r=10){super(e,t),this.type="RectAreaLight",this.width=i,this.height=r}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}hc.prototype.isRectAreaLight=!0;class cc{constructor(){this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new Ri)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const i=e.x,r=e.y,n=e.z,a=this.coefficients;return t.copy(a[0]).multiplyScalar(.282095),t.addScaledVector(a[1],.488603*r),t.addScaledVector(a[2],.488603*n),t.addScaledVector(a[3],.488603*i),t.addScaledVector(a[4],i*r*1.092548),t.addScaledVector(a[5],r*n*1.092548),t.addScaledVector(a[6],.315392*(3*n*n-1)),t.addScaledVector(a[7],i*n*1.092548),t.addScaledVector(a[8],.546274*(i*i-r*r)),t}getIrradianceAt(e,t){const i=e.x,r=e.y,n=e.z,a=this.coefficients;return t.copy(a[0]).multiplyScalar(.886227),t.addScaledVector(a[1],1.023328*r),t.addScaledVector(a[2],1.023328*n),t.addScaledVector(a[3],1.023328*i),t.addScaledVector(a[4],.858086*i*r),t.addScaledVector(a[5],.858086*r*n),t.addScaledVector(a[6],.743125*n*n-.247708),t.addScaledVector(a[7],.858086*i*n),t.addScaledVector(a[8],.429043*(i*i-r*r)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let i=0;i<9;i++)this.coefficients[i].addScaledVector(e.coefficients[i],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let i=0;i<9;i++)this.coefficients[i].lerp(e.coefficients[i],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return(new this.constructor).copy(this)}fromArray(e,t=0){const i=this.coefficients;for(let r=0;r<9;r++)i[r].fromArray(e,t+3*r);return this}toArray(e=[],t=0){const i=this.coefficients;for(let r=0;r<9;r++)i[r].toArray(e,t+3*r);return e}static getBasisAt(e,t){const i=e.x,r=e.y,n=e.z;t[0]=.282095,t[1]=.488603*r,t[2]=.488603*n,t[3]=.488603*i,t[4]=1.092548*i*r,t[5]=1.092548*r*n,t[6]=.315392*(3*n*n-1),t[7]=1.092548*i*n,t[8]=.546274*(i*i-r*r)}}cc.prototype.isSphericalHarmonics3=!0;class uc extends qh{constructor(e=new cc,t=1){super(void 0,t),this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}uc.prototype.isLightProbe=!0;class dc{static decodeText(e){if("undefined"!=typeof TextDecoder)return(new TextDecoder).decode(e);let t="";for(let i=0,r=e.length;i<r;i++)t+=String.fromCharCode(e[i]);try{return decodeURIComponent(escape(t))}catch(e){return t}}static extractUrlBase(e){const t=e.lastIndexOf("/");return-1===t?"./":e.slice(0,t+1)}static resolveURL(e,t){return"string"!=typeof e||""===e?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)?e:/^data:.*,.*$/i.test(e)?e:/^blob:.*$/i.test(e)?e:t+e)}}class pc extends sn{constructor(){super(),this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}clone(){return(new this.constructor).copy(this)}toJSON(){const e=super.toJSON(this);return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}pc.prototype.isInstancedBufferGeometry=!0;let fc;(class extends kh{constructor(e){super(e),"undefined"==typeof createImageBitmap&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),"undefined"==typeof fetch&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(e,t,i,r){void 0===e&&(e=""),void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);const n=this,a=Vh.get(e);if(void 0!==a)return n.manager.itemStart(e),setTimeout(function(){t&&t(a),n.manager.itemEnd(e)},0),a;const o={};o.credentials="anonymous"===this.crossOrigin?"same-origin":"include",o.headers=this.requestHeader,fetch(e,o).then(function(e){return e.blob()}).then(function(e){return createImageBitmap(e,Object.assign(n.options,{colorSpaceConversion:"none"}))}).then(function(i){Vh.add(e,i),t&&t(i),n.manager.itemEnd(e)}).catch(function(t){r&&r(t),n.manager.itemError(e),n.manager.itemEnd(e)}),n.manager.itemStart(e)}}).prototype.isImageBitmapLoader=!0;const mc={getContext:function(){return void 0===fc&&(fc=new(window.AudioContext||window.webkitAudioContext)),fc},setContext:function(e){fc=e}};(class extends uc{constructor(e,t,i=1){super(void 0,i);const r=(new yi).set(e),n=(new yi).set(t),a=new Ri(r.r,r.g,r.b),o=new Ri(n.r,n.g,n.b),s=Math.sqrt(Math.PI),l=s*Math.sqrt(.75);this.sh.coefficients[0].copy(a).add(o).multiplyScalar(s),this.sh.coefficients[1].copy(a).sub(o).multiplyScalar(l)}}).prototype.isHemisphereLightProbe=!0;(class extends uc{constructor(e,t=1){super(void 0,t);const i=(new yi).set(e);this.sh.coefficients[0].set(i.r,i.g,i.b).multiplyScalar(2*Math.sqrt(Math.PI))}}).prototype.isAmbientLightProbe=!0;class gc{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=vc(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=vc();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}function vc(){return("undefined"==typeof performance?Date:performance).now()}class yc extends Dr{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(!0===this.isPlaying)return void console.warn("THREE.Audio: Audio is already playing.");if(!1===this.hasPlaybackControl)return void console.warn("THREE.Audio: this Audio has no playback control.");this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(!1!==this.hasPlaybackControl)return!0===this.isPlaying&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,!0===this.loop&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this;console.warn("THREE.Audio: this Audio has no playback control.")}stop(){if(!1!==this.hasPlaybackControl)return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this;console.warn("THREE.Audio: this Audio has no playback control.")}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(e){return e||(e=[]),!0===this._connected?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){if(this.detune=e,void 0!==this.source.detune)return!0===this.isPlaying&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(!1!==this.hasPlaybackControl)return this.playbackRate=e,!0===this.isPlaying&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this;console.warn("THREE.Audio: this Audio has no playback control.")}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(!1!==this.hasPlaybackControl)return this.loop=e,!0===this.isPlaying&&(this.source.loop=this.loop),this;console.warn("THREE.Audio: this Audio has no playback control.")}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}class xc{constructor(e,t,i){let r,n,a;switch(this.binding=e,this.valueSize=i,t){case"quaternion":r=this._slerp,n=this._slerpAdditive,a=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(6*i),this._workIndex=5;break;case"string":case"bool":r=this._select,n=this._select,a=this._setAdditiveIdentityOther,this.buffer=new Array(5*i);break;default:r=this._lerp,n=this._lerpAdditive,a=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(5*i)}this._mixBufferRegion=r,this._mixBufferRegionAdditive=n,this._setIdentity=a,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){const i=this.buffer,r=this.valueSize,n=e*r+r;let a=this.cumulativeWeight;if(0===a){for(let e=0;e!==r;++e)i[n+e]=i[e];a=t}else{const e=t/(a+=t);this._mixBufferRegion(i,n,0,e,r)}this.cumulativeWeight=a}accumulateAdditive(e){const t=this.buffer,i=this.valueSize,r=i*this._addIndex;0===this.cumulativeWeightAdditive&&this._setIdentity(),this._mixBufferRegionAdditive(t,r,0,e,i),this.cumulativeWeightAdditive+=e}apply(e){const t=this.valueSize,i=this.buffer,r=e*t+t,n=this.cumulativeWeight,a=this.cumulativeWeightAdditive,o=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,n<1){const e=t*this._origIndex;this._mixBufferRegion(i,r,e,1-n,t)}a>0&&this._mixBufferRegionAdditive(i,r,this._addIndex*t,1,t);for(let e=t,n=t+t;e!==n;++e)if(i[e]!==i[e+t]){o.setValue(i,r);break}}saveOriginalState(){const e=this.binding,t=this.buffer,i=this.valueSize,r=i*this._origIndex;e.getValue(t,r);for(let e=i,n=r;e!==n;++e)t[e]=t[r+e%i];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const e=3*this.valueSize;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){const e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let i=e;i<t;i++)this.buffer[i]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let i=0;i<this.valueSize;i++)this.buffer[t+i]=this.buffer[e+i]}_select(e,t,i,r,n){if(r>=.5)for(let r=0;r!==n;++r)e[t+r]=e[i+r]}_slerp(e,t,i,r){Li.slerpFlat(e,t,e,t,e,i,r)}_slerpAdditive(e,t,i,r,n){const a=this._workIndex*n;Li.multiplyQuaternionsFlat(e,a,e,t,e,i),Li.slerpFlat(e,t,e,t,e,a,r)}_lerp(e,t,i,r,n){const a=1-r;for(let o=0;o!==n;++o){const n=t+o;e[n]=e[n]*a+e[i+o]*r}}_lerpAdditive(e,t,i,r,n){for(let a=0;a!==n;++a){const n=t+a;e[n]=e[n]+e[i+a]*r}}}const _c=new RegExp("[\\[\\]\\.:\\/]","g"),wc="[^"+"\\[\\]\\.:\\/".replace("\\.","")+"]",bc=/((?:WC+[\/:])*)/.source.replace("WC","[^\\[\\]\\.:\\/]"),Mc=/(WCOD+)?/.source.replace("WCOD",wc),Sc=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC","[^\\[\\]\\.:\\/]"),Tc=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC","[^\\[\\]\\.:\\/]"),Ec=new RegExp("^"+bc+Mc+Sc+Tc+"$"),Ac=["material","materials","bones"];class Cc{constructor(e,t,i){this.path=t,this.parsedPath=i||Cc.parseTrackName(t),this.node=Cc.findNode(e,this.parsedPath.nodeName)||e,this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,i){return e&&e.isAnimationObjectGroup?new Cc.Composite(e,t,i):new Cc(e,t,i)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(_c,"")}static parseTrackName(e){const t=Ec.exec(e);if(null===t)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const i={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},r=i.nodeName&&i.nodeName.lastIndexOf(".");if(void 0!==r&&-1!==r){const e=i.nodeName.substring(r+1);-1!==Ac.indexOf(e)&&(i.nodeName=i.nodeName.substring(0,r),i.objectName=e)}if(null===i.propertyName||0===i.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return i}static findNode(e,t){if(void 0===t||""===t||"."===t||-1===t||t===e.name||t===e.uuid)return e;if(e.skeleton){const i=e.skeleton.getBoneByName(t);if(void 0!==i)return i}if(e.children){const i=function(e){for(let r=0;r<e.length;r++){const n=e[r];if(n.name===t||n.uuid===t)return n;const a=i(n.children);if(a)return a}return null},r=i(e.children);if(r)return r}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){const i=this.resolvedProperty;for(let r=0,n=i.length;r!==n;++r)e[t++]=i[r]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){const i=this.resolvedProperty;for(let r=0,n=i.length;r!==n;++r)i[r]=e[t++]}_setValue_array_setNeedsUpdate(e,t){const i=this.resolvedProperty;for(let r=0,n=i.length;r!==n;++r)i[r]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){const i=this.resolvedProperty;for(let r=0,n=i.length;r!==n;++r)i[r]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node;const t=this.parsedPath,i=t.objectName,r=t.propertyName;let n=t.propertyIndex;if(e||(e=Cc.findNode(this.rootNode,t.nodeName)||this.rootNode,this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e)return void console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");if(i){let r=t.objectIndex;switch(i){case"materials":if(!e.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!e.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);e=e.material.materials;break;case"bones":if(!e.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);e=e.skeleton.bones;for(let t=0;t<e.length;t++)if(e[t].name===r){r=t;break}break;default:if(void 0===e[i])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);e=e[i]}if(void 0!==r){if(void 0===e[r])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);e=e[r]}}const a=e[r];if(void 0===a){const i=t.nodeName;return void console.error("THREE.PropertyBinding: Trying to update property for track: "+i+"."+r+" but it wasn't found.",e)}let o=this.Versioning.None;this.targetObject=e,void 0!==e.needsUpdate?o=this.Versioning.NeedsUpdate:void 0!==e.matrixWorldNeedsUpdate&&(o=this.Versioning.MatrixWorldNeedsUpdate);let s=this.BindingType.Direct;if(void 0!==n){if("morphTargetInfluences"===r){if(!e.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(!e.geometry.isBufferGeometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.",this);if(!e.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);void 0!==e.morphTargetDictionary[n]&&(n=e.morphTargetDictionary[n])}s=this.BindingType.ArrayElement,this.resolvedProperty=a,this.propertyIndex=n}else void 0!==a.fromArray&&void 0!==a.toArray?(s=this.BindingType.HasFromToArray,this.resolvedProperty=a):Array.isArray(a)?(s=this.BindingType.EntireArray,this.resolvedProperty=a):this.propertyName=r;this.getValue=this.GetterByBindingType[s],this.setValue=this.SetterByBindingTypeAndVersioning[s][o]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}Cc.Composite=class{constructor(e,t,i){const r=i||Cc.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,r)}getValue(e,t){this.bind();const i=this._targetGroup.nCachedObjects_,r=this._bindings[i];void 0!==r&&r.getValue(e,t)}setValue(e,t){const i=this._bindings;for(let r=this._targetGroup.nCachedObjects_,n=i.length;r!==n;++r)i[r].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,i=e.length;t!==i;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,i=e.length;t!==i;++t)e[t].unbind()}},Cc.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Cc.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},Cc.prototype.GetterByBindingType=[Cc.prototype._getValue_direct,Cc.prototype._getValue_array,Cc.prototype._getValue_arrayElement,Cc.prototype._getValue_toArray],Cc.prototype.SetterByBindingTypeAndVersioning=[[Cc.prototype._setValue_direct,Cc.prototype._setValue_direct_setNeedsUpdate,Cc.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[Cc.prototype._setValue_array,Cc.prototype._setValue_array_setNeedsUpdate,Cc.prototype._setValue_array_setMatrixWorldNeedsUpdate],[Cc.prototype._setValue_arrayElement,Cc.prototype._setValue_arrayElement_setNeedsUpdate,Cc.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[Cc.prototype._setValue_fromArray,Cc.prototype._setValue_fromArray_setNeedsUpdate,Cc.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];(class{constructor(){this.uuid=Qt(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const e={};this._indicesByUUID=e;for(let t=0,i=arguments.length;t!==i;++t)e[arguments[t].uuid]=t;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const t=this;this.stats={objects:{get total(){return t._objects.length},get inUse(){return this.total-t.nCachedObjects_}},get bindingsPerObject(){return t._bindings.length}}}add(){const e=this._objects,t=this._indicesByUUID,i=this._paths,r=this._parsedPaths,n=this._bindings,a=n.length;let o=void 0,s=e.length,l=this.nCachedObjects_;for(let h=0,c=arguments.length;h!==c;++h){const c=arguments[h],u=c.uuid;let d=t[u];if(void 0===d){d=s++,t[u]=d,e.push(c);for(let e=0,t=a;e!==t;++e)n[e].push(new Cc(c,i[e],r[e]))}else if(d<l){o=e[d];const s=--l,h=e[s];t[h.uuid]=d,e[d]=h,t[u]=s,e[s]=c;for(let e=0,t=a;e!==t;++e){const t=n[e],a=t[s];let o=t[d];t[d]=a,void 0===o&&(o=new Cc(c,i[e],r[e])),t[s]=o}}else e[d]!==o&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=l}remove(){const e=this._objects,t=this._indicesByUUID,i=this._bindings,r=i.length;let n=this.nCachedObjects_;for(let a=0,o=arguments.length;a!==o;++a){const o=arguments[a],s=o.uuid,l=t[s];if(void 0!==l&&l>=n){const a=n++,h=e[a];t[h.uuid]=l,e[l]=h,t[s]=a,e[a]=o;for(let e=0,t=r;e!==t;++e){const t=i[e],r=t[a],n=t[l];t[l]=r,t[a]=n}}}this.nCachedObjects_=n}uncache(){const e=this._objects,t=this._indicesByUUID,i=this._bindings,r=i.length;let n=this.nCachedObjects_,a=e.length;for(let o=0,s=arguments.length;o!==s;++o){const s=arguments[o].uuid,l=t[s];if(void 0!==l)if(delete t[s],l<n){const o=--n,s=e[o],h=--a,c=e[h];t[s.uuid]=l,e[l]=s,t[c.uuid]=o,e[o]=c,e.pop();for(let e=0,t=r;e!==t;++e){const t=i[e],r=t[o],n=t[h];t[l]=r,t[o]=n,t.pop()}}else{const n=--a,o=e[n];n>0&&(t[o.uuid]=l),e[l]=o,e.pop();for(let e=0,t=r;e!==t;++e){const t=i[e];t[l]=t[n],t.pop()}}}this.nCachedObjects_=n}subscribe_(e,t){const i=this._bindingsIndicesByPath;let r=i[e];const n=this._bindings;if(void 0!==r)return n[r];const a=this._paths,o=this._parsedPaths,s=this._objects,l=s.length,h=this.nCachedObjects_,c=new Array(l);r=n.length,i[e]=r,a.push(e),o.push(t),n.push(c);for(let i=h,r=s.length;i!==r;++i){const r=s[i];c[i]=new Cc(r,e,t)}return c}unsubscribe_(e){const t=this._bindingsIndicesByPath,i=t[e];if(void 0!==i){const r=this._paths,n=this._parsedPaths,a=this._bindings,o=a.length-1,s=a[o];t[e[o]]=i,a[i]=s,a.pop(),n[i]=n[o],n.pop(),r[i]=r[o],r.pop()}}}).prototype.isAnimationObjectGroup=!0;class Lc{constructor(e,t,i=null,r=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=i,this.blendMode=r;const n=t.tracks,a=n.length,o=new Array(a),s={endingStart:Lt,endingEnd:Lt};for(let e=0;e!==a;++e){const t=n[e].createInterpolant(null);o[e]=t,t.settings=s}this._interpolantSettings=s,this._interpolants=o,this._propertyBindings=new Array(a),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=St,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,i){if(e.fadeOut(t),this.fadeIn(t),i){const i=this._clip.duration,r=e._clip.duration,n=r/i,a=i/r;e.warp(1,n,t),this.warp(a,1,t)}return this}crossFadeTo(e,t,i){return e.crossFadeFrom(this,t,i)}stopFading(){const e=this._weightInterpolant;return null!==e&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,i){const r=this._mixer,n=r.time,a=this.timeScale;let o=this._timeScaleInterpolant;null===o&&(o=r._lendControlInterpolant(),this._timeScaleInterpolant=o);const s=o.parameterPositions,l=o.sampleValues;return s[0]=n,s[1]=n+i,l[0]=e/a,l[1]=t/a,this}stopWarping(){const e=this._timeScaleInterpolant;return null!==e&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,i,r){if(!this.enabled)return void this._updateWeight(e);const n=this._startTime;if(null!==n){const r=(e-n)*i;if(r<0||0===i)return;this._startTime=null,t=i*r}t*=this._updateTimeScale(e);const a=this._updateTime(t),o=this._updateWeight(e);if(o>0){const e=this._interpolants,t=this._propertyBindings;switch(this.blendMode){case Ft:for(let i=0,r=e.length;i!==r;++i)e[i].evaluate(a),t[i].accumulateAdditive(o);break;case Dt:default:for(let i=0,n=e.length;i!==n;++i)e[i].evaluate(a),t[i].accumulate(r,o)}}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const i=this._weightInterpolant;if(null!==i){const r=i.evaluate(e)[0];t*=r,e>i.parameterPositions[1]&&(this.stopFading(),0===r&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const i=this._timeScaleInterpolant;if(null!==i){t*=i.evaluate(e)[0],e>i.parameterPositions[1]&&(this.stopWarping(),0===t?this.paused=!0:this.timeScale=t)}}return this._effectiveTimeScale=t,t}_updateTime(e){const t=this._clip.duration,i=this.loop;let r=this.time+e,n=this._loopCount;const a=i===Tt;if(0===e)return-1===n?r:a&&1==(1&n)?t-r:r;if(i===Mt){-1===n&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(r>=t)r=t;else{if(!(r<0)){this.time=r;break e}r=0}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=r,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(-1===n&&(e>=0?(n=0,this._setEndings(!0,0===this.repetitions,a)):this._setEndings(0===this.repetitions,!0,a)),r>=t||r<0){const i=Math.floor(r/t);r-=t*i,n+=Math.abs(i);const o=this.repetitions-n;if(o<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,r=e>0?t:0,this.time=r,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(1===o){const t=e<0;this._setEndings(t,!t,a)}else this._setEndings(!1,!1,a);this._loopCount=n,this.time=r,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:i})}}else this.time=r;if(a&&1==(1&n))return t-r}return r}_setEndings(e,t,i){const r=this._interpolantSettings;i?(r.endingStart=Rt,r.endingEnd=Rt):(r.endingStart=e?this.zeroSlopeAtStart?Rt:Lt:Pt,r.endingEnd=t?this.zeroSlopeAtEnd?Rt:Lt:Pt)}_scheduleFading(e,t,i){const r=this._mixer,n=r.time;let a=this._weightInterpolant;null===a&&(a=r._lendControlInterpolant(),this._weightInterpolant=a);const o=a.parameterPositions,s=a.sampleValues;return o[0]=n,s[0]=t,o[1]=n+e,s[1]=i,this}}(class extends Yt{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,t){const i=e._localRoot||this._root,r=e._clip.tracks,n=r.length,a=e._propertyBindings,o=e._interpolants,s=i.uuid,l=this._bindingsByRootAndName;let h=l[s];void 0===h&&(h={},l[s]=h);for(let e=0;e!==n;++e){const n=r[e],l=n.name;let c=h[l];if(void 0!==c)++c.referenceCount,a[e]=c;else{if(void 0!==(c=a[e])){null===c._cacheIndex&&(++c.referenceCount,this._addInactiveBinding(c,s,l));continue}const r=t&&t._propertyBindings[e].binding.parsedPath;++(c=new xc(Cc.create(i,l,r),n.ValueTypeName,n.getValueSize())).referenceCount,this._addInactiveBinding(c,s,l),a[e]=c}o[e].resultBuffer=c.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(null===e._cacheIndex){const t=(e._localRoot||this._root).uuid,i=e._clip.uuid,r=this._actionsByClip[i];this._bindAction(e,r&&r.knownActions[0]),this._addInactiveAction(e,i,t)}const t=e._propertyBindings;for(let e=0,i=t.length;e!==i;++e){const i=t[e];0==i.useCount++&&(this._lendBinding(i),i.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){const t=e._propertyBindings;for(let e=0,i=t.length;e!==i;++e){const i=t[e];0==--i.useCount&&(i.restoreOriginalState(),this._takeBackBinding(i))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){const t=e._cacheIndex;return null!==t&&t<this._nActiveActions}_addInactiveAction(e,t,i){const r=this._actions,n=this._actionsByClip;let a=n[t];if(void 0===a)a={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,n[t]=a;else{const t=a.knownActions;e._byClipCacheIndex=t.length,t.push(e)}e._cacheIndex=r.length,r.push(e),a.actionByRoot[i]=e}_removeInactiveAction(e){const t=this._actions,i=t[t.length-1],r=e._cacheIndex;i._cacheIndex=r,t[r]=i,t.pop(),e._cacheIndex=null;const n=e._clip.uuid,a=this._actionsByClip,o=a[n],s=o.knownActions,l=s[s.length-1],h=e._byClipCacheIndex;l._byClipCacheIndex=h,s[h]=l,s.pop(),e._byClipCacheIndex=null,delete o.actionByRoot[(e._localRoot||this._root).uuid],0===s.length&&delete a[n],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){const t=e._propertyBindings;for(let e=0,i=t.length;e!==i;++e){const i=t[e];0==--i.referenceCount&&this._removeInactiveBinding(i)}}_lendAction(e){const t=this._actions,i=e._cacheIndex,r=this._nActiveActions++,n=t[r];e._cacheIndex=r,t[r]=e,n._cacheIndex=i,t[i]=n}_takeBackAction(e){const t=this._actions,i=e._cacheIndex,r=--this._nActiveActions,n=t[r];e._cacheIndex=r,t[r]=e,n._cacheIndex=i,t[i]=n}_addInactiveBinding(e,t,i){const r=this._bindingsByRootAndName,n=this._bindings;let a=r[t];void 0===a&&(a={},r[t]=a),a[i]=e,e._cacheIndex=n.length,n.push(e)}_removeInactiveBinding(e){const t=this._bindings,i=e.binding,r=i.rootNode.uuid,n=i.path,a=this._bindingsByRootAndName,o=a[r],s=t[t.length-1],l=e._cacheIndex;s._cacheIndex=l,t[l]=s,t.pop(),delete o[n],0===Object.keys(o).length&&delete a[r]}_lendBinding(e){const t=this._bindings,i=e._cacheIndex,r=this._nActiveBindings++,n=t[r];e._cacheIndex=r,t[r]=e,n._cacheIndex=i,t[i]=n}_takeBackBinding(e){const t=this._bindings,i=e._cacheIndex,r=--this._nActiveBindings,n=t[r];e._cacheIndex=r,t[r]=e,n._cacheIndex=i,t[i]=n}_lendControlInterpolant(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let i=e[t];return void 0===i&&((i=new Ch(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer)).__cacheIndex=t,e[t]=i),i}_takeBackControlInterpolant(e){const t=this._controlInterpolants,i=e.__cacheIndex,r=--this._nActiveControlInterpolants,n=t[r];e.__cacheIndex=r,t[r]=e,n.__cacheIndex=i,t[i]=n}clipAction(e,t,i){const r=t||this._root,n=r.uuid;let a="string"==typeof e?Bh.findByName(r,e):e;const o=null!==a?a.uuid:e,s=this._actionsByClip[o];let l=null;if(void 0===i&&(i=null!==a?a.blendMode:Dt),void 0!==s){const e=s.actionByRoot[n];if(void 0!==e&&e.blendMode===i)return e;l=s.knownActions[0],null===a&&(a=l._clip)}if(null===a)return null;const h=new Lc(this,a,t,i);return this._bindAction(h,l),this._addInactiveAction(h,o,n),h}existingAction(e,t){const i=t||this._root,r=i.uuid,n="string"==typeof e?Bh.findByName(i,e):e,a=n?n.uuid:e,o=this._actionsByClip[a];return void 0!==o&&o.actionByRoot[r]||null}stopAllAction(){const e=this._actions;for(let t=this._nActiveActions-1;t>=0;--t)e[t].stop();return this}update(e){e*=this.timeScale;const t=this._actions,i=this._nActiveActions,r=this.time+=e,n=Math.sign(e),a=this._accuIndex^=1;for(let o=0;o!==i;++o)t[o]._update(r,e,n,a);const o=this._bindings,s=this._nActiveBindings;for(let e=0;e!==s;++e)o[e].apply(a);return this}setTime(e){this.time=0;for(let e=0;e<this._actions.length;e++)this._actions[e].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){const t=this._actions,i=e.uuid,r=this._actionsByClip,n=r[i];if(void 0!==n){const e=n.knownActions;for(let i=0,r=e.length;i!==r;++i){const r=e[i];this._deactivateAction(r);const n=r._cacheIndex,a=t[t.length-1];r._cacheIndex=null,r._byClipCacheIndex=null,a._cacheIndex=n,t[n]=a,t.pop(),this._removeInactiveBindingsForAction(r)}delete r[i]}}uncacheRoot(e){const t=e.uuid,i=this._actionsByClip;for(const e in i){const r=i[e].actionByRoot[t];void 0!==r&&(this._deactivateAction(r),this._removeInactiveAction(r))}const r=this._bindingsByRootAndName[t];if(void 0!==r)for(const e in r){const t=r[e];t.restoreOriginalState(),this._removeInactiveBinding(t)}}uncacheAction(e,t){const i=this.existingAction(e,t);null!==i&&(this._deactivateAction(i),this._removeInactiveAction(i))}}).prototype._controlInterpolantsResultBuffer=new Float32Array(1);class Rc{constructor(e){"string"==typeof e&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),e=arguments[1]),this.value=e}clone(){return new Rc(void 0===this.value.clone?this.value:this.value.clone())}}(class extends vs{constructor(e,t,i=1){super(e,t),this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}).prototype.isInstancedInterleavedBuffer=!0;(class{constructor(e,t,i,r,n){this.buffer=e,this.type=t,this.itemSize=i,this.elementSize=r,this.count=n,this.version=0}set needsUpdate(e){!0===e&&this.version++}setBuffer(e){return this.buffer=e,this}setType(e,t){return this.type=e,this.elementSize=t,this}setItemSize(e){return this.itemSize=e,this}setCount(e){return this.count=e,this}}).prototype.isGLBufferAttribute=!0;const Pc=new ni;class Dc{constructor(e=new ni(1/0,1/0),t=new ni(-1/0,-1/0)){this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(e){this.makeEmpty();for(let t=0,i=e.length;t<i;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const i=Pc.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}clone(){return(new this.constructor).copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return Pc.copy(e).clamp(this.min,this.max).sub(e).length()}intersect(e){return this.min.max(e.min),this.max.min(e.max),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}Dc.prototype.isBox2=!0;const Fc=new Ri,zc=new Ri;const Ic=new Ri,Nc=new sr,Uc=new sr;const Bc=new ArrayBuffer(4),Oc=(new Float32Array(Bc),new Uint32Array(Bc),new Uint32Array(512)),Vc=new Uint32Array(512);for(let e=0;e<256;++e){const t=e-127;t<-27?(Oc[e]=0,Oc[256|e]=32768,Vc[e]=24,Vc[256|e]=24):t<-14?(Oc[e]=1024>>-t-14,Oc[256|e]=1024>>-t-14|32768,Vc[e]=-t-1,Vc[256|e]=-t-1):t<=15?(Oc[e]=t+15<<10,Oc[256|e]=t+15<<10|32768,Vc[e]=13,Vc[256|e]=13):t<128?(Oc[e]=31744,Oc[256|e]=64512,Vc[e]=24,Vc[256|e]=24):(Oc[e]=31744,Oc[256|e]=64512,Vc[e]=13,Vc[256|e]=13)}const Hc=new Uint32Array(2048),Gc=new Uint32Array(64),kc=new Uint32Array(64);for(let e=1;e<1024;++e){let t=e<<13,i=0;for(;0==(8388608&t);)t<<=1,i-=8388608;t&=-8388609,i+=947912704,Hc[e]=t|i}for(let e=1024;e<2048;++e)Hc[e]=939524096+(e-1024<<13);for(let e=1;e<31;++e)Gc[e]=e<<23;Gc[31]=1199570944,Gc[32]=2147483648;for(let e=33;e<63;++e)Gc[e]=2147483648+(e-32<<23);Gc[63]=3347054592;for(let e=1;e<64;++e)32!==e&&(kc[e]=1024);ml.create=function(e,t){return console.log("THREE.Curve.create() has been deprecated"),e.prototype=Object.create(ml.prototype),e.prototype.constructor=e,e.prototype.getPoint=t,e},Il.prototype.fromPoints=function(e){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(e)};(class extends al{constructor(e=10,t=10,i=4473924,r=8947848){i=new yi(i),r=new yi(r);const n=t/2,a=e/t,o=e/2,s=[],l=[];for(let e=0,h=0,c=-o;e<=t;e++,c+=a){s.push(-o,0,c,o,0,c),s.push(c,0,-o,c,0,o);const t=e===n?i:r;t.toArray(l,h),h+=3,t.toArray(l,h),h+=3,t.toArray(l,h),h+=3,t.toArray(l,h),h+=3}const h=new sn;h.setAttribute("position",new Qr(s,3)),h.setAttribute("color",new Qr(l,3)),super(h,new Zs({vertexColors:!0,toneMapped:!1})),this.type="GridHelper"}}).prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")},class extends al{constructor(e){const t=function e(t){const i=[];!0===t.isBone&&i.push(t);for(let r=0;r<t.children.length;r++)i.push.apply(i,e(t.children[r]));return i}(e),i=new sn,r=[],n=[],a=new yi(0,0,1),o=new yi(0,1,0);for(let e=0;e<t.length;e++){const i=t[e];i.parent&&i.parent.isBone&&(r.push(0,0,0),r.push(0,0,0),n.push(a.r,a.g,a.b),n.push(o.r,o.g,o.b))}i.setAttribute("position",new Qr(r,3)),i.setAttribute("color",new Qr(n,3)),super(i,new Zs({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0})),this.type="SkeletonHelper",this.isSkeletonHelper=!0,this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){const t=this.bones,i=this.geometry,r=i.getAttribute("position");Uc.copy(this.root.matrixWorld).invert();for(let e=0,i=0;e<t.length;e++){const n=t[e];n.parent&&n.parent.isBone&&(Nc.multiplyMatrices(Uc,n.matrixWorld),Ic.setFromMatrixPosition(Nc),r.setXYZ(i,Ic.x,Ic.y,Ic.z),Nc.multiplyMatrices(Uc,n.parent.matrixWorld),Ic.setFromMatrixPosition(Nc),r.setXYZ(i+1,Ic.x,Ic.y,Ic.z),i+=2)}i.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}}.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")};kh.prototype.extractUrlBase=function(e){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),dc.extractUrlBase(e)},kh.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}};Dc.prototype.center=function(e){return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),this.getCenter(e)},Dc.prototype.empty=function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()},Dc.prototype.isIntersectionBox=function(e){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},Dc.prototype.size=function(e){return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),this.getSize(e)},Fi.prototype.center=function(e){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(e)},Fi.prototype.empty=function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()},Fi.prototype.isIntersectionBox=function(e){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},Fi.prototype.isIntersectionSphere=function(e){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(e)},Fi.prototype.size=function(e){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(e)},vr.prototype.toVector3=function(){console.error("THREE.Euler: .toVector3() has been removed. Use Vector3.setFromEuler() instead")},Qi.prototype.empty=function(){return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."),this.isEmpty()},qn.prototype.setFromMatrix=function(e){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(e)},class{constructor(e=new Ri,t=new Ri){this.start=e,this.end=t}set(e,t){return this.start.copy(e),this.end.copy(t),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){Fc.subVectors(e,this.start),zc.subVectors(this.end,this.start);const i=zc.dot(zc);let r=zc.dot(Fc)/i;return t&&(r=$t(r,0,1)),r}closestPointToPoint(e,t,i){const r=this.closestPointToPointParameter(e,t);return this.delta(i).multiplyScalar(r).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return(new this.constructor).copy(this)}}.prototype.center=function(e){return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."),this.getCenter(e)},ai.prototype.flattenToArrayOffset=function(e,t){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(e,t)},ai.prototype.multiplyVector3=function(e){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},ai.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")},ai.prototype.applyToBufferAttribute=function(e){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},ai.prototype.applyToVector3Array=function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")},ai.prototype.getInverse=function(e){return console.warn("THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(e).invert()},sr.prototype.extractPosition=function(e){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(e)},sr.prototype.flattenToArrayOffset=function(e,t){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(e,t)},sr.prototype.getPosition=function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),(new Ri).setFromMatrixColumn(this,3)},sr.prototype.setRotationFromQuaternion=function(e){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(e)},sr.prototype.multiplyToArray=function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")},sr.prototype.multiplyVector3=function(e){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},sr.prototype.multiplyVector4=function(e){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},sr.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")},sr.prototype.rotateAxis=function(e){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),e.transformDirection(this)},sr.prototype.crossVector=function(e){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},sr.prototype.translate=function(){console.error("THREE.Matrix4: .translate() has been removed.")},sr.prototype.rotateX=function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},sr.prototype.rotateY=function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},sr.prototype.rotateZ=function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},sr.prototype.rotateByAxis=function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},sr.prototype.applyToBufferAttribute=function(e){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},sr.prototype.applyToVector3Array=function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},sr.prototype.makeFrustum=function(e,t,i,r,n,a){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(e,t,r,i,n,a)},sr.prototype.getInverse=function(e){return console.warn("THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(e).invert()},Wn.prototype.isIntersectionLine=function(e){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(e)},Li.prototype.multiplyVector3=function(e){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),e.applyQuaternion(this)},Li.prototype.inverse=function(){return console.warn("THREE.Quaternion: .inverse() has been renamed to invert()."),this.invert()},or.prototype.isIntersectionBox=function(e){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},or.prototype.isIntersectionPlane=function(e){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(e)},or.prototype.isIntersectionSphere=function(e){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(e)},kr.prototype.area=function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()},kr.prototype.barycoordFromPoint=function(e,t){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(e,t)},kr.prototype.midpoint=function(e){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(e)},kr.prototypenormal=function(e){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(e)},kr.prototype.plane=function(e){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(e)},kr.barycoordFromPoint=function(e,t,i,r,n){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),kr.getBarycoord(e,t,i,r,n)},kr.normal=function(e,t,i,r){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),kr.getNormal(e,t,i,r)},Nl.prototype.extractAllPoints=function(e){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(e)},Nl.prototype.extrude=function(e){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new uh(this,e)},Nl.prototype.makeGeometry=function(e){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new ph(this,e)},ni.prototype.fromAttribute=function(e,t,i){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,i)},ni.prototype.distanceToManhattan=function(e){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(e)},ni.prototype.lengthManhattan=function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},Ri.prototype.setEulerFromRotationMatrix=function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},Ri.prototype.setEulerFromQuaternion=function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},Ri.prototype.getPositionFromMatrix=function(e){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(e)},Ri.prototype.getScaleFromMatrix=function(e){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(e)},Ri.prototype.getColumnFromMatrix=function(e,t){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(t,e)},Ri.prototype.applyProjection=function(e){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(e)},Ri.prototype.fromAttribute=function(e,t,i){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,i)},Ri.prototype.distanceToManhattan=function(e){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(e)},Ri.prototype.lengthManhattan=function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},Ti.prototype.fromAttribute=function(e,t,i){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,i)},Ti.prototype.lengthManhattan=function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},Dr.prototype.getChildByName=function(e){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(e)},Dr.prototype.renderDepth=function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},Dr.prototype.translate=function(e,t){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(t,e)},Dr.prototype.getWorldRotation=function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")},Dr.prototype.applyMatrix=function(e){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)},Object.defineProperties(Dr.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(e){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=e}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}}),Tn.prototype.setDrawMode=function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")},Object.defineProperties(Tn.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),0},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}}),Hs.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")},In.prototype.setLens=function(e,t){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),void 0!==t&&(this.filmGauge=t),this.setFocalLength(e)},Object.defineProperties(qh.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(e){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=e}},shadowCameraLeft:{set:function(e){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=e}},shadowCameraRight:{set:function(e){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=e}},shadowCameraTop:{set:function(e){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=e}},shadowCameraBottom:{set:function(e){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=e}},shadowCameraNear:{set:function(e){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=e}},shadowCameraFar:{set:function(e){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=e}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(e){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=e}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(e){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=e}},shadowMapHeight:{set:function(e){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=e}}}),Object.defineProperties(Kr.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.usage===jt},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(jt)}}}),Kr.prototype.setDynamic=function(e){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===e?jt:Wt),this},Kr.prototype.copyIndicesArray=function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},Kr.prototype.setArray=function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")},sn.prototype.addIndex=function(e){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(e)},sn.prototype.addAttribute=function(e,t){return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),t&&t.isBufferAttribute||t&&t.isInterleavedBufferAttribute?"index"===e?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(t),this):this.setAttribute(e,t):(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(e,new Kr(arguments[1],arguments[2])))},sn.prototype.addDrawCall=function(e,t,i){void 0!==i&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(e,t)},sn.prototype.clearDrawCalls=function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},sn.prototype.computeOffsets=function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")},sn.prototype.removeAttribute=function(e){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(e)},sn.prototype.applyMatrix=function(e){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)},Object.defineProperties(sn.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}}),vs.prototype.setDynamic=function(e){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===e?jt:Wt),this},vs.prototype.setArray=function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")},uh.prototype.getArrays=function(){console.error("THREE.ExtrudeGeometry: .getArrays() has been removed.")},uh.prototype.addShapeList=function(){console.error("THREE.ExtrudeGeometry: .addShapeList() has been removed.")},uh.prototype.addShape=function(){console.error("THREE.ExtrudeGeometry: .addShape() has been removed.")},gs.prototype.dispose=function(){console.error("THREE.Scene: .dispose() has been removed.")},Rc.prototype.onUpdate=function(){return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),this},Object.defineProperties(jr.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new yi}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(e){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=e===A}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(e){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=e}},vertexTangents:{get:function(){console.warn("THREE."+this.type+": .vertexTangents has been removed.")},set:function(){console.warn("THREE."+this.type+": .vertexTangents has been removed.")}}}),Object.defineProperties(Fn.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(e){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=e}}}),ps.prototype.clearTarget=function(e,t,i,r){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(e),this.clear(t,i,r)},ps.prototype.animate=function(e){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(e)},ps.prototype.getCurrentRenderTarget=function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()},ps.prototype.getMaxAnisotropy=function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()},ps.prototype.getPrecision=function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision},ps.prototype.resetGLState=function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()},ps.prototype.supportsFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")},ps.prototype.supportsHalfFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")},ps.prototype.supportsStandardDerivatives=function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")},ps.prototype.supportsCompressedTextureS3TC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")},ps.prototype.supportsCompressedTexturePVRTC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")},ps.prototype.supportsBlendMinMax=function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")},ps.prototype.supportsVertexTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures},ps.prototype.supportsInstancedArrays=function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")},ps.prototype.enableScissorTest=function(e){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(e)},ps.prototype.initMaterial=function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},ps.prototype.addPrePlugin=function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},ps.prototype.addPostPlugin=function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},ps.prototype.updateShadowMap=function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")},ps.prototype.setFaceCulling=function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")},ps.prototype.allocTextureUnit=function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")},ps.prototype.setTexture=function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")},ps.prototype.setTexture2D=function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")},ps.prototype.setTextureCube=function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")},ps.prototype.getActiveMipMapLevel=function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()},Object.defineProperties(ps.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=e}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=e}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function(e){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=!0===e?It:zt}},toneMappingWhitePoint:{get:function(){return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."),1},set:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")}},gammaFactor:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaFactor has been removed."),2},set:function(){console.warn("THREE.WebGLRenderer: .gammaFactor has been removed.")}}}),Object.defineProperties(ns.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}});Object.defineProperties(Ei.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(e){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=e}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(e){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=e}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(e){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=e}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(e){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=e}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(e){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=e}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(e){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=e}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(e){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=e}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(e){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=e}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(e){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=e}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(e){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=e}}}),yc.prototype.load=function(e){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");const t=this;return(new class extends kh{constructor(e){super(e)}load(e,t,i,r){const n=this,a=new jh(this.manager);a.setResponseType("arraybuffer"),a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,function(i){try{const a=i.slice(0);mc.getContext().decodeAudioData(a,function(e){t(e)})}catch(t){r?r(t):console.error(t),n.manager.itemError(e)}},i,r)}}).load(e,function(e){t.setBuffer(e)}),this},class{constructor(e,t=2048){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let e=0;const t=this.getFrequencyData();for(let i=0;i<t.length;i++)e+=t[i];return e/t.length}}.prototype.getData=function(){return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."),this.getFrequencyData()},Bn.prototype.updateCubeMap=function(e,t){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(e,t)},Bn.prototype.clear=function(e,t,i,r){return console.warn("THREE.CubeCamera: .clear() is now .renderTarget.clear()."),this.renderTarget.clear(e,t,i,r)},_i.crossOrigin=void 0,_i.loadTexture=function(e,t,i,r){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");const n=new class extends kh{constructor(e){super(e)}load(e,t,i,r){const n=new Si,a=new Xh(this.manager);return a.setCrossOrigin(this.crossOrigin),a.setPath(this.path),a.load(e,function(e){n.image=e,n.needsUpdate=!0,void 0!==t&&t(n)},i,r),n}};n.setCrossOrigin(this.crossOrigin);const a=n.load(e,i,void 0,r);return t&&(a.mapping=t),a},_i.loadTextureCube=function(e,t,i,r){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");const n=new class extends kh{constructor(e){super(e)}load(e,t,i,r){const n=new On,a=new Xh(this.manager);a.setCrossOrigin(this.crossOrigin),a.setPath(this.path);let o=0;function s(i){a.load(e[i],function(e){n.images[i]=e,6==++o&&(n.needsUpdate=!0,t&&t(n))},void 0,r)}for(let t=0;t<e.length;++t)s(t);return n}};n.setCrossOrigin(this.crossOrigin);const a=n.load(e,i,void 0,r);return t&&(a.mapping=t),a},_i.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},_i.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")};"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:v}})),"undefined"!=typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=v);var Wc=window.innerWidth,jc=window.innerHeight,Xc="\n    precision mediump float;\n\n    varying vec2 vUv;\n    uniform float u_time;\n\n    //\n    // Description : Array and textureless GLSL 2D/3D/4D simplex\n    //               noise functions.\n    //      Author : Ian McEwan, Ashima Arts.\n    //  Maintainer : ijm\n    //     Lastmod : 20110822 (ijm)\n    //     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\n    //               Distributed under the MIT License. See LICENSE file.\n    //               https://github.com/ashima/webgl-noise\n    //\n\n    vec3 mod289(vec3 x) {\n    return x - floor(x * (1.0 / 289.0)) * 289.0;\n    }\n\n    vec4 mod289(vec4 x) {\n    return x - floor(x * (1.0 / 289.0)) * 289.0;\n    }\n\n    vec4 permute(vec4 x) {\n        return mod289(((x*34.0)+1.0)*x);\n    }\n\n    vec4 taylorInvSqrt(vec4 r)\n    {\n    return 1.79284291400159 - 0.85373472095314 * r;\n    }\n\n    float snoise(vec3 v) {\n    const vec2  C = vec2(1.0/6.0, 1.0/3.0) ;\n    const vec4  D = vec4(0.0, 0.5, 1.0, 2.0);\n\n    // First corner\n    vec3 i  = floor(v + dot(v, C.yyy) );\n    vec3 x0 =   v - i + dot(i, C.xxx) ;\n\n    // Other corners\n    vec3 g = step(x0.yzx, x0.xyz);\n    vec3 l = 1.0 - g;\n    vec3 i1 = min( g.xyz, l.zxy );\n    vec3 i2 = max( g.xyz, l.zxy );\n\n    //   x0 = x0 - 0.0 + 0.0 * C.xxx;\n    //   x1 = x0 - i1  + 1.0 * C.xxx;\n    //   x2 = x0 - i2  + 2.0 * C.xxx;\n    //   x3 = x0 - 1.0 + 3.0 * C.xxx;\n    vec3 x1 = x0 - i1 + C.xxx;\n    vec3 x2 = x0 - i2 + C.yyy; // 2.0*C.x = 1/3 = C.y\n    vec3 x3 = x0 - D.yyy;      // -1.0+3.0*C.x = -0.5 = -D.y\n\n    // Permutations\n    i = mod289(i);\n    vec4 p = permute( permute( permute(\n                i.z + vec4(0.0, i1.z, i2.z, 1.0 ))\n            + i.y + vec4(0.0, i1.y, i2.y, 1.0 ))\n            + i.x + vec4(0.0, i1.x, i2.x, 1.0 ));\n\n    // Gradients: 7x7 points over a square, mapped onto an octahedron.\n    // The ring size 17*17 = 289 is close to a multiple of 49 (49*6 = 294)\n    float n_ = 0.142857142857; // 1.0/7.0\n    vec3  ns = n_ * D.wyz - D.xzx;\n\n    vec4 j = p - 49.0 * floor(p * ns.z * ns.z);  //  mod(p,7*7)\n\n    vec4 x_ = floor(j * ns.z);\n    vec4 y_ = floor(j - 7.0 * x_ );    // mod(j,N)\n\n    vec4 x = x_ *ns.x + ns.yyyy;\n    vec4 y = y_ *ns.x + ns.yyyy;\n    vec4 h = 1.0 - abs(x) - abs(y);\n\n    vec4 b0 = vec4( x.xy, y.xy );\n    vec4 b1 = vec4( x.zw, y.zw );\n\n    //vec4 s0 = vec4(lessThan(b0,0.0))*2.0 - 1.0;\n    //vec4 s1 = vec4(lessThan(b1,0.0))*2.0 - 1.0;\n    vec4 s0 = floor(b0)*2.0 + 1.0;\n    vec4 s1 = floor(b1)*2.0 + 1.0;\n    vec4 sh = -step(h, vec4(0.0));\n\n    vec4 a0 = b0.xzyw + s0.xzyw*sh.xxyy ;\n    vec4 a1 = b1.xzyw + s1.xzyw*sh.zzww ;\n\n    vec3 p0 = vec3(a0.xy,h.x);\n    vec3 p1 = vec3(a0.zw,h.y);\n    vec3 p2 = vec3(a1.xy,h.z);\n    vec3 p3 = vec3(a1.zw,h.w);\n\n    // Normalise gradients\n    vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\n    p0 *= norm.x;\n    p1 *= norm.y;\n    p2 *= norm.z;\n    p3 *= norm.w;\n\n    // Mix final noise value\n    vec4 m = max(0.6 - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), 0.0);\n    m = m * m;\n    return 42.0 * dot( m*m, vec4( dot(p0,x0), dot(p1,x1),\n                                    dot(p2,x2), dot(p3,x3) ) );\n    }\n\n\n    void main(){\n        vUv = uv;\n        vec3 pos = position;\n        float noiseFreq = 3.5;\n        float noiseAmp = .15;\n\n        vec3 noisePos = vec3(pos.x * noiseFreq + u_time / 4.0, pos.y, pos.z);\n        pos.z += snoise(noisePos) * noiseAmp;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(pos, 1.);\n    }\n\n    ",qc="\n    precision mediump float;\n    varying vec2 vUv;\n    uniform float u_time;\n\n    void main(){\n        gl_FragColor = vec4(255,255,255, 1.0);\n    }\n    ",Yc=void 0,Kc=void 0,Zc=void 0,Jc=void 0,Qc=void 0,$c=void 0;function eu(){Kc.aspect=Wc/jc,Kc.updateProjectionMatrix(),Zc.setSize(window.innerWidth,window.innerHeight)}var tu={init:function(e){(Kc=new In(70,Wc/jc,.01,1e3)).position.set(0,0,.5),Yc=new gs,(Zc=new ps).setSize(Wc,jc),Qc=new gc,$c={u_time:{value:0}};var t=new Zn(.6,.6,20,20),i=new Fn({uniforms:$c,vertexShader:Xc,fragmentShader:qc,side:E,wireframe:!0});(Jc=new Tn(t,i)).rotation.y=0,Jc.rotation.x=30,Yc.add(Jc),Qc=new gc,document.getElementById(e).appendChild(Zc.domElement),window.addEventListener("resize",eu,!1)},animate:function e(){requestAnimationFrame(e),$c.u_time.value=Qc.getElapsedTime(),Zc.render(Yc,Kc)},resize:eu};document.body.scrollTop=document.documentElement.scrollTop=0;var iu={name:"arCoin",mounted:function(){window.scroll(0,0),document.body.scrollTop=document.documentElement.scrollTop=0,window.onresize=function(){g.onWindowResize()},g.initWave("wave"),g.animate(),tu.init("netWave"),tu.animate()},data:function(){return{}},components:{animationBall:r.a,wave:g}},ru={render:function(){var e=this,t=e.$createElement,i=e._self._c||t;return i("div",{staticStyle:{"overflow-x":"hidden",position:"relative",width:"100%",height:"100%"}},[i("div",{staticClass:"container",staticStyle:{"background-color":"#000000",height:"100vh"}},[i("div",{staticStyle:{position:"relative",left:"0",width:"100%",height:"0px",top:"0vh"},attrs:{id:"netWave"}}),e._v(" "),i("el-row",{attrs:{gutter:10,align:"middle",justify:"center"}},[i("el-col",{staticStyle:{height:"800px"},attrs:{xs:{span:22,push:1},sm:{span:22,push:1},md:{span:22,push:1},lg:{span:22,push:1},xl:{span:22,push:1}}},[i("div",{staticClass:"hidden-md-and-down",staticStyle:{height:"20vh"}}),e._v(" "),i("div",{staticStyle:{height:"10vh"}}),e._v(" "),i("div",{staticClass:"title-text1",staticStyle:{color:"#FFFFFF"}},[e._v("EntySquare x Arweave")]),e._v(" "),i("div",{staticStyle:{height:"50px"}}),e._v(" "),i("div",[i("span",{staticClass:"title-text-color2"},[i("span",[e._v("全球唯一")]),e._v(" "),i("span",{staticStyle:{"white-space":"nowrap"}},[e._v("领先的Arweave")]),e._v(" "),i("span",{staticStyle:{"white-space":"nowrap"}},[e._v("算法提供商")])])]),e._v(" "),i("div",{staticStyle:{height:"100px"}}),e._v(" "),i("div",{staticClass:"title-text2",staticStyle:{color:"#E2E2EC"}},[e._v("EntySquare即将成为Arweave\n          "),i("span",{staticStyle:{"white-space":"nowrap"}},[e._v("第一大")]),e._v(" "),i("span",{staticStyle:{"white-space":"nowrap"}},[e._v("矿池和算力")])])])],1)],1),e._v(" "),i("img",{staticStyle:{height:"auto",width:"70vw","min-width":"700px",position:"absolute","z-index":"2",margin:"111px 0px 13px 5vw"},attrs:{src:"https://entysquare.oss-cn-shenzhen.aliyuncs.com/assets/ball_002.png"}}),e._v(" "),i("div",{staticClass:"container",staticStyle:{"background-color":"black"}},[i("div",{staticClass:"hidden-lg-and-up",staticStyle:{float:"left",width:"100%"}},[i("el-col",{staticStyle:{"text-align":"left"},attrs:{xs:{span:22,push:1},sm:{span:16,push:4},md:{span:16,push:4},lg:{span:12,push:2},xl:{span:8,push:4}}},[i("img",{staticStyle:{width:"20vw",height:"auto"},attrs:{src:"https://entysquare.oss-cn-shenzhen.aliyuncs.com/assets/ar_Group_1312.png"}}),e._v(" "),i("div",{staticStyle:{height:"50px"}})])],1),e._v(" "),i("el-row",{attrs:{gutter:10}},[i("el-col",{attrs:{xs:{span:22,push:1},sm:{span:16,push:4},md:{span:16,push:4},lg:{span:4,push:3},xl:{span:4,push:5}}},[i("div",{staticClass:"hidden-sm-and-down",staticStyle:{height:"60px"}}),e._v(" "),i("div",{staticClass:"hidden-md-and-down"},[i("img",{staticStyle:{width:"100%",height:"auto","max-width":"300px"},attrs:{src:"https://entysquare.oss-cn-shenzhen.aliyuncs.com/assets/ar_Group_1312.png"}})])]),e._v(" "),i("el-col",{staticStyle:{"text-align":"left"},attrs:{xs:{span:22,push:1},sm:{span:16,push:4},md:{span:16,push:4},lg:{span:12,push:6},xl:{span:8,push:8}}},[i("div",{staticStyle:{height:"10px"}}),e._v(" "),i("div",{staticStyle:{"font-weight":"400",color:"rgba(255, 255, 255, 0.6)","font-size":"24px"}},[e._v("高效率")]),e._v(" "),i("div",{staticStyle:{height:"10px"}}),e._v(" "),i("span",{staticClass:"title-text-color",staticStyle:{"text-align":"left"}},[i("span",[e._v("EntySquare")]),e._v(" "),i("span",{staticStyle:{"white-space":"nowrap"}},[e._v("比官方单台效率")]),e._v(" "),i("span",{staticStyle:{"white-space":"nowrap"}},[e._v("提升1.5X")])]),e._v(" "),i("div",{staticStyle:{height:"50px"}}),e._v(" "),i("div",{staticStyle:{"font-size":"24px","font-weight":"400",color:"#DCDCDC"}},[e._v("我们让每个人都可以参与到挖矿中。")]),e._v(" "),i("div",{staticStyle:{height:"5px"}}),e._v(" "),i("div",{staticStyle:{color:"#DCDCDC","font-size":"20px"}},[e._v("Entysquare是全球唯一领先的Arweave算法提供商，我们将开展高效加密货币挖矿所需的所有关键因素。\n          从构建分布式计算+分布式存储的技术，到为用户提供简化的挖矿系统——我们的用户能够简单、智能、快速地获取AR代币。\n        ")])])],1),e._v(" "),i("div",{staticStyle:{height:"100px"}})],1),e._v(" "),i("div",{staticClass:"container",staticStyle:{"background-color":"black"}},[i("div",{staticStyle:{height:"50px"}}),e._v(" "),i("div",{staticClass:"hidden-lg-and-up",staticStyle:{float:"left",width:"100%"}},[i("el-col",{staticStyle:{"text-align":"left"},attrs:{xs:{span:22,push:1},sm:{span:16,push:4},md:{span:16,push:4},lg:{span:12,push:2},xl:{span:8,push:4}}},[i("img",{staticStyle:{width:"20vw",height:"auto"},attrs:{src:"https://entysquare.oss-cn-shenzhen.aliyuncs.com/assets/ar_Group_1313.png"}}),e._v(" "),i("div",{staticStyle:{height:"50px"}})])],1),e._v(" "),i("el-row",{attrs:{gutter:10}},[i("el-col",{staticStyle:{"text-align":"left"},attrs:{xs:{span:22,push:1},sm:{span:16,push:4},md:{span:16,push:4},lg:{span:12,push:2},xl:{span:8,push:4}}},[i("div",{staticStyle:{height:"10px"}}),e._v(" "),i("div",{staticStyle:{"font-weight":"400",color:"rgba(255, 255, 255, 0.6)","font-size":"24px"}},[e._v("革命性挖矿技术")]),e._v(" "),i("div",{staticStyle:{height:"10px"}}),e._v(" "),i("span",{staticClass:"title-text-color",staticStyle:{"text-align":"left"}},[i("span",[e._v("首创分布式计算")]),e._v(" "),i("span",{staticStyle:{"white-space":"nowrap"}},[e._v("+分布式存储")])]),e._v(" "),i("div",{staticStyle:{height:"50px"}}),e._v(" "),i("div",{staticStyle:{color:"#DCDCDC","font-size":"20px"}},[e._v("\n          EntySquare突破官方挖矿方式，通过对存储集群方式复制存储尽可能多的数据，促进了数据的存储和分享效率，同时具有更佳的可扩展性架构，并通过RSA密码学累加器降低了对存储的需求。\n        ")])]),e._v(" "),i("el-col",{attrs:{xs:{span:22,push:1},sm:{span:16,push:4},md:{span:16,push:4},lg:{span:4,push:5},xl:{span:4,push:6}}},[i("div",{staticClass:"hidden-sm-and-down",staticStyle:{height:"60px"}}),e._v(" "),i("div",{staticClass:"hidden-md-and-down"},[i("img",{staticStyle:{width:"100%",height:"auto","max-width":"300px"},attrs:{src:"https://entysquare.oss-cn-shenzhen.aliyuncs.com/assets/ar_Group_1313.png"}})])])],1),e._v(" "),i("div",{staticStyle:{height:"100px"}})],1),e._v(" "),i("div",{staticStyle:{"background-color":"black",width:"100%"}},[i("el-row",{attrs:{gutter:10}},[i("el-col",{attrs:{xs:{span:22,push:1},sm:{span:20,push:4},md:{span:20,push:4},lg:{span:20,push:2},xl:{span:20,push:4}}},[i("div",{staticStyle:{color:"#DCDCDC","font-size":"20px","text-align":"left"}},[e._v("挖矿优势")]),e._v(" "),i("div",{staticStyle:{"text-align":"left"}},[i("span",{staticClass:"title-text-color",staticStyle:{"text-align":"left"}},[i("span",[e._v("极速、")]),e._v(" "),i("span",{staticStyle:{"white-space":"nowrap"}},[e._v("可扩展、")]),e._v(" "),i("span",{staticStyle:{"white-space":"nowrap"}},[e._v("集群化挖矿")])])])])],1)],1),e._v(" "),i("img",{staticStyle:{height:"auto",width:"70vw","min-width":"700px",position:"absolute","z-index":"2",margin:"-387px 0px 0px -80vw"},attrs:{src:"https://entysquare.oss-cn-shenzhen.aliyuncs.com/assets/ball_002.png"}}),e._v(" "),i("div",{staticStyle:{height:"50px","background-color":"black"}}),e._v(" "),i("div",{staticStyle:{"background-color":"black",width:"100%"}},[i("el-row",{attrs:{gutter:10}},[i("el-col",{attrs:{xs:{span:22,push:1},sm:{span:16,push:4},md:{span:16,push:4},lg:{span:6,push:2},xl:{span:4,push:4}}},[i("div",{staticStyle:{background:"rgb(34, 34, 34)","border-radius":"40px 40px 40px 40px",opacity:"1",border:"1px solid #000000","text-align":"left",padding:"56px",position:"absolute","z-index":"3"}},[i("div",{staticStyle:{height:"22px"}}),e._v(" "),i("img",{staticStyle:{height:"90px",width:"auto"},attrs:{src:"https://entysquare.oss-cn-shenzhen.aliyuncs.com/assets/doubleSphere.png"}}),e._v(" "),i("div",{staticStyle:{height:"50px"}}),e._v(" "),i("div",{staticStyle:{"font-size":"32px","font-weight":"500",color:"#FFFFFF"}},[e._v("可扩展性")]),e._v(" "),i("div",{staticStyle:{height:"24px"}}),e._v(" "),i("div",{staticStyle:{"font-size":"20px","font-weight":"400",color:"#DCDCDC",height:"180px"}},[e._v("\n            EntySquare具备高吞吐量的分布式计算和分布式存储技术，矿工们仅需存储部分历史区块，就可以立即开始挖矿，同时具有绝佳的可扩展性架构。\n          ")])]),e._v(" "),i("div",{staticStyle:{height:"50px"}})]),e._v(" "),i("el-col",{attrs:{xs:{span:22,push:1},sm:{span:16,push:4},md:{span:16,push:4},lg:{span:6,push:3},xl:{span:4,push:6}}},[i("div",{staticClass:"hidden-lg-and-up",staticStyle:{height:"530px","background-color":"black"}},[e._v(" xxxx")]),e._v(" "),i("div",{staticStyle:{background:"rgb(34, 34, 34)","border-radius":"40px 40px 40px 40px",opacity:"1",border:"1px solid #000000","text-align":"left",padding:"56px"}},[i("div",{staticStyle:{height:"22px"}}),e._v(" "),i("img",{staticStyle:{height:"90px",width:"auto"},attrs:{src:"https://entysquare.oss-cn-shenzhen.aliyuncs.com/assets/doubleSphere.png"}}),e._v(" "),i("div",{staticStyle:{height:"50px"}}),e._v(" "),i("div",{staticStyle:{"font-size":"32px","font-weight":"500",color:"#FFFFFF"}},[e._v("创新的算法")]),e._v(" "),i("div",{staticStyle:{height:"24px"}}),e._v(" "),i("div",{staticStyle:{"font-size":"20px","font-weight":"400",color:"#DCDCDC",height:"180px"}},[e._v("\n            通过我们的算法从而提高整个网络中的有效数据，扩大网络规模，加入集群，降低了单台的门槛的同时大大提升了矿池算力。\n          ")])]),e._v(" "),i("div",{staticStyle:{height:"50px"}})]),e._v(" "),i("el-col",{attrs:{xs:{span:22,push:1},sm:{span:16,push:4},md:{span:16,push:4},lg:{span:6,push:4},xl:{span:4,push:8}}},[i("div",{staticStyle:{background:"rgb(34, 34, 34)","border-radius":"40px 40px 40px 40px",opacity:"1",border:"1px solid #000000","text-align":"left",padding:"56px"}},[i("div",{staticStyle:{height:"22px"}}),e._v(" "),i("img",{staticStyle:{height:"90px",width:"auto"},attrs:{src:"https://entysquare.oss-cn-shenzhen.aliyuncs.com/assets/doubleSphere.png"}}),e._v(" "),i("div",{staticStyle:{height:"50px"}}),e._v(" "),i("div",{staticStyle:{"font-size":"32px","font-weight":"500",color:"#FFFFFF"}},[e._v("低门槛")]),e._v(" "),i("div",{staticStyle:{height:"24px"}}),e._v(" "),i("div",{staticStyle:{"font-size":"20px","font-weight":"400",color:"#DCDCDC",height:"180px"}},[e._v("\n            突破需要高性能 GPU的模式，发挥极致性能，在科学计算表现中挖矿效率能比官方单台效率提高 1.5 倍。具有高并行、高吞吐、低时延等特点\n          ")])]),e._v(" "),i("div",{staticStyle:{height:"50px"}})])],1)],1),e._v(" "),i("div",{staticStyle:{height:"100px","background-color":"black"}}),e._v(" "),i("div",{staticStyle:{position:"relative",left:"0",width:"100%",height:"0px",top:"-500px"},attrs:{id:"wave"}}),e._v(" "),i("div",{staticStyle:{"background-color":"black",width:"100%"}},[i("el-row",{attrs:{gutter:10}},[i("el-col",{attrs:{xs:{span:22,push:1},sm:{span:16,push:4},md:{span:16,push:4},lg:{span:20,push:2},xl:{span:16,push:4}}},[i("div",{staticClass:"title-text-color",staticStyle:{"text-align":"left"}},[i("span",{staticClass:"title-text-color"},[i("span",[e._v("我们使Arweave")]),e._v(" "),i("span",{staticStyle:{"white-space":"nowrap"}},[e._v(" 挖矿变得容易")])])]),e._v(" "),i("div",{staticStyle:{height:"60px"}}),e._v(" "),i("div",{staticStyle:{"font-size":"20px","font-weight":"400",color:"#DCDCDC","text-align":"left"}},[e._v("现在要有竞争力地挖矿，就必须在设施中投入大量资源、时间和精力。\n          我们的团队打造出最有效的挖矿系统，为您排忧解难。 这样您就可以全身心专注于跟踪市场，享受挖矿奖励的同时保持竞争力。\n        ")])])],1)],1),e._v(" "),i("div",{staticStyle:{height:"200px","background-color":"black"}}),e._v(" "),i("div",{staticStyle:{"background-color":"black",width:"100%"}},[i("el-row",{attrs:{gutter:10}},[i("el-col",{attrs:{xs:{span:22,push:1},sm:{span:16,push:4},md:{span:16,push:4},lg:{span:20,push:2},xl:{span:16,push:4}}},[i("div",{staticStyle:{"text-align":"left"}},[i("span",{staticClass:"title-text-color"},[e._v("常见问题")])])])],1)],1),e._v(" "),i("div",{staticStyle:{height:"100px","background-color":"black"}}),e._v(" "),i("div",{staticStyle:{"background-color":"black",width:"100%","text-align":"left","font-size":"28px","font-weight":"400",color:"#DCDCDC"}},[i("el-row",{attrs:{gutter:10}},[i("el-col",{attrs:{xs:{span:22,push:1},sm:{span:16,push:4},md:{span:16,push:4},lg:{span:8,push:2},xl:{span:6,push:4}}},[i("div",{staticStyle:{height:"100px",width:"100%"}},[i("span",{staticStyle:{"font-weight":"400",color:"#00EAC4","padding-right":"10px"}},[e._v("+")]),e._v(" 如何通过Entysquare赚钱？\n        ")])]),e._v(" "),i("el-col",{attrs:{xs:{span:22,push:1},sm:{span:16,push:4},md:{span:16,push:4},lg:{span:16,push:2},xl:{span:16,push:4}}},[i("div",{staticStyle:{height:"100px",width:"100%"}},[i("span",{staticStyle:{"font-weight":"400",color:"#00EAC4","padding-right":"10px"}},[e._v("+")]),e._v(" 我们能为您做什么？\n        ")])]),e._v(" "),i("el-col",{attrs:{xs:{span:22,push:1},sm:{span:16,push:4},md:{span:16,push:4},lg:{span:8,push:2},xl:{span:6,push:4}}},[i("div",{staticStyle:{height:"100px",width:"100%"}},[i("span",{staticStyle:{"font-weight":"400",color:"#00EAC4","padding-right":"10px"}},[e._v("+")]),e._v(" 详细了解我们的技术？\n        ")])]),e._v(" "),i("el-col",{attrs:{xs:{span:22,push:1},sm:{span:16,push:4},md:{span:16,push:4},lg:{span:16,push:2},xl:{span:16,push:4}}},[i("div",{staticStyle:{height:"100px",width:"100%"}},[i("span",{staticStyle:{"font-weight":"400",color:"#00EAC4","padding-right":"10px"}},[e._v("+")]),e._v(" 我们如何挖矿？\n        ")])])],1)],1),e._v(" "),i("div",{staticStyle:{height:"100px","background-color":"black"}})])},staticRenderFns:[]};var nu=i("VU/8")(iu,ru,!1,function(e){i("Juap")},"data-v-3c69ce54",null);t.default=nu.exports}});
//# sourceMappingURL=1.7e22688c22216c9765d6.js.map